{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "LogNewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "namesOfParticipants",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint128[]",
          "name": "price",
          "type": "uint128[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "users",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "targets",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "cliff",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "vestingTime",
          "type": "uint32"
        }
      ],
      "name": "LogNewCollectiveInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "LogNewPoolInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "LogTokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_assetValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_depositedShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointTWAP",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointPercentageVested",
          "type": "uint256"
        }
      ],
      "name": "LogTokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_assetValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_unstakedShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointTWAP",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointPercentageVested",
          "type": "uint256"
        }
      ],
      "name": "LogTokensUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BP",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VEST_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "calculateShareToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectiveInfo",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "vestingTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cliff",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "collectiveStart",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getClaimable",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_namesOfParticipants",
          "type": "string[]"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "vestingTime",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "cliff",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "collectiveStart",
              "type": "uint32"
            }
          ],
          "internalType": "struct BuidlCollective.Collective",
          "name": "_collectiveInfo",
          "type": "tuple"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint128[]",
          "name": "_prices",
          "type": "uint128[]"
        },
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_targets",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastCheckpoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTWAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "namesOfParticipants",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "noOfTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pokeApproval",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "readToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "price",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "internalType": "struct BuidlCollective.TokenInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetValue",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startCollective",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "price",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetValueLeft",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetValueLeft",
          "type": "uint256"
        }
      ],
      "name": "unstakeWithoutClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "updateAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositedShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointTWAP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointPercentageVested",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/BuidlCollective.sol",
    "1": "contracts/solmate/src/tokens/ERC20.sol",
    "2": "interfaces/IBuidlCollective.sol"
  },
  "ast": {
    "absolutePath": "contracts/BuidlCollective.sol",
    "exportedSymbols": {
      "BuidlCollective": [
        1357
      ],
      "ERC20": [
        1752
      ],
      "IBuidlCollective": [
        1823
      ]
    },
    "id": 1358,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "interfaces/IBuidlCollective.sol",
        "file": "../interfaces/IBuidlCollective.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1358,
        "sourceUnit": 1824,
        "src": "25:44:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/solmate/src/tokens/ERC20.sol",
        "file": "./solmate/src/tokens/ERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1358,
        "sourceUnit": 1753,
        "src": "70:53:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "78:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1752,
              "src": "2361:5:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "2361:5:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "IBuidlCollective",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1823,
              "src": "2368:16:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "2368:16:0"
          }
        ],
        "canonicalName": "BuidlCollective",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "434:1899:0",
          "text": "@title BuidlCollective\n @notice Create a uniform vesting schedule for multiple underlying tokens, which can be redeemed gradually through staking the ERC20 representation LP token.\n     ###############################################\n     BuidlCollective Specification\n     The BuidlCollective provides a way for co-vesting to be implemented on the block chain,\n         allowing multiple parties who seek to co-vest their tokens to initialize a collective,\n         providing approval for their corresponding liquid tokens, and start the vesting sychronously. \n         After the covesting is started, underlying tokens would be released according to the schedule and \n         be allocated to the staked ERC20 representation LP proportionally. Each LP tokens are guarantteed the \n         same amount of underlying tokens. \n     LP tokens can be freely transferred but would need to undergo staking in order to convert to the underlying tokens.\n     If 100% of representation LP tokens are staked, then the staked LP tokens are converted to underlying tokens\n     just like the vesting schedule\n     If 50% of representation LP tokens are staked, then the staked LP tokens are converted to underlying tokens\n     with half of the vesting time needed. \n     There is a 3-day releaseFactor that adjusts the rate staking position can claim their underlying tokens.\n     If a staked position can convert LP to 1% of the underlying tokens by staking 5 days. Since 5 days is more \n     than the releaseFactor (3-day), 1% full amount is converted. \n     If a staked position can convert LP to 1% of the underlying tokens by staking 1.5 days. Since 1.5 days is less\n     than the releaseFactor (3-day), pro-rated amount is converted, in this case, 1.5/3 * 1% = 0.5% is converted.\n     ###############################################"
        },
        "fullyImplemented": true,
        "id": 1357,
        "linearizedBaseContracts": [
          1357,
          1823,
          1752
        ],
        "name": "BuidlCollective",
        "nameLocation": "2342:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "9cfdbd5e",
            "id": 12,
            "mutability": "constant",
            "name": "BP",
            "nameLocation": "2599:2:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "2576:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 10,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2576:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2604:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "7d9fce4d",
            "id": 17,
            "mutability": "constant",
            "name": "VEST_MULTIPLIER",
            "nameLocation": "2639:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "2615:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2615:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 14,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2657:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3138",
                "id": 15,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2663:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "2657:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.Collective",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "vestingTime",
                "nameLocation": "2925:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "2918:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2918:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "cliff",
                "nameLocation": "3036:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "3029:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3029:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "collectiveStart",
                "nameLocation": "3155:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "3148:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3148:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Collective",
            "nameLocation": "2852:10:0",
            "nodeType": "StructDefinition",
            "scope": 1357,
            "src": "2845:332:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.TokenInfo",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "target",
                "nameLocation": "3258:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "3250:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3250:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "3319:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "3311:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "3311:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "3463:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "3455:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3455:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenInfo",
            "nameLocation": "3190:9:0",
            "nodeType": "StructDefinition",
            "scope": 1357,
            "src": "3183:291:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.UserInfo",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "depositedShare",
                "nameLocation": "3570:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "3562:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3562:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "lastCheckpointTWAP",
                "nameLocation": "3650:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "3642:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3642:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "lastCheckpointTime",
                "nameLocation": "3739:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "3731:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3731:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "lastCheckpointPercentageVested",
                "nameLocation": "3866:30:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "3858:38:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3858:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "3487:8:0",
            "nodeType": "StructDefinition",
            "scope": 1357,
            "src": "3480:423:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "collectiveStarted",
            "nameLocation": "4109:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4104:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 41,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "4104:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "collectiveInitialized",
            "nameLocation": "4137:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4132:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 43,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "4132:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 46,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "4180:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4165:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4165:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fed45587",
            "id": 49,
            "mutability": "mutable",
            "name": "namesOfParticipants",
            "nameLocation": "4208:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4192:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 47,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "4192:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 48,
              "nodeType": "ArrayTypeName",
              "src": "4192:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "36e9b344",
            "id": 51,
            "mutability": "mutable",
            "name": "noOfTokens",
            "nameLocation": "4248:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4233:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4233:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 54,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "4282:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4265:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4265:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 53,
              "nodeType": "ArrayTypeName",
              "src": "4265:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5dab711",
            "id": 59,
            "mutability": "mutable",
            "name": "tokenInfo",
            "nameLocation": "4332:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4295:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
              "typeString": "mapping(address => struct BuidlCollective.TokenInfo)"
            },
            "typeName": {
              "id": 58,
              "keyType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4303:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4295:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                "typeString": "mapping(address => struct BuidlCollective.TokenInfo)"
              },
              "valueType": {
                "id": 57,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 56,
                  "name": "TokenInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4314:9:0"
                },
                "referencedDeclaration": 31,
                "src": "4314:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenInfo_$31_storage_ptr",
                  "typeString": "struct BuidlCollective.TokenInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01e1d114",
            "id": 61,
            "mutability": "mutable",
            "name": "totalAssets",
            "nameLocation": "4363:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4348:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4348:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e0c9802f",
            "id": 64,
            "mutability": "mutable",
            "name": "collectiveInfo",
            "nameLocation": "4399:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4381:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Collective_$24_storage",
              "typeString": "struct BuidlCollective.Collective"
            },
            "typeName": {
              "id": 63,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62,
                "name": "Collective",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24,
                "src": "4381:10:0"
              },
              "referencedDeclaration": 24,
              "src": "4381:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Collective_$24_storage_ptr",
                "typeString": "struct BuidlCollective.Collective"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5da69cb6",
            "id": 69,
            "mutability": "mutable",
            "name": "releaseFactor",
            "nameLocation": "4682:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4667:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4667:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              },
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3836343030",
                "id": 66,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4698:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "33",
                "id": 67,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4706:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "src": "4698:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1959a002",
            "id": 74,
            "mutability": "mutable",
            "name": "userInfo",
            "nameLocation": "4754:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4718:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
              "typeString": "mapping(address => struct BuidlCollective.UserInfo)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4726:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4718:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                "typeString": "mapping(address => struct BuidlCollective.UserInfo)"
              },
              "valueType": {
                "id": 72,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 71,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "4737:8:0"
                },
                "referencedDeclaration": 40,
                "src": "4737:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
                  "typeString": "struct BuidlCollective.UserInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d32e81a5",
            "id": 76,
            "mutability": "mutable",
            "name": "lastCheckpoint",
            "nameLocation": "4818:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4803:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 75,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4803:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77a1d3a",
            "id": 78,
            "mutability": "mutable",
            "name": "lastTWAP",
            "nameLocation": "4936:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4921:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 77,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4921:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "817b1cd2",
            "id": 80,
            "mutability": "mutable",
            "name": "totalStaked",
            "nameLocation": "5012:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1357,
            "src": "4997:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4997:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "5056:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5074:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5074:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 85,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "5088:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5074:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5066:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5066:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "5066:28:0"
                },
                {
                  "id": 89,
                  "nodeType": "PlaceholderStatement",
                  "src": "5104:1:0"
                }
              ]
            },
            "id": 91,
            "name": "onlyAdmin",
            "nameLocation": "5044:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5053:2:0"
            },
            "src": "5035:77:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "5261:285:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 94,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5275:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5275:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 96,
                      "name": "lastCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "5293:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5275:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 121,
                    "nodeType": "Block",
                    "src": "5514:26:0",
                    "statements": [
                      {
                        "id": 120,
                        "nodeType": "PlaceholderStatement",
                        "src": "5528:1:0"
                      }
                    ]
                  },
                  "id": 122,
                  "nodeType": "IfStatement",
                  "src": "5271:269:0",
                  "trueBody": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "5309:199:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98,
                            "name": "lastTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5323:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 99,
                                      "name": "totalStaked",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80,
                                      "src": "5352:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 100,
                                      "name": "BP",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12,
                                      "src": "5366:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "5352:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 102,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "5372:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 103,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "5372:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 104,
                                          "name": "lastCheckpoint",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 76,
                                          "src": "5390:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5372:32:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 106,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5371:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5352:53:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5351:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 109,
                              "name": "totalAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "5425:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5351:85:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5323:113:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "5323:113:0"
                      },
                      {
                        "expression": {
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 113,
                            "name": "lastCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "5450:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 114,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5467:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5467:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5450:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 117,
                        "nodeType": "ExpressionStatement",
                        "src": "5450:32:0"
                      },
                      {
                        "id": 118,
                        "nodeType": "PlaceholderStatement",
                        "src": "5496:1:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 92,
              "nodeType": "StructuredDocumentation",
              "src": "5118:110:0",
              "text": "@notice update lastTWAP and lastCheckpoint.\n     this function is called during stake/claim/unstake"
            },
            "id": 124,
            "name": "updateCheckpoint",
            "nameLocation": "5242:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5258:2:0"
            },
            "src": "5233:313:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "5688:68:0",
              "statements": [
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5698:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 139,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5706:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5706:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5698:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "5698:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 144,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "5743:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 143,
                      "name": "LogNewAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "5731:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "EmitStatement",
                  "src": "5726:23:0"
                }
              ]
            },
            "id": 148,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 133,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 126,
                    "src": "5661:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 134,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 128,
                    "src": "5668:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 135,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 130,
                    "src": "5677:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 136,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 132,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1752,
                  "src": "5655:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5655:32:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5587:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "5573:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5573:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "5616:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "5602:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5602:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "5639:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "5633:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5633:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5563:91:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5688:0:0"
            },
            "scope": 1357,
            "src": "5552:204:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "6821:907:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 171,
                          "name": "collectiveInitialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6839:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6864:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6839:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6831:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6831:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "6831:39:0"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "collectiveInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "6880:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6904:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6880:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "6880:28:0"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 180,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "6918:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 181,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6926:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6926:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6918:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "6918:18:0"
                },
                {
                  "expression": {
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 185,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "6946:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 186,
                      "name": "_collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "6963:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_memory_ptr",
                        "typeString": "struct BuidlCollective.Collective memory"
                      }
                    },
                    "src": "6946:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collective_$24_storage",
                      "typeString": "struct BuidlCollective.Collective storage ref"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "6946:32:0"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 189,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "6988:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$24_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectiveStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "6988:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7021:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6988:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "6988:34:0"
                },
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "tokenLength",
                      "nameLocation": "7040:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 280,
                      "src": "7032:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7032:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 199,
                  "initialValue": {
                    "expression": {
                      "id": 197,
                      "name": "_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "7054:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7054:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7032:36:0"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "7120:322:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 211,
                                    "name": "tokenInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "7142:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                                      "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                    }
                                  },
                                  "id": 215,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 212,
                                      "name": "_tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 158,
                                      "src": "7152:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 214,
                                    "indexExpression": {
                                      "id": 213,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 201,
                                      "src": "7160:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7152:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7142:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                                    "typeString": "struct BuidlCollective.TokenInfo storage ref"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 28,
                                "src": "7142:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7173:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7142:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "544f4b454e204144445245535320414c524541445920494e495449414c495a4544",
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7176:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a6efd12b59e9e24f406ebcc104d1d7f9956789944bce063d3d31e6d0baf808f7",
                                "typeString": "literal_string \"TOKEN ADDRESS ALREADY INITIALIZED\""
                              },
                              "value": "TOKEN ADDRESS ALREADY INITIALIZED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a6efd12b59e9e24f406ebcc104d1d7f9956789944bce063d3d31e6d0baf808f7",
                                "typeString": "literal_string \"TOKEN ADDRESS ALREADY INITIALIZED\""
                              }
                            ],
                            "id": 210,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7134:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7134:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "ExpressionStatement",
                        "src": "7134:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 225,
                                "name": "_namesOfParticipants",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 152,
                                "src": "7251:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 227,
                              "indexExpression": {
                                "id": 226,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "7272:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7251:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 222,
                              "name": "namesOfParticipants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "7226:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7226:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                              "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7226:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 229,
                        "nodeType": "ExpressionStatement",
                        "src": "7226:49:0"
                      },
                      {
                        "assignments": [
                          232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 232,
                            "mutability": "mutable",
                            "name": "t",
                            "nameLocation": "7306:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 261,
                            "src": "7289:18:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo"
                            },
                            "typeName": {
                              "id": 231,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 230,
                                "name": "TokenInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 31,
                                "src": "7289:9:0"
                              },
                              "referencedDeclaration": 31,
                              "src": "7289:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$31_storage_ptr",
                                "typeString": "struct BuidlCollective.TokenInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 244,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 234,
                                "name": "_targets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "7320:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "id": 235,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "7329:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7320:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 237,
                                "name": "_prices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "7333:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                                  "typeString": "uint128[] memory"
                                }
                              },
                              "id": 239,
                              "indexExpression": {
                                "id": 238,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "7341:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7333:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 240,
                                "name": "_users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "7345:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 242,
                              "indexExpression": {
                                "id": 241,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "7352:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7345:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 233,
                            "name": "TokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "7310:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TokenInfo_$31_storage_ptr_$",
                              "typeString": "type(struct BuidlCollective.TokenInfo storage pointer)"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7310:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                            "typeString": "struct BuidlCollective.TokenInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7289:66:0"
                      },
                      {
                        "expression": {
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 245,
                              "name": "tokenInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "7369:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                              }
                            },
                            "id": 249,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 246,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 158,
                                "src": "7379:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 248,
                              "indexExpression": {
                                "id": 247,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "7387:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7379:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7369:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                              "typeString": "struct BuidlCollective.TokenInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 250,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "7393:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "src": "7369:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                            "typeString": "struct BuidlCollective.TokenInfo storage ref"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "7369:25:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 256,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 158,
                                "src": "7420:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 258,
                              "indexExpression": {
                                "id": 257,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "7428:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7420:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 253,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "7408:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7408:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7408:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "7408:23:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 204,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "7098:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 205,
                      "name": "tokenLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "7102:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7098:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 262,
                  "initializationExpression": {
                    "assignments": [
                      201
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7091:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "7083:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7083:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 203,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7095:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7083:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7115:3:0",
                      "subExpression": {
                        "id": 207,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "7115:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 209,
                    "nodeType": "ExpressionStatement",
                    "src": "7115:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "7078:364:0"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 263,
                      "name": "noOfTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "7451:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 264,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "7464:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7464:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7451:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "7451:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 269,
                        "name": "_namesOfParticipants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "7533:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "id": 270,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "7567:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 271,
                        "name": "_prices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "7588:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                          "typeString": "uint128[] memory"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "7609:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 273,
                        "name": "_targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "7629:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 274,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "7651:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cliff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "7651:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 276,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "7685:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vestingTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "7685:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                          "typeString": "uint128[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 268,
                      "name": "LogNewCollectiveInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1774,
                      "src": "7492:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint128_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (string memory[] memory,address[] memory,uint128[] memory,address[] memory,uint256[] memory,uint32,uint32)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7492:229:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "EmitStatement",
                  "src": "7487:234:0"
                }
              ]
            },
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "5936:620:0",
              "text": "@notice admin function to initialize a collective\n  this version assumes 1 tokens are sent in by 1 address\n  @param _namesOfParticipants name of participants\n  @param _collectiveInfo defines vestingPeriod and cliff, startTime would be override in startCollective()\n  @param _tokens name of participants\n  @param _prices price of each tokens, would be used for calculating shares with _targets\n  @param _users address of users to pull funds during startCollective()\n  @param _targets tokens amounts\n  TODO: change name and symbol of token => name of collective"
            },
            "functionSelector": "6b954292",
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "6570:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "_namesOfParticipants",
                  "nameLocation": "6606:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6590:36:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 150,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6590:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 151,
                    "nodeType": "ArrayTypeName",
                    "src": "6590:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_collectiveInfo",
                  "nameLocation": "6654:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6636:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collective_$24_memory_ptr",
                    "typeString": "struct BuidlCollective.Collective"
                  },
                  "typeName": {
                    "id": 154,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153,
                      "name": "Collective",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24,
                      "src": "6636:10:0"
                    },
                    "referencedDeclaration": 24,
                    "src": "6636:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collective_$24_storage_ptr",
                      "typeString": "struct BuidlCollective.Collective"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "6696:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6679:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 156,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6679:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 157,
                    "nodeType": "ArrayTypeName",
                    "src": "6679:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_prices",
                  "nameLocation": "6730:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6713:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                    "typeString": "uint128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 159,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "6713:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 160,
                    "nodeType": "ArrayTypeName",
                    "src": "6713:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                      "typeString": "uint128[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "6764:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6747:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 162,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6747:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 163,
                    "nodeType": "ArrayTypeName",
                    "src": "6747:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "_targets",
                  "nameLocation": "6797:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6780:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 165,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6780:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 166,
                    "nodeType": "ArrayTypeName",
                    "src": "6780:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6580:231:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6821:0:0"
            },
            "scope": 1357,
            "src": "6561:1167:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "7951:79:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 290,
                          "name": "collectiveStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "7969:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7990:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7969:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7961:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7961:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "7961:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "8019:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 295,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "8006:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8006:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "8006:17:0"
                }
              ]
            },
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "7733:157:0",
              "text": "@notice admin function to cancel a collective, only before startCollective()\n  @param _to address to send back the eth during contract deployment"
            },
            "functionSelector": "4c33fe94",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 286,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "7941:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7941:9:0"
              }
            ],
            "name": "cancel",
            "nameLocation": "7904:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7927:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "7911:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7911:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7910:21:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7951:0:0"
            },
            "scope": 1357,
            "src": "7895:135:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "8202:71:0",
              "statements": [
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 308,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "8212:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 309,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "8220:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8212:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "8212:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 313,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "8256:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 312,
                      "name": "LogNewAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "8244:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8244:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "EmitStatement",
                  "src": "8239:27:0"
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "8036:102:0",
              "text": "@notice admin function to transfer admin ownership\n  @param _newAdmin address of new admin"
            },
            "functionSelector": "e2f273bd",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 305,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "8192:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8192:9:0"
              }
            ],
            "name": "updateAdmin",
            "nameLocation": "8152:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "8172:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "8164:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8164:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8163:19:0"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8202:0:0"
            },
            "scope": 1357,
            "src": "8143:130:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "8675:964:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 324,
                          "name": "collectiveStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "8693:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8714:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "8693:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8685:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8685:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "8685:35:0"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 329,
                      "name": "collectiveStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "8730:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8750:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8730:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "8730:24:0"
                },
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "nameLocation": "8781:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 453,
                      "src": "8764:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8764:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 336,
                        "nodeType": "ArrayTypeName",
                        "src": "8764:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 339,
                  "initialValue": {
                    "id": 338,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54,
                    "src": "8791:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8764:33:0"
                },
                {
                  "assignments": [
                    342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 342,
                      "mutability": "mutable",
                      "name": "_tokenInfo",
                      "nameLocation": "8824:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 453,
                      "src": "8807:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                        "typeString": "struct BuidlCollective.TokenInfo"
                      },
                      "typeName": {
                        "id": 341,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 340,
                          "name": "TokenInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31,
                          "src": "8807:9:0"
                        },
                        "referencedDeclaration": 31,
                        "src": "8807:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenInfo_$31_storage_ptr",
                          "typeString": "struct BuidlCollective.TokenInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8807:27:0"
                },
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "_totalAssets",
                      "nameLocation": "8852:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 453,
                      "src": "8844:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8844:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 346,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8844:20:0"
                },
                {
                  "body": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "8915:483:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 357,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "8929:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 358,
                              "name": "tokenInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "8942:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                              }
                            },
                            "id": 362,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 359,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 337,
                                "src": "8952:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 361,
                              "indexExpression": {
                                "id": 360,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "8960:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8952:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8942:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                              "typeString": "struct BuidlCollective.TokenInfo storage ref"
                            }
                          },
                          "src": "8929:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                            "typeString": "struct BuidlCollective.TokenInfo memory"
                          }
                        },
                        "id": 364,
                        "nodeType": "ExpressionStatement",
                        "src": "8929:34:0"
                      },
                      {
                        "assignments": [
                          366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 366,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "8985:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 424,
                            "src": "8977:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 365,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8977:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 369,
                        "initialValue": {
                          "expression": {
                            "id": 367,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "8994:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "target",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "8994:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8977:34:0"
                      },
                      {
                        "assignments": [
                          371
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 371,
                            "mutability": "mutable",
                            "name": "contributor",
                            "nameLocation": "9033:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 424,
                            "src": "9025:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 370,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9025:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 374,
                        "initialValue": {
                          "expression": {
                            "id": 372,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "9047:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "9047:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9025:37:0"
                      },
                      {
                        "assignments": [
                          376
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 376,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "9084:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 424,
                            "src": "9076:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 375,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "9076:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 379,
                        "initialValue": {
                          "expression": {
                            "id": 377,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "9092:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "9092:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9076:32:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 386,
                              "name": "contributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "9153:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 389,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9174:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                    "typeString": "contract BuidlCollective"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                    "typeString": "contract BuidlCollective"
                                  }
                                ],
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9166:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 387,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9166:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9166:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 391,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "9181:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 381,
                                    "name": "_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 337,
                                    "src": "9128:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 383,
                                  "indexExpression": {
                                    "id": 382,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 348,
                                    "src": "9136:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9128:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 380,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1752,
                                "src": "9122:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$1752_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9122:17:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1752",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1561,
                            "src": "9122:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9122:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 393,
                        "nodeType": "ExpressionStatement",
                        "src": "9122:66:0"
                      },
                      {
                        "assignments": [
                          395
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 395,
                            "mutability": "mutable",
                            "name": "assetValue",
                            "nameLocation": "9210:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 424,
                            "src": "9202:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 394,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9202:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 414,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 396,
                                    "name": "target",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 366,
                                    "src": "9224:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 397,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 376,
                                    "src": "9233:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "9224:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9241:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9247:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "9241:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "9224:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 403,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9223:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9269:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 406,
                                        "name": "_tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 337,
                                        "src": "9281:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 408,
                                      "indexExpression": {
                                        "id": 407,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 348,
                                        "src": "9289:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9281:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 405,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1752,
                                    "src": "9275:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$1752_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9275:17:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$1752",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1382,
                                "src": "9275:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9275:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "9269:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9223:80:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9202:101:0"
                      },
                      {
                        "expression": {
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 415,
                            "name": "_totalAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "9317:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 416,
                            "name": "assetValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "9333:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9317:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 418,
                        "nodeType": "ExpressionStatement",
                        "src": "9317:26:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 420,
                              "name": "contributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "9363:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 421,
                              "name": "assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "9376:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 419,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1723,
                            "src": "9357:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "9357:30:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 350,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "8890:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 351,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "8894:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8894:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8890:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 425,
                  "initializationExpression": {
                    "assignments": [
                      348
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8887:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 425,
                        "src": "8879:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8879:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 349,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8879:9:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8910:3:0",
                      "subExpression": {
                        "id": 354,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "8910:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 356,
                    "nodeType": "ExpressionStatement",
                    "src": "8910:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "8874:524:0"
                },
                {
                  "expression": {
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 426,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "9407:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$24_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectiveStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "9407:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 431,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9447:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9447:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9440:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9440:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9440:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "9407:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "9407:56:0"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 436,
                      "name": "lastCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "9473:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 437,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "9490:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collectiveStart",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "9490:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 439,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "9523:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cliff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "9523:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "9490:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "9473:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "9473:70:0"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "9553:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 445,
                      "name": "_totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "9567:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9553:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "9553:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 449,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9616:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9616:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 448,
                      "name": "LogNewPoolInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1778,
                      "src": "9594:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9594:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "EmitStatement",
                  "src": "9589:43:0"
                }
              ]
            },
            "documentation": {
              "id": 318,
              "nodeType": "StructuredDocumentation",
              "src": "8279:345:0",
              "text": "@notice admin function to start the collective\n     during starting the contract would pull the predefined quantities of tokens \n     from the users defined in initialize()\n     any user defined in the initialize() that has not done approve in advance for their tokens\n     would lead to failure of this function"
            },
            "functionSelector": "4ae99d30",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 320,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "8665:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8665:9:0"
              }
            ],
            "name": "startCollective",
            "nameLocation": "8638:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8653:2:0"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8675:0:0"
            },
            "scope": 1357,
            "src": "8629:1010:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "10084:103:0",
              "statements": [
                {
                  "assignments": [
                    466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 466,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "nameLocation": "10102:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 477,
                      "src": "10094:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 465,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10094:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "baseExpression": {
                      "id": 467,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "10114:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 469,
                    "indexExpression": {
                      "id": 468,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "10121:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10114:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10094:36:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 471,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "10148:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 472,
                          "name": "tokenInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "10159:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                          }
                        },
                        "id": 474,
                        "indexExpression": {
                          "id": 473,
                          "name": "tokenAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "10169:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10159:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                          "typeString": "struct BuidlCollective.TokenInfo storage ref"
                        }
                      }
                    ],
                    "id": 475,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10147:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                      "typeString": "tuple(address,struct BuidlCollective.TokenInfo storage ref)"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 476,
                  "nodeType": "Return",
                  "src": "10140:40:0"
                }
              ]
            },
            "documentation": {
              "id": 455,
              "nodeType": "StructuredDocumentation",
              "src": "9823:157:0",
              "text": "@notice function to read a defined tokens' address and specification in the collective\n @param  _tokenId position of the token during initialize()"
            },
            "functionSelector": "a9320688",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "readToken",
            "nameLocation": "9994:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10021:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "10013:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10013:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10003:32:0"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "10057:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10057:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "10066:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenInfo_$31_memory_ptr",
                    "typeString": "struct BuidlCollective.TokenInfo"
                  },
                  "typeName": {
                    "id": 462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 461,
                      "name": "TokenInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "10066:9:0"
                    },
                    "referencedDeclaration": 31,
                    "src": "10066:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenInfo_$31_storage_ptr",
                      "typeString": "struct BuidlCollective.TokenInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10056:27:0"
            },
            "scope": 1357,
            "src": "9985:202:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 564,
              "nodeType": "Block",
              "src": "10427:513:0",
              "statements": [
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "approvals",
                      "nameLocation": "10451:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 564,
                      "src": "10437:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 487,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10437:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 488,
                        "nodeType": "ArrayTypeName",
                        "src": "10437:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 493,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "10474:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10474:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10463:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bool[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 490,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10467:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 491,
                        "nodeType": "ArrayTypeName",
                        "src": "10467:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10463:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10437:51:0"
                },
                {
                  "assignments": [
                    498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 498,
                      "mutability": "mutable",
                      "name": "contributor",
                      "nameLocation": "10506:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 564,
                      "src": "10498:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 497,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10498:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 499,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10498:19:0"
                },
                {
                  "assignments": [
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "10535:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 564,
                      "src": "10527:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10527:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10527:17:0"
                },
                {
                  "body": {
                    "id": 560,
                    "nodeType": "Block",
                    "src": "10594:314:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 513,
                            "name": "contributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "10608:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 514,
                                "name": "tokenInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "10622:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                }
                              },
                              "id": 518,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 515,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54,
                                  "src": "10632:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 517,
                                "indexExpression": {
                                  "id": 516,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 504,
                                  "src": "10639:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10632:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10622:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                                "typeString": "struct BuidlCollective.TokenInfo storage ref"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "10622:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10608:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "10608:39:0"
                      },
                      {
                        "expression": {
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 522,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "10661:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 529,
                                "name": "contributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
                                "src": "10700:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 532,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "10721:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                      "typeString": "contract BuidlCollective"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                      "typeString": "contract BuidlCollective"
                                    }
                                  ],
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10713:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 530,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10713:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10713:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 524,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54,
                                      "src": "10679:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 526,
                                    "indexExpression": {
                                      "id": 525,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 504,
                                      "src": "10686:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10679:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 523,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1752,
                                  "src": "10673:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1752_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10673:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1752",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1394,
                              "src": "10673:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10673:54:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10661:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "10661:66:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 537,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "10745:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 538,
                                "name": "tokenInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "10758:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                }
                              },
                              "id": 542,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 539,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54,
                                  "src": "10768:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 541,
                                "indexExpression": {
                                  "id": 540,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 504,
                                  "src": "10775:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10768:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10758:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                                "typeString": "struct BuidlCollective.TokenInfo storage ref"
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "10758:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10745:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 558,
                          "nodeType": "Block",
                          "src": "10845:53:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 552,
                                    "name": "approvals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 489,
                                    "src": "10863:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 554,
                                  "indexExpression": {
                                    "id": 553,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 504,
                                    "src": "10873:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10863:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10878:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "10863:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 557,
                              "nodeType": "ExpressionStatement",
                              "src": "10863:20:0"
                            }
                          ]
                        },
                        "id": 559,
                        "nodeType": "IfStatement",
                        "src": "10741:157:0",
                        "trueBody": {
                          "id": 551,
                          "nodeType": "Block",
                          "src": "10787:52:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 545,
                                    "name": "approvals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 489,
                                    "src": "10805:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 547,
                                  "indexExpression": {
                                    "id": 546,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 504,
                                    "src": "10815:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10805:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 548,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10820:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "10805:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 550,
                              "nodeType": "ExpressionStatement",
                              "src": "10805:19:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 506,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "10570:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 507,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "10574:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10574:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10570:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 561,
                  "initializationExpression": {
                    "assignments": [
                      504
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10567:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 561,
                        "src": "10559:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10559:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 505,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10559:9:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10589:3:0",
                      "subExpression": {
                        "id": 510,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "10589:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 512,
                    "nodeType": "ExpressionStatement",
                    "src": "10589:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "10554:354:0"
                },
                {
                  "expression": {
                    "id": 562,
                    "name": "approvals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 489,
                    "src": "10924:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "functionReturnParameters": 484,
                  "id": 563,
                  "nodeType": "Return",
                  "src": "10917:16:0"
                }
              ]
            },
            "documentation": {
              "id": 479,
              "nodeType": "StructuredDocumentation",
              "src": "10193:169:0",
              "text": "@notice only when all tokens involved return true can the admin start the collective \n @return return if tokens approval is completed for each tokens involved"
            },
            "functionSelector": "a4c8b46b",
            "id": 565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pokeApproval",
            "nameLocation": "10376:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10388:2:0"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "10412:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 481,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "10412:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 482,
                    "nodeType": "ArrayTypeName",
                    "src": "10412:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10411:15:0"
            },
            "scope": 1357,
            "src": "10367:573:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "11169:285:0",
              "statements": [
                {
                  "assignments": [
                    575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 575,
                      "mutability": "mutable",
                      "name": "share",
                      "nameLocation": "11187:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "11179:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 574,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11179:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 579,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 577,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "11217:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 576,
                      "name": "calculateShareToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "11195:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11195:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11179:46:0"
                },
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "_claimables",
                      "nameLocation": "11252:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "11235:28:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 582,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11235:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 583,
                        "nodeType": "ArrayTypeName",
                        "src": "11235:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 591,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 588,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "11280:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "11280:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11266:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11270:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 586,
                        "nodeType": "ArrayTypeName",
                        "src": "11270:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11266:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11235:59:0"
                },
                {
                  "body": {
                    "id": 612,
                    "nodeType": "Block",
                    "src": "11348:71:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 603,
                              "name": "_claimables",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "11362:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 605,
                            "indexExpression": {
                              "id": 604,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 593,
                              "src": "11374:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11362:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 607,
                                "name": "share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 575,
                                "src": "11399:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 608,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 593,
                                "src": "11406:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 606,
                              "name": "convertShareToToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 895,
                              "src": "11379:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11379:29:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11362:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 611,
                        "nodeType": "ExpressionStatement",
                        "src": "11362:46:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 596,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 593,
                      "src": "11324:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 597,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "11328:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11328:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11324:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 613,
                  "initializationExpression": {
                    "assignments": [
                      593
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11317:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "11309:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11309:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 595,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11321:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11309:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11343:3:0",
                      "subExpression": {
                        "id": 600,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "11343:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 602,
                    "nodeType": "ExpressionStatement",
                    "src": "11343:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "11304:115:0"
                },
                {
                  "expression": {
                    "id": 614,
                    "name": "_claimables",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 584,
                    "src": "11436:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 573,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "11429:18:0"
                }
              ]
            },
            "documentation": {
              "id": 566,
              "nodeType": "StructuredDocumentation",
              "src": "10946:140:0",
              "text": "@notice function to read a staker's claimable\n @param  _staker address of staker\n @return the amounts of underlying tokens"
            },
            "functionSelector": "a583024b",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimable",
            "nameLocation": "11100:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "11121:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "11113:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11113:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11112:17:0"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "11151:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 570,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11151:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 571,
                    "nodeType": "ArrayTypeName",
                    "src": "11151:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11150:18:0"
            },
            "scope": 1357,
            "src": "11091:363:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "11981:1732:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 625,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11995:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11995:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 627,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "12014:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 629,
                        "indexExpression": {
                          "id": 628,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "12023:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12014:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "12014:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11995:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 634,
                  "nodeType": "IfStatement",
                  "src": "11991:69:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12059:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 624,
                    "id": 633,
                    "nodeType": "Return",
                    "src": "12052:8:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 635,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12074:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "12074:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 637,
                              "name": "collectiveInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "12094:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Collective_$24_storage",
                                "typeString": "struct BuidlCollective.Collective storage ref"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collectiveStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "12094:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 639,
                              "name": "collectiveInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "12127:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Collective_$24_storage",
                                "typeString": "struct BuidlCollective.Collective storage ref"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cliff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "12127:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "12094:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 642,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12093:55:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12074:74:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "nodeType": "IfStatement",
                  "src": "12070:88:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12157:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 624,
                    "id": 645,
                    "nodeType": "Return",
                    "src": "12150:8:0"
                  }
                },
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "elapsedVestingPercentage",
                      "nameLocation": "12176:24:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "12168:32:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12168:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 656,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 649,
                        "name": "getVestingPercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "12203:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12203:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 651,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "12237:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 653,
                        "indexExpression": {
                          "id": 652,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "12246:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12237:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointPercentageVested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "12237:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12203:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12168:117:0"
                },
                {
                  "assignments": [
                    658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 658,
                      "mutability": "mutable",
                      "name": "elapsedTime",
                      "nameLocation": "12312:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "12304:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 657,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12304:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 686,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 659,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "12326:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                              "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                            }
                          },
                          "id": 661,
                          "indexExpression": {
                            "id": 660,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "12335:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12326:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                            "typeString": "struct BuidlCollective.UserInfo storage ref"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastCheckpointTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37,
                        "src": "12326:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 663,
                                "name": "collectiveInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "12366:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Collective_$24_storage",
                                  "typeString": "struct BuidlCollective.Collective storage ref"
                                }
                              },
                              "id": 664,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "collectiveStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "12366:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 665,
                                "name": "collectiveInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "12399:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Collective_$24_storage",
                                  "typeString": "struct BuidlCollective.Collective storage ref"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cliff",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21,
                              "src": "12399:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "12366:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "id": 668,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12365:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "12326:94:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 678,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12549:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12549:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 680,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "12575:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                              "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                            }
                          },
                          "id": 682,
                          "indexExpression": {
                            "id": 681,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "12584:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12575:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                            "typeString": "struct BuidlCollective.UserInfo storage ref"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastCheckpointTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37,
                        "src": "12575:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12549:62:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "12326:285:0",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 670,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12443:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12443:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 672,
                            "name": "collectiveInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "12469:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collective_$24_storage",
                              "typeString": "struct BuidlCollective.Collective storage ref"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cliff",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "12469:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "12443:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 675,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "12500:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collectiveStart",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "12500:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "12443:87:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12304:307:0"
                },
                {
                  "assignments": [
                    688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 688,
                      "mutability": "mutable",
                      "name": "elapsedTWAP",
                      "nameLocation": "12634:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "12626:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 687,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12626:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 741,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 689,
                        "name": "lastCheckpoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "12648:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 690,
                                "name": "collectiveInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "12666:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Collective_$24_storage",
                                  "typeString": "struct BuidlCollective.Collective storage ref"
                                }
                              },
                              "id": 691,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "collectiveStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "12666:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 692,
                                "name": "collectiveInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "12699:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Collective_$24_storage",
                                  "typeString": "struct BuidlCollective.Collective storage ref"
                                }
                              },
                              "id": 693,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cliff",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21,
                              "src": "12699:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "12666:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "id": 695,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12665:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "12648:72:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 721,
                          "name": "lastTWAP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12942:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 722,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "12961:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                              }
                            },
                            "id": 724,
                            "indexExpression": {
                              "id": 723,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "12970:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12961:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                              "typeString": "struct BuidlCollective.UserInfo storage ref"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastCheckpointTWAP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "12961:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12942:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 727,
                                  "name": "totalStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "13009:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 728,
                                  "name": "BP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "13023:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "13009:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 730,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "13029:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "13029:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 732,
                                      "name": "lastCheckpoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76,
                                      "src": "13047:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "13029:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 734,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13028:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13009:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 736,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13008:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 737,
                          "name": "totalAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "13074:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13008:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12942:143:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "12648:437:0",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 697,
                          "name": "lastTWAP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12739:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 698,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "12758:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                              }
                            },
                            "id": 700,
                            "indexExpression": {
                              "id": 699,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "12767:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12758:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                              "typeString": "struct BuidlCollective.UserInfo storage ref"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastCheckpointTWAP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "12758:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12739:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 703,
                                  "name": "totalStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "12806:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 704,
                                  "name": "BP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "12820:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "12806:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 706,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "12826:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 707,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "12826:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          },
                                          "id": 712,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 708,
                                              "name": "collectiveInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 64,
                                              "src": "12845:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Collective_$24_storage",
                                                "typeString": "struct BuidlCollective.Collective storage ref"
                                              }
                                            },
                                            "id": 709,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "collectiveStart",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 23,
                                            "src": "12845:30:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 710,
                                              "name": "collectiveInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 64,
                                              "src": "12878:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Collective_$24_storage",
                                                "typeString": "struct BuidlCollective.Collective storage ref"
                                              }
                                            },
                                            "id": 711,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "cliff",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21,
                                            "src": "12878:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "src": "12845:53:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        }
                                      ],
                                      "id": 713,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "12844:55:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "12826:73:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 715,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "12825:75:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12806:94:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 717,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12805:96:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 718,
                          "name": "totalAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "12912:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12805:118:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12739:184:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12626:459:0"
                },
                {
                  "assignments": [
                    743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 743,
                      "mutability": "mutable",
                      "name": "avgPercentageStaked",
                      "nameLocation": "13104:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "13096:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 742,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13096:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 747,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 744,
                      "name": "elapsedTWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "13126:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 745,
                      "name": "elapsedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "13140:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13126:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13096:55:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 748,
                      "name": "avgPercentageStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "13166:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13189:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13166:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 753,
                  "nodeType": "IfStatement",
                  "src": "13162:38:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13199:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 624,
                    "id": 752,
                    "nodeType": "Return",
                    "src": "13192:8:0"
                  }
                },
                {
                  "assignments": [
                    755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "userShareOfStaked",
                      "nameLocation": "13282:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "13274:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13274:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 756,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "13303:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 758,
                              "indexExpression": {
                                "id": 757,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 620,
                                "src": "13312:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13303:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 759,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositedShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "13303:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 760,
                            "name": "BP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "13338:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "13303:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 762,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13302:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 763,
                      "name": "avgPercentageStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "13356:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13302:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13274:101:0"
                },
                {
                  "assignments": [
                    767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "userEntitlement",
                      "nameLocation": "13431:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "13423:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 766,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13423:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 768,
                              "name": "elapsedVestingPercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "13450:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 769,
                              "name": "userShareOfStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "13489:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13450:56:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 771,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13449:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 772,
                        "name": "BP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "13510:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "13449:63:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 774,
                      "name": "VEST_MULTIPLIER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "13515:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13449:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13423:107:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 777,
                      "name": "elapsedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "13545:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 778,
                      "name": "releaseFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "13560:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13545:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "13628:79:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 783,
                                  "name": "userEntitlement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "13650:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 784,
                                  "name": "elapsedTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 658,
                                  "src": "13668:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13650:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 786,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13649:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 787,
                            "name": "releaseFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "13683:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13649:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 624,
                        "id": 789,
                        "nodeType": "Return",
                        "src": "13642:54:0"
                      }
                    ]
                  },
                  "id": 791,
                  "nodeType": "IfStatement",
                  "src": "13541:166:0",
                  "trueBody": {
                    "id": 782,
                    "nodeType": "Block",
                    "src": "13575:47:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 780,
                          "name": "userEntitlement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "13596:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 624,
                        "id": 781,
                        "nodeType": "Return",
                        "src": "13589:22:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "11460:424:0",
              "text": "@notice calculate the shares (in BPs) to claim for a particular user\n     updated = true means updateCheckpoint is run aldy, used in state transition function\n     updated = false means updateCheckpoint is not run, used in view function\n @param _staker address of the staker\n @return percentage of shares (in BPs)\n @dev releaseFactor plays a role in slowly releasing the vested amounts"
            },
            "functionSelector": "01c0c3e5",
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateShareToClaim",
            "nameLocation": "11898:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "11937:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "11929:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11929:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11919:31:0"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "11972:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11972:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11971:9:0"
            },
            "scope": 1357,
            "src": "11889:1824:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "13951:482:0",
              "statements": [
                {
                  "assignments": [
                    800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nameLocation": "13968:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 861,
                      "src": "13961:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13961:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 803,
                  "initialValue": {
                    "expression": {
                      "id": 801,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "13980:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collectiveStart",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "13980:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13961:49:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 804,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "14024:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14037:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14024:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 809,
                  "nodeType": "IfStatement",
                  "src": "14020:28:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14047:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 798,
                    "id": 808,
                    "nodeType": "Return",
                    "src": "14040:8:0"
                  }
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "mutability": "mutable",
                      "name": "vestingTime",
                      "nameLocation": "14065:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 861,
                      "src": "14058:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 810,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14058:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 814,
                  "initialValue": {
                    "expression": {
                      "id": 812,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "14079:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vestingTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "14079:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14058:47:0"
                },
                {
                  "assignments": [
                    816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 816,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nameLocation": "14122:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 861,
                      "src": "14115:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 815,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14115:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 824,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 819,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14142:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14142:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14135:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14135:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14135:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 822,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "14161:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "14135:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14115:55:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 825,
                            "name": "vestingTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "14185:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 826,
                              "name": "collectiveInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "14199:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Collective_$24_storage",
                                "typeString": "struct BuidlCollective.Collective storage ref"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cliff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "14199:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "14185:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 829,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14184:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 830,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "14224:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "14184:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 836,
                  "nodeType": "IfStatement",
                  "src": "14180:83:0",
                  "trueBody": {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 832,
                        "name": "BP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "14243:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 833,
                        "name": "VEST_MULTIPLIER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "14248:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14243:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 798,
                    "id": 835,
                    "nodeType": "Return",
                    "src": "14236:27:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 837,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "14277:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 838,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "14291:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$24_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cliff",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "14291:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "14277:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 843,
                  "nodeType": "IfStatement",
                  "src": "14273:48:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14320:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 798,
                    "id": 842,
                    "nodeType": "Return",
                    "src": "14313:8:0"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 844,
                          "name": "VEST_MULTIPLIER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "14338:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 847,
                                "name": "timePassed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 816,
                                "src": "14364:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 848,
                                  "name": "collectiveInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "14377:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Collective_$24_storage",
                                    "typeString": "struct BuidlCollective.Collective storage ref"
                                  }
                                },
                                "id": 849,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cliff",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21,
                                "src": "14377:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "14364:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14356:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 845,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14356:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14356:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14338:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 853,
                        "name": "BP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "14401:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "14338:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 857,
                          "name": "vestingTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 811,
                          "src": "14414:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14406:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14406:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14406:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14338:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 798,
                  "id": 860,
                  "nodeType": "Return",
                  "src": "14331:95:0"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "13719:168:0",
              "text": "@notice helper function to calculate the percentage (in BPs) of share vested in the vesting schedule\n @return percentage of shares (in BPs) * VEST_MULTIPLIER"
            },
            "functionSelector": "7a55ff21",
            "id": 862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingPercent",
            "nameLocation": "13901:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13918:2:0"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "13942:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13942:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13941:9:0"
            },
            "scope": 1357,
            "src": "13892:541:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 894,
              "nodeType": "Block",
              "src": "14825:171:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 873,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "14843:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 874,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "14854:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14854:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14843:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e4964204f5554204f4620424f554e44",
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14869:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e4b6ebfa97bf10611ceaa6a5f54b8c438953bde6ac20a53ed93791301a5c6ac",
                          "typeString": "literal_string \"tokenId OUT OF BOUND\""
                        },
                        "value": "tokenId OUT OF BOUND"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e4b6ebfa97bf10611ceaa6a5f54b8c438953bde6ac20a53ed93791301a5c6ac",
                          "typeString": "literal_string \"tokenId OUT OF BOUND\""
                        }
                      ],
                      "id": 872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14835:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14835:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "14835:57:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 880,
                                  "name": "tokenInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "14922:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$31_storage_$",
                                    "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                  }
                                },
                                "id": 884,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 881,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "14932:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 883,
                                  "indexExpression": {
                                    "id": 882,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 867,
                                    "src": "14939:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14932:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14922:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenInfo_$31_storage",
                                  "typeString": "struct BuidlCollective.TokenInfo storage ref"
                                }
                              },
                              "id": 885,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "14922:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 886,
                              "name": "_share",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "14959:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14922:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 888,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14921:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 889,
                        "name": "VEST_MULTIPLIER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "14969:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14921:63:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 891,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "14987:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "14921:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 871,
                  "id": 893,
                  "nodeType": "Return",
                  "src": "14902:87:0"
                }
              ]
            },
            "documentation": {
              "id": 863,
              "nodeType": "StructuredDocumentation",
              "src": "14439:264:0",
              "text": "@notice helper function to calculate the amount of underlying tokens based on the percentage (in BPs) of share \n @param  _share   percentage of shares (in BPs)\n @param  _tokenId position of the tokenId\n @return amount of a particular token"
            },
            "id": 895,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertShareToToken",
            "nameLocation": "14717:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_share",
                  "nameLocation": "14754:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "14746:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14746:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "14778:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "14770:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14770:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14736:56:0"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "14816:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14816:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14815:9:0"
            },
            "scope": 1357,
            "src": "14708:288:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 999,
              "nodeType": "Block",
              "src": "15514:1214:0",
              "statements": [
                {
                  "assignments": [
                    904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 904,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "15532:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "15524:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 903,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15524:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "expression": {
                      "id": 905,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "15539:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "15539:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15524:25:0"
                },
                {
                  "assignments": [
                    909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 909,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "15567:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "15559:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 908,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15559:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 914,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 912,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "15580:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                          "typeString": "contract BuidlCollective"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                          "typeString": "contract BuidlCollective"
                        }
                      ],
                      "id": 911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15572:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 910,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15572:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15572:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15559:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 916,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "15604:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 918,
                          "indexExpression": {
                            "id": 917,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "15614:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15604:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 919,
                          "name": "_assetValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 898,
                          "src": "15623:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15604:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "555345522042414c414e4345204e4f5420454e4f554748",
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15636:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb902c597ada2a369cea97caa8183a979e56b66635e4895bc7cdc78a63fa6697",
                          "typeString": "literal_string \"USER BALANCE NOT ENOUGH\""
                        },
                        "value": "USER BALANCE NOT ENOUGH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb902c597ada2a369cea97caa8183a979e56b66635e4895bc7cdc78a63fa6697",
                          "typeString": "literal_string \"USER BALANCE NOT ENOUGH\""
                        }
                      ],
                      "id": 915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15596:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15596:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "15596:66:0"
                },
                {
                  "id": 936,
                  "nodeType": "UncheckedBlock",
                  "src": "15783:107:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 924,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "15807:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 926,
                          "indexExpression": {
                            "id": 925,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "15817:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "15807:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 927,
                          "name": "_assetValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 898,
                          "src": "15826:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15807:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 929,
                      "nodeType": "ExpressionStatement",
                      "src": "15807:30:0"
                    },
                    {
                      "expression": {
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 930,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "15851:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 932,
                          "indexExpression": {
                            "id": 931,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 909,
                            "src": "15861:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "15851:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 933,
                          "name": "_assetValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 898,
                          "src": "15868:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15851:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 935,
                      "nodeType": "ExpressionStatement",
                      "src": "15851:28:0"
                    }
                  ]
                },
                {
                  "assignments": [
                    938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 938,
                      "mutability": "mutable",
                      "name": "_depositedShare",
                      "nameLocation": "15908:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "15900:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 937,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15900:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 947,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 939,
                              "name": "_assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "15927:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 940,
                              "name": "BP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "15941:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "15927:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 942,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "15946:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15927:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 944,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15926:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 945,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "15977:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15926:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15900:88:0"
                },
                {
                  "assignments": [
                    949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 949,
                      "mutability": "mutable",
                      "name": "_lastCheckpointTWAP",
                      "nameLocation": "16006:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "15998:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 948,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15998:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 951,
                  "initialValue": {
                    "id": 950,
                    "name": "lastTWAP",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78,
                    "src": "16028:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15998:38:0"
                },
                {
                  "assignments": [
                    953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 953,
                      "mutability": "mutable",
                      "name": "_lastCheckpointTime",
                      "nameLocation": "16054:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "16046:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 952,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16046:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 956,
                  "initialValue": {
                    "expression": {
                      "id": 954,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "16076:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "16076:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16046:45:0"
                },
                {
                  "assignments": [
                    958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 958,
                      "mutability": "mutable",
                      "name": "_lastCheckpointPercentageVested",
                      "nameLocation": "16109:31:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "16101:39:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 957,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16101:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 961,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 959,
                      "name": "getVestingPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "16143:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16143:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16101:61:0"
                },
                {
                  "assignments": [
                    964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "_stakePosition",
                      "nameLocation": "16188:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "16172:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$40_memory_ptr",
                        "typeString": "struct BuidlCollective.UserInfo"
                      },
                      "typeName": {
                        "id": 963,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 962,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "16172:8:0"
                        },
                        "referencedDeclaration": 40,
                        "src": "16172:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
                          "typeString": "struct BuidlCollective.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 971,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 966,
                        "name": "_depositedShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "16227:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 967,
                        "name": "_lastCheckpointTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "16256:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 968,
                        "name": "_lastCheckpointTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "16289:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 969,
                        "name": "_lastCheckpointPercentageVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "16322:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 965,
                      "name": "UserInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "16205:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserInfo_$40_storage_ptr_$",
                        "typeString": "type(struct BuidlCollective.UserInfo storage pointer)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16205:158:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$40_memory_ptr",
                      "typeString": "struct BuidlCollective.UserInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16172:191:0"
                },
                {
                  "expression": {
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 972,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "16373:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                          "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                        }
                      },
                      "id": 975,
                      "indexExpression": {
                        "expression": {
                          "id": 973,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16382:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16382:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16373:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                        "typeString": "struct BuidlCollective.UserInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 976,
                      "name": "_stakePosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "16396:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$40_memory_ptr",
                        "typeString": "struct BuidlCollective.UserInfo memory"
                      }
                    },
                    "src": "16373:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                      "typeString": "struct BuidlCollective.UserInfo storage ref"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "16373:37:0"
                },
                {
                  "expression": {
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 979,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "16420:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 980,
                      "name": "_assetValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 898,
                      "src": "16435:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16420:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "16420:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 984,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "16470:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 985,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "16476:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 986,
                        "name": "_assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "16480:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 983,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "16461:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16461:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "EmitStatement",
                  "src": "16456:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 990,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16536:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16536:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 992,
                        "name": "_assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "16560:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 993,
                        "name": "_depositedShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "16585:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 994,
                        "name": "_lastCheckpointTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "16614:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 995,
                        "name": "_lastCheckpointTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "16647:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 996,
                        "name": "_lastCheckpointPercentageVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "16680:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 989,
                      "name": "LogTokensStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "16507:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16507:214:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 998,
                  "nodeType": "EmitStatement",
                  "src": "16502:219:0"
                }
              ]
            },
            "documentation": {
              "id": 896,
              "nodeType": "StructuredDocumentation",
              "src": "15191:256:0",
              "text": "@notice staking ERC20 representation tokens would slowly convert your representation tokens to the underlying tokens\n     if the vesting schedule has already started. \n @param _assetValue the amount of ERC20 representation tokens to stake"
            },
            "functionSelector": "a694fc3a",
            "id": 1000,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 901,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 900,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "15497:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "15497:16:0"
              }
            ],
            "name": "stake",
            "nameLocation": "15461:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "_assetValue",
                  "nameLocation": "15475:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "15467:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15467:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15466:21:0"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15514:0:0"
            },
            "scope": 1357,
            "src": "15452:1276:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1060,
              "nodeType": "Block",
              "src": "17121:480:0",
              "statements": [
                {
                  "assignments": [
                    1007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1007,
                      "mutability": "mutable",
                      "name": "unstakedShare",
                      "nameLocation": "17139:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "17131:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1006,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17131:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1016,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1008,
                              "name": "_assetValueLeft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "17156:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1009,
                              "name": "BP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "17174:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "17156:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1011,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "17179:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17156:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1013,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17155:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1014,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "17198:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17155:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17131:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1018,
                          "name": "unstakedShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "17240:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1019,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "17257:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                              }
                            },
                            "id": 1022,
                            "indexExpression": {
                              "expression": {
                                "id": 1020,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17266:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17266:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17257:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                              "typeString": "struct BuidlCollective.UserInfo storage ref"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "17257:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17240:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554e5354414b4520414d4f554e5420544f4f20424947",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17306:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        },
                        "value": "UNSTAKE AMOUNT TOO BIG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        }
                      ],
                      "id": 1017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17219:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17219:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "17219:121:0"
                },
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1028,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "17350:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 1031,
                        "indexExpression": {
                          "expression": {
                            "id": 1029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17359:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17359:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17350:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "17350:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1033,
                      "name": "unstakedShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "17389:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17350:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "17350:52:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1043,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17442:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17442:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1045,
                        "name": "_assetValueLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "17454:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1039,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17426:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                  "typeString": "contract BuidlCollective"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                  "typeString": "contract BuidlCollective"
                                }
                              ],
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17418:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1037,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17418:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17418:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1036,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "17412:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1752_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17412:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1752",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1500,
                      "src": "17412:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17412:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "17412:58:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17503:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17503:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1051,
                        "name": "_assetValueLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "17515:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1052,
                        "name": "unstakedShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "17532:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1053,
                        "name": "lastTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "17547:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1054,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "17557:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "17557:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1056,
                          "name": "getVestingPercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 862,
                          "src": "17574:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17574:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1048,
                      "name": "LogTokensUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "17485:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17485:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1059,
                  "nodeType": "EmitStatement",
                  "src": "17480:114:0"
                }
              ]
            },
            "documentation": {
              "id": 1001,
              "nodeType": "StructuredDocumentation",
              "src": "16734:319:0",
              "text": "@notice unstake and withdraw the ERC20 representation tokens that are previously staked\n     without claiming, essentially forsaking the claimable\n @param _assetValueLeft the amount of ERC20 representation tokens to unstake\n @dev the unstake amount can be as big as the previously staked amount"
            },
            "functionSelector": "1ae69fb8",
            "id": 1061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeWithoutClaim",
            "nameLocation": "17067:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "_assetValueLeft",
                  "nameLocation": "17095:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "17087:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17087:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17086:25:0"
            },
            "returnParameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17121:0:0"
            },
            "scope": 1357,
            "src": "17058:543:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "18037:508:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1070,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18054:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18054:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1069,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1356,
                      "src": "18047:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18047:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "18047:18:0"
                },
                {
                  "assignments": [
                    1075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1075,
                      "mutability": "mutable",
                      "name": "unstakedShare",
                      "nameLocation": "18083:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "18075:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1074,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18075:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1084,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1076,
                              "name": "_assetValueLeft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "18100:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1077,
                              "name": "BP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "18118:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "18100:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1079,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "18123:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18100:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1081,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18099:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1082,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "18142:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18099:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18075:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1086,
                          "name": "unstakedShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "18184:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1087,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "18201:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                              }
                            },
                            "id": 1090,
                            "indexExpression": {
                              "expression": {
                                "id": 1088,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "18210:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "18210:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18201:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                              "typeString": "struct BuidlCollective.UserInfo storage ref"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "18201:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18184:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554e5354414b4520414d4f554e5420544f4f20424947",
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18250:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        },
                        "value": "UNSTAKE AMOUNT TOO BIG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18163:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18163:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "18163:121:0"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1096,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "18294:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 1099,
                        "indexExpression": {
                          "expression": {
                            "id": 1097,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "18303:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "18303:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18294:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "18294:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1101,
                      "name": "unstakedShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "18333:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18294:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "18294:52:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18386:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18386:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1113,
                        "name": "_assetValueLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "18398:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1107,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "18370:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                  "typeString": "contract BuidlCollective"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                  "typeString": "contract BuidlCollective"
                                }
                              ],
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18362:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1105,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18362:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18362:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1104,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "18356:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1752_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18356:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1752",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1500,
                      "src": "18356:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18356:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "18356:58:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18447:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18447:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1119,
                        "name": "_assetValueLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "18459:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1120,
                        "name": "unstakedShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "18476:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1121,
                        "name": "lastTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "18491:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1122,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "18501:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "18501:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1124,
                          "name": "getVestingPercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 862,
                          "src": "18518:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18518:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1116,
                      "name": "LogTokensUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "18429:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18429:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "EmitStatement",
                  "src": "18424:114:0"
                }
              ]
            },
            "documentation": {
              "id": 1062,
              "nodeType": "StructuredDocumentation",
              "src": "17611:353:0",
              "text": "@notice unstake and withdraw the ERC20 representation tokens that are previously staked\n     if any of them is not converted to underlying tokens.\n @param _assetValueLeft the amount of ERC20 representation tokens to unstake\n @dev the unstake amount should be the remainder of claimable since the function would call claim first."
            },
            "functionSelector": "2e17de78",
            "id": 1129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1066,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "18020:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18020:16:0"
              }
            ],
            "name": "unstake",
            "nameLocation": "17978:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1064,
                  "mutability": "mutable",
                  "name": "_assetValueLeft",
                  "nameLocation": "17994:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "17986:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17986:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17985:25:0"
            },
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18037:0:0"
            },
            "scope": 1357,
            "src": "17969:576:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1200,
              "nodeType": "Block",
              "src": "18765:531:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1135,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "18779:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 1138,
                        "indexExpression": {
                          "expression": {
                            "id": 1136,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "18788:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "18788:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18779:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "18779:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18818:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18779:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1143,
                  "nodeType": "IfStatement",
                  "src": "18775:53:0",
                  "trueBody": {
                    "functionReturnParameters": 1134,
                    "id": 1142,
                    "nodeType": "Return",
                    "src": "18821:7:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18844:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18844:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1144,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1356,
                      "src": "18837:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18837:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1148,
                  "nodeType": "ExpressionStatement",
                  "src": "18837:18:0"
                },
                {
                  "assignments": [
                    1150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1150,
                      "mutability": "mutable",
                      "name": "prevDepositedShare",
                      "nameLocation": "18873:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "18865:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18865:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1156,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1151,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "18894:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                          "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                        }
                      },
                      "id": 1154,
                      "indexExpression": {
                        "expression": {
                          "id": 1152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18903:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18903:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18894:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                        "typeString": "struct BuidlCollective.UserInfo storage ref"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "depositedShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33,
                    "src": "18894:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18865:64:0"
                },
                {
                  "assignments": [
                    1158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1158,
                      "mutability": "mutable",
                      "name": "assetValue",
                      "nameLocation": "18947:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "18939:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18939:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1167,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1159,
                              "name": "prevDepositedShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "18961:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1160,
                              "name": "totalAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "18994:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18961:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1162,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18960:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1163,
                        "name": "VEST_MULTIPLIER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "19021:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18960:76:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1165,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "19051:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "18960:93:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18939:114:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19093:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19093:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "19105:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1171,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "19077:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                  "typeString": "contract BuidlCollective"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                  "typeString": "contract BuidlCollective"
                                }
                              ],
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19069:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1169,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19069:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19069:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1168,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "19063:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1752_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19063:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1752",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1500,
                      "src": "19063:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19063:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "19063:53:0"
                },
                {
                  "expression": {
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1180,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "19126:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 1183,
                        "indexExpression": {
                          "expression": {
                            "id": 1181,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19135:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19135:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19126:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 1184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "19126:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19164:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19126:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "19126:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19198:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19198:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1191,
                        "name": "assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "19210:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1192,
                        "name": "prevDepositedShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1150,
                        "src": "19222:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1193,
                        "name": "lastTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "19242:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1194,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "19252:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "19252:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1196,
                          "name": "getVestingPercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 862,
                          "src": "19269:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19269:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1188,
                      "name": "LogTokensUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "19180:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19180:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "EmitStatement",
                  "src": "19175:114:0"
                }
              ]
            },
            "documentation": {
              "id": 1130,
              "nodeType": "StructuredDocumentation",
              "src": "18551:161:0",
              "text": "@notice unstake and withdraw ALL the ERC20 representation tokens that are previously staked\n     if any of them is not converted to underlying tokens."
            },
            "functionSelector": "35322f37",
            "id": 1201,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1132,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "18748:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18748:16:0"
              }
            ],
            "name": "unstakeAll",
            "nameLocation": "18726:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18736:2:0"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18765:0:0"
            },
            "scope": 1357,
            "src": "18717:579:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1218,
              "nodeType": "Block",
              "src": "19494:73:0",
              "statements": [
                {
                  "assignments": [
                    1210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "share",
                      "nameLocation": "19512:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1218,
                      "src": "19504:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19504:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1215,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1212,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19527:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19527:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1211,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1356,
                      "src": "19520:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19520:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19504:34:0"
                },
                {
                  "expression": {
                    "id": 1216,
                    "name": "share",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "19555:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1208,
                  "id": 1217,
                  "nodeType": "Return",
                  "src": "19548:12:0"
                }
              ]
            },
            "documentation": {
              "id": 1202,
              "nodeType": "StructuredDocumentation",
              "src": "19302:120:0",
              "text": "@notice claim would convert the ERC20 representation tokens into the underlying tokens based on the claimable quota."
            },
            "functionSelector": "4e71d92d",
            "id": 1219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1205,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1204,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "19453:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "19453:16:0"
              }
            ],
            "name": "claim",
            "nameLocation": "19436:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19441:2:0"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "share",
                  "nameLocation": "19487:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1219,
                  "src": "19479:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19478:15:0"
            },
            "scope": 1357,
            "src": "19427:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1355,
              "nodeType": "Block",
              "src": "19700:1017:0",
              "statements": [
                {
                  "assignments": [
                    1228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1228,
                      "mutability": "mutable",
                      "name": "share",
                      "nameLocation": "19758:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1355,
                      "src": "19750:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19750:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1232,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1230,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "19788:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1229,
                      "name": "calculateShareToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "19766:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19766:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19750:46:0"
                },
                {
                  "assignments": [
                    1237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1237,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "nameLocation": "19823:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1355,
                      "src": "19806:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19806:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ArrayTypeName",
                        "src": "19806:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1239,
                  "initialValue": {
                    "id": 1238,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54,
                    "src": "19833:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19806:33:0"
                },
                {
                  "assignments": [
                    1244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1244,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "19866:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1355,
                      "src": "19849:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19849:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1243,
                        "nodeType": "ArrayTypeName",
                        "src": "19849:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1248,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "19890:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "19890:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19876:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19880:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ArrayTypeName",
                        "src": "19880:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19876:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19849:56:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1252,
                      "name": "share",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1228,
                      "src": "19919:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19927:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19919:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1354,
                  "nodeType": "IfStatement",
                  "src": "19915:796:0",
                  "trueBody": {
                    "id": 1353,
                    "nodeType": "Block",
                    "src": "19930:781:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1255,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "19944:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 1257,
                              "indexExpression": {
                                "id": 1256,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "19953:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19944:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointTWAP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "19944:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1259,
                            "name": "lastTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "19983:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19944:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1261,
                        "nodeType": "ExpressionStatement",
                        "src": "19944:47:0"
                      },
                      {
                        "expression": {
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1262,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "20005:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 1264,
                              "indexExpression": {
                                "id": 1263,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "20014:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20005:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointPercentageVested",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "20005:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1266,
                              "name": "getVestingPercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "20056:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20056:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20005:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1269,
                        "nodeType": "ExpressionStatement",
                        "src": "20005:70:0"
                      },
                      {
                        "expression": {
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1270,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "20089:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 1272,
                              "indexExpression": {
                                "id": 1271,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "20098:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20089:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "20089:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1274,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "20128:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "20128:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20089:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ExpressionStatement",
                        "src": "20089:54:0"
                      },
                      {
                        "expression": {
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1278,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "20157:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 1280,
                              "indexExpression": {
                                "id": 1279,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "20166:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20157:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$40_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 1281,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "depositedShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "20157:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1282,
                            "name": "share",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1228,
                            "src": "20193:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20157:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1284,
                        "nodeType": "ExpressionStatement",
                        "src": "20157:41:0"
                      },
                      {
                        "assignments": [
                          1286
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1286,
                            "mutability": "mutable",
                            "name": "shareToBurn",
                            "nameLocation": "20220:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1353,
                            "src": "20212:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1285,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20212:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1293,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1287,
                                  "name": "share",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1228,
                                  "src": "20235:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1288,
                                  "name": "totalAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "20243:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20235:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1290,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20234:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1291,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "20258:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20234:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20212:61:0"
                      },
                      {
                        "assignments": [
                          1295
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1295,
                            "mutability": "mutable",
                            "name": "assetValue",
                            "nameLocation": "20295:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1353,
                            "src": "20287:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1294,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20287:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1299,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1296,
                            "name": "shareToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "20308:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1297,
                            "name": "BP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "20322:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "20308:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20287:37:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1303,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "20352:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                    "typeString": "contract BuidlCollective"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1357",
                                    "typeString": "contract BuidlCollective"
                                  }
                                ],
                                "id": 1302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20344:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1301,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20344:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20344:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1305,
                              "name": "assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1295,
                              "src": "20359:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1300,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1751,
                            "src": "20338:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20338:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "20338:32:0"
                      },
                      {
                        "body": {
                          "id": 1342,
                          "nodeType": "Block",
                          "src": "20429:177:0",
                          "statements": [
                            {
                              "assignments": [
                                1320
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1320,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "20455:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1342,
                                  "src": "20447:14:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1319,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20447:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1325,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1322,
                                    "name": "share",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1228,
                                    "src": "20484:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1323,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1309,
                                    "src": "20491:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1321,
                                  "name": "convertShareToToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 895,
                                  "src": "20464:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20464:29:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20447:46:0"
                            },
                            {
                              "expression": {
                                "id": 1330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1326,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1244,
                                    "src": "20511:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1328,
                                  "indexExpression": {
                                    "id": 1327,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1309,
                                    "src": "20519:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20511:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1329,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1320,
                                  "src": "20524:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20511:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1331,
                              "nodeType": "ExpressionStatement",
                              "src": "20511:19:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1338,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1222,
                                    "src": "20575:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1339,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1320,
                                    "src": "20584:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1333,
                                          "name": "_tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1237,
                                          "src": "20554:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1335,
                                        "indexExpression": {
                                          "id": 1334,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1309,
                                          "src": "20562:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "20554:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1332,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1752,
                                      "src": "20548:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1752_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 1336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20548:17:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1752",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1500,
                                  "src": "20548:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20548:43:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1341,
                              "nodeType": "ExpressionStatement",
                              "src": "20548:43:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1312,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1309,
                            "src": "20404:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1313,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1237,
                              "src": "20408:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "20408:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20404:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1343,
                        "initializationExpression": {
                          "assignments": [
                            1309
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1309,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "20397:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1343,
                              "src": "20389:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1308,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20389:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1311,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20401:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "20389:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "20424:3:0",
                            "subExpression": {
                              "id": 1316,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1309,
                              "src": "20424:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1318,
                          "nodeType": "ExpressionStatement",
                          "src": "20424:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "20384:222:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1345,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1222,
                              "src": "20641:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1346,
                              "name": "share",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "20650:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1347,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1237,
                              "src": "20657:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 1348,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1244,
                              "src": "20666:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 1344,
                            "name": "LogTokensClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "20624:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20624:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1350,
                        "nodeType": "EmitStatement",
                        "src": "20619:55:0"
                      },
                      {
                        "expression": {
                          "id": 1351,
                          "name": "share",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1228,
                          "src": "20695:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1226,
                        "id": 1352,
                        "nodeType": "Return",
                        "src": "20688:12:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1220,
              "nodeType": "StructuredDocumentation",
              "src": "19573:56:0",
              "text": "@notice internal helper function to claim for a user"
            },
            "id": 1356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "19643:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "19658:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "19650:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19650:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19649:17:0"
            },
            "returnParameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "share",
                  "nameLocation": "19693:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "19685:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19685:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19684:15:0"
            },
            "scope": 1357,
            "src": "19634:1083:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1358,
        "src": "2333:18387:0",
        "usedErrors": []
      }
    ],
    "src": "0:20721:0"
  },
  "bytecode": "60e06040526203f480600d553480156200001857600080fd5b5060405162003638380380620036388339810160408190526200003b91620002fe565b8282828260009080519060200190620000569291906200018b565b5081516200006c9060019060208501906200018b565b5060ff81166080524660a05262000082620000ef565b60c0525050600680546201000033810262010000600160b01b0319909216919091179182905560405191046001600160a01b031681527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f3915060200160405180910390a150505062000464565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001239190620003c0565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001999062000383565b90600052602060002090601f016020900481019282620001bd576000855562000208565b82601f10620001d857805160ff191683800117855562000208565b8280016001018555821562000208579182015b8281111562000208578251825591602001919060010190620001eb565b50620002169291506200021a565b5090565b5b808211156200021657600081556001016200021b565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025957600080fd5b81516001600160401b038082111562000276576200027662000231565b604051601f8301601f19908116603f01168101908282118183101715620002a157620002a162000231565b81604052838152602092508683858801011115620002be57600080fd5b600091505b83821015620002e25785820183015181830184015290820190620002c3565b83821115620002f45760008385830101525b9695505050505050565b6000806000606084860312156200031457600080fd5b83516001600160401b03808211156200032c57600080fd5b6200033a8783880162000247565b945060208601519150808211156200035157600080fd5b50620003608682870162000247565b925050604084015160ff811681146200037857600080fd5b809150509250925092565b600181811c908216806200039857607f821691505b60208210811415620003ba57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620003dd57607f831692505b6020808410821415620003fe57634e487b7160e01b86526022600452602486fd5b818015620004155760018114620004275762000456565b60ff1986168952848901965062000456565b60008a81526020902060005b868110156200044e5781548b82015290850190830162000433565b505084890196505b509498975050505050505050565b60805160a05160c0516131a4620004946000396000610f8301526000610f4e0152600061038401526131a46000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c806370a0823111610146578063a9059cbb116100c3578063dd62ed3e11610087578063dd62ed3e14610593578063e0c9802f146105be578063e2f273bd1461060b578063f5dab7111461061e578063f851a4401461068b578063fed45587146106a457600080fd5b8063a9059cbb14610509578063a93206881461051c578063d32e81a51461056e578063d505accf14610577578063d77a1d3a1461058a57600080fd5b806395d89b411161010a57806395d89b411461049b5780639cfdbd5e146104a3578063a4c8b46b146104c1578063a583024b146104d6578063a694fc3a146104f657600080fd5b806370a082311461043b5780637a55ff211461045b5780637d9fce4d146104635780637ecebe0014610472578063817b1cd21461049257600080fd5b8063313ce567116101d45780634c33fe94116101985780634c33fe94146103d95780634e71d92d146103ec5780634f64b2be146103f45780635da69cb61461041f5780636b9542921461042857600080fd5b8063313ce5671461037f57806335322f37146103b85780633644e515146103c057806336e9b344146103c85780634ae99d30146103d157600080fd5b80631959a0021161021b5780631959a002146102c85780631ae69fb81461031d57806323b872dd146103325780632e17de781461034557806330adf81f1461035857600080fd5b806301c0c3e51461025857806301e1d1141461027e57806306fdde0314610287578063095ea7b31461029c57806318160ddd146102bf575b600080fd5b61026b61026636600461265a565b6106b7565b6040519081526020015b60405180910390f35b61026b600b5481565b61028f6109dd565b60405161027591906126c4565b6102af6102aa3660046126d7565b610a6b565b6040519015158152602001610275565b61026b60025481565b6102fd6102d636600461265a565b600e6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610275565b61033061032b366004612703565b610ad8565b005b6102af61034036600461271c565b610c62565b610330610353366004612703565b610d42565b61026b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103a67f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610275565b610330610dcb565b61026b610f4a565b61026b60085481565b610330610fa5565b6103306103e736600461265a565b6112e3565b61026b61131c565b610407610402366004612703565b61139c565b6040516001600160a01b039091168152602001610275565b61026b600d5481565b610330610436366004612a74565b6113c6565b61026b61044936600461265a565b60036020526000908152604090205481565b61026b611712565b61026b670de0b6b3a764000081565b61026b61048036600461265a565b60056020526000908152604090205481565b61026b60115481565b61028f611802565b6104ac61271081565b60405163ffffffff9091168152602001610275565b6104c961180f565b6040516102759190612b57565b6104e96104e436600461265a565b6119f4565b6040516102759190612bd8565b610330610504366004612703565b611a9c565b6102af6105173660046126d7565b611d1b565b61052f61052a366004612703565b611d81565b604080516001600160a01b03938416815282516020808301919091528301516001600160801b0316818301529101519091166060820152608001610275565b61026b600f5481565b610330610585366004612bfa565b611e12565b61026b60105481565b61026b6105a1366004612c6b565b600460209081526000928352604080842090915290825290205481565b600c546105e49063ffffffff80821691600160201b8104821691600160401b9091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610275565b61033061061936600461265a565b612063565b61065f61062c36600461265a565b600a6020526000908152604090208054600182015460029092015490916001600160801b0316906001600160a01b031683565b604080519384526001600160801b0390921660208401526001600160a01b031690820152606001610275565b600654610407906201000090046001600160a01b031681565b61028f6106b2366004612703565b6120de565b6001600160a01b0381166000908152600e602052604081206002015442116106e157506000919050565b600c546107049063ffffffff600160201b8204811691600160401b900416612cba565b63ffffffff16421161071857506000919050565b6001600160a01b0382166000908152600e602052604081206003015461073c611712565b6107469190612ce2565b600c5490915060009061076f9063ffffffff600160201b8204811691600160401b900416612cba565b6001600160a01b0385166000908152600e602052604090206002015463ffffffff91909116116107c4576001600160a01b0384166000908152600e60205260409020600201546107bf9042612ce2565b6107f3565b600c5463ffffffff600160401b82048116916107e991600160201b9091041642612ce2565b6107f39190612ce2565b600c5490915060009061081c9063ffffffff600160201b8204811691600160401b900416612cba565b63ffffffff16600f541061089657600b54600f5461083a9042612ce2565b60115461084a9061271090612cf9565b6108549190612cf9565b61085e9190612d18565b6001600160a01b0386166000908152600e60205260409020600101546010546108879190612ce2565b6108919190612d3a565b610923565b600b54600c546108bc9063ffffffff600160201b8204811691600160401b900416612cba565b6108cc9063ffffffff1642612ce2565b6011546108dc9061271090612cf9565b6108e69190612cf9565b6108f09190612d18565b6001600160a01b0386166000908152600e60205260409020600101546010546109199190612ce2565b6109239190612d3a565b905060006109318383612d18565b9050806109445750600095945050505050565b6001600160a01b0386166000908152600e6020526040812054829061096c9061271090612cf9565b6109769190612d18565b90506000670de0b6b3a76400006127106109908489612cf9565b61099a9190612d18565b6109a49190612d18565b9050600d5485106109ba57979650505050505050565b600d546109c78683612cf9565b6109d19190612d18565b98975050505050505050565b600080546109ea90612d52565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1690612d52565b8015610a635780601f10610a3857610100808354040283529160200191610a63565b820191906000526020600020905b815481529060010190602001808311610a4657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610ac69086815260200190565b60405180910390a35060015b92915050565b600b54600090670de0b6b3a7640000610af361271085612cf9565b610afd9190612cf9565b610b079190612d18565b336000908152600e6020526040902054909150811115610b675760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b60448201526064015b60405180910390fd5b336000908152600e602052604081208054839290610b86908490612ce2565b909155505060405163a9059cbb60e01b815233600482015260248101839052309063a9059cbb906044016020604051808303816000875af1158015610bcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf39190612d8d565b507f2504fcba4204cc42c3da7919528d55ab40c2be512fe40edc8153edc4c5bf2f4433838360105442610c24611712565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c00160405180910390a15050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610cbe57610c998382612ce2565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610ce6908490612ce2565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061314f83398151915290610d2f9087815260200190565b60405180910390a3506001949350505050565b600f54421115610dbf57600b54600f54610d5c9042612ce2565b601154610d6c9061271090612cf9565b610d769190612cf9565b610d809190612d18565b60106000828254610d919190612d3a565b909155505042600f55610da333612109565b50600b54600090670de0b6b3a7640000610af361271085612cf9565b610da333612109565b50565b600f54421115610f3457600b54600f54610de59042612ce2565b601154610df59061271090612cf9565b610dff9190612cf9565b610e099190612d18565b60106000828254610e1a9190612d3a565b909155505042600f55336000908152600e6020526040902054610e3957565b610e4233612109565b50336000908152600e6020526040812054600b5490919061271090670de0b6b3a764000090610e719085612cf9565b610e7b9190612d18565b610e859190612d18565b60405163a9059cbb60e01b815233600482015260248101829052909150309063a9059cbb906044016020604051808303816000875af1158015610ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef09190612d8d565b50336000818152600e60205260408120556010547f2504fcba4204cc42c3da7919528d55ab40c2be512fe40edc8153edc4c5bf2f4491908390859042610c24611712565b336000908152600e6020526040902054610e3957565b60007f00000000000000000000000000000000000000000000000000000000000000004614610f8057610f7b612397565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6006546201000090046001600160a01b03163314610fc257600080fd5b60065460ff1615610fd257600080fd5b6006805460ff1916600117905560098054604080516020808402820181019092528281526000939092909183018282801561103657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611018575b50505050509050611060604080516060810182526000808252602082018190529181019190915290565b6000805b835181101561125f57600a600085838151811061108357611083612daf565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208251606081018452815480825260018301546001600160801b03169382018490526002909201549094169284018390528751939650928790859081106110f3576110f3612daf565b60209081029190910101516040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015611154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111789190612d8d565b50600087858151811061118d5761118d612daf565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f69190612dc5565b61120190600a612ec6565b6112146001600160801b03841686612cf9565b61122690670de0b6b3a7640000612cf9565b6112309190612d18565b905061123c8187612d3a565b95506112488382612431565b50505050808061125790612ed5565b915050611064565b50600c805463ffffffff60401b1916600160401b4263ffffffff9081168202929092179283905561129d92600160201b810483169291900416612cba565b63ffffffff16600f55600b8190556040514281527f83aaee11563f280eac61ebd060f088ce7577d5e823efa6c78de1cfec8167605d9060200160405180910390a1505050565b6006546201000090046001600160a01b0316331461130057600080fd5b60065460ff161561131057600080fd5b806001600160a01b0316ff5b6000600f5442111561138a57600b54600f546113389042612ce2565b6011546113489061271090612cf9565b6113529190612cf9565b61135c9190612d18565b6010600082825461136d9190612d3a565b909155505042600f55600061138133612109565b91506113999050565b600061139533612109565b9150505b90565b600981815481106113ac57600080fd5b6000918252602090912001546001600160a01b0316905081565b600654610100900460ff16156113db57600080fd5b60068054620100003302610100600160b01b0319909116176101001790558451600c80546020880151604089015163ffffffff908116600160401b0263ffffffff60401b19908116928216600160201b0267ffffffffffffffff1990941691909516179190911792909216919091179055835160005b818110156116ad57600a600087838151811061146f5761146f612daf565b6020908102919091018101516001600160a01b03168252810191909152604001600020600101546001600160801b0316156114f65760405162461bcd60e51b815260206004820152602160248201527f544f4b454e204144445245535320414c524541445920494e495449414c495a456044820152601160fa1b6064820152608401610b5e565b600788828151811061150a5761150a612daf565b6020908102919091018101518254600181018455600093845292829020815161153c94919091019291909101906125ac565b506000604051806060016040528085848151811061155c5761155c612daf565b6020026020010151815260200187848151811061157b5761157b612daf565b60200260200101516001600160801b031681526020018684815181106115a3576115a3612daf565b60200260200101516001600160a01b0316815250905080600a60008985815181106115d0576115d0612daf565b6020908102919091018101516001600160a01b03908116835282820193909352604091820160002084518155908401516001820180546fffffffffffffffffffffffffffffffff19166001600160801b03909216919091179055920151600290920180546001600160a01b03191692909116919091179055865160099088908490811061165f5761165f612daf565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905550806116a581612ed5565b915050611451565b50600954600855600c546040517f489170cfe0f7fcdd8410d20d8a81df8f038624bbcd9814cca42d477e9d1bb46991611701918a91899189918991899163ffffffff600160201b8204811692911690612f62565b60405180910390a150505050505050565b600c54600090600160401b900463ffffffff168061173257600091505090565b600c5463ffffffff1660006117478342613030565b600c5490915063ffffffff8083169161176991600160201b9091041684612cba565b63ffffffff161161179057611788670de0b6b3a7640000612710612cf9565b935050505090565b600c5463ffffffff600160201b9091048116908216116117b4576000935050505090565b600c5463ffffffff80841691612710916117d691600160201b90041684613030565b6117ee9063ffffffff16670de0b6b3a7640000612cf9565b6117f89190612cf9565b6117889190612d18565b600180546109ea90612d52565b60095460609060009067ffffffffffffffff8111156118305761183061275d565b604051908082528060200260200182016040528015611859578160200160208202803683370190505b50905060008060005b6009548110156119eb57600a60006009838154811061188357611883612daf565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190206002015460098054919092169450829081106118ca576118ca612daf565b600091825260209091200154604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611923573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119479190613055565b9150600a60006009838154811061196057611960612daf565b60009182526020808320909101546001600160a01b0316835282019290925260400190205482106119b457600184828151811061199f5761199f612daf565b911515602092830291909101909101526119d9565b60008482815181106119c8576119c8612daf565b911515602092830291909101909101525b806119e381612ed5565b915050611862565b50919392505050565b60606000611a01836106b7565b60095490915060009067ffffffffffffffff811115611a2257611a2261275d565b604051908082528060200260200182016040528015611a4b578160200160208202803683370190505b50905060005b600954811015611a9457611a65838261248b565b828281518110611a7757611a77612daf565b602090810291909101015280611a8c81612ed5565b915050611a51565b509392505050565b600f54421115611cc057600b54600f54611ab69042612ce2565b601154611ac69061271090612cf9565b611ad09190612cf9565b611ada9190612d18565b60106000828254611aeb9190612d3a565b909155505042600f55336000818152600360205260409020543090831115611b4f5760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610b5e565b6001600160a01b03808316600090815260036020526040808220805487900390559183168152908120805485019055600b54670de0b6b3a7640000611b9661271087612cf9565b611ba09190612cf9565b611baa9190612d18565b601054909150426000611bbb611712565b60408051608081018252868152602080820187815282840187815260608401868152336000908152600e909452948320845181559151600183015551600282015592516003909301929092556011805493945090928a9290611c1e908490612d3a565b92505081905550856001600160a01b0316876001600160a01b031660008051602061314f8339815191528a604051611c5891815260200190565b60405180910390a360408051338152602081018a9052908101869052606081018590526080810184905260a081018390527f9dfa08abae6c607453d7ef936fd3d42c4afc359dcfa226a49be696604a2468459060c00160405180910390a15050505050505050565b336000818152600360205260409020543090831115611b4f5760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610b5e565b33600090815260036020526040812080548391908390611d3c908490612ce2565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061314f83398151915290610ac69086815260200190565b60408051606081018252600080825260208201819052918101829052600060098481548110611db257611db2612daf565b60009182526020808320909101546001600160a01b03908116808452600a835260409384902084516060810186528154815260018201546001600160801b0316948101949094526002015490911692820192909252909590945092505050565b42841015611e625760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610b5e565b6000611e6c610f4a565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611f85573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590611fbb5750886001600160a01b0316816001600160a01b0316145b611ff85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610b5e565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6006546201000090046001600160a01b0316331461208057600080fd5b6006805462010000600160b01b031916620100006001600160a01b038416908102919091179091556040519081527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f39060200160405180910390a150565b600781815481106120ee57600080fd5b9060005260206000200160009150905080546109ea90612d52565b600080612115836106b7565b90506000600980548060200260200160405190810160405280929190818152602001828054801561216f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612151575b505050505090506000815167ffffffffffffffff8111156121925761219261275d565b6040519080825280602002602001820160405280156121bb578160200160208202803683370190505b509050821561238f576010546001600160a01b0386166000908152600e60205260409020600101556121eb611712565b6001600160a01b0386166000908152600e602052604081206003810192909255426002830155815485929190612222908490612ce2565b9091555050600b54600090670de0b6b3a7640000906122419086612cf9565b61224b9190612d18565b9050600061225b61271083612d18565b9050612267308261254a565b60005b845181101561234657600061227f878361248b565b90508085838151811061229457612294612daf565b6020026020010181815250508582815181106122b2576122b2612daf565b602090810291909101015160405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561230d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123319190612d8d565b5050808061233e90612ed5565b91505061226a565b507fbbfaf902cec9107d8131a7888c2b89c5e5820ff6319b992657e8eaa9a36feced8786868660405161237c949392919061306e565b60405180910390a1509295945050505050565b505050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516123c991906130b2565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546124439190612d3a565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061314f83398151915291015b60405180910390a35050565b60095460009082106124d65760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b92590813d5550813d1881093d5539160621b6044820152606401610b5e565b61271063ffffffff16670de0b6b3a764000084600a60006009878154811061250057612500612daf565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461252f9190612cf9565b6125399190612d18565b6125439190612d18565b9392505050565b6001600160a01b03821660009081526003602052604081208054839290612572908490612ce2565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061314f8339815191529060200161247f565b8280546125b890612d52565b90600052602060002090601f0160209004810192826125da5760008555612620565b82601f106125f357805160ff1916838001178555612620565b82800160010185558215612620579182015b82811115612620578251825591602001919060010190612605565b5061262c929150612630565b5090565b5b8082111561262c5760008155600101612631565b6001600160a01b0381168114610dc857600080fd5b60006020828403121561266c57600080fd5b813561254381612645565b6000815180845260005b8181101561269d57602081850181015186830182015201612681565b818111156126af576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006125436020830184612677565b600080604083850312156126ea57600080fd5b82356126f581612645565b946020939093013593505050565b60006020828403121561271557600080fd5b5035919050565b60008060006060848603121561273157600080fd5b833561273c81612645565b9250602084013561274c81612645565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561279c5761279c61275d565b604052919050565b600067ffffffffffffffff8211156127be576127be61275d565b5060051b60200190565b6000601f83818401126127da57600080fd5b823560206127ef6127ea836127a4565b612773565b82815260059290921b8501810191818101908784111561280e57600080fd5b8287015b848110156128a557803567ffffffffffffffff808211156128335760008081fd5b818a0191508a603f8301126128485760008081fd5b8582013560408282111561285e5761285e61275d565b61286f828b01601f19168901612773565b92508183528c818386010111156128865760008081fd5b8181850189850137506000908201870152845250918301918301612812565b50979650505050505050565b803563ffffffff811681146128c557600080fd5b919050565b6000606082840312156128dc57600080fd5b6040516060810181811067ffffffffffffffff821117156128ff576128ff61275d565b60405290508061290e836128b1565b815261291c602084016128b1565b602082015261292d604084016128b1565b60408201525092915050565b600082601f83011261294a57600080fd5b8135602061295a6127ea836127a4565b82815260059290921b8401810191818101908684111561297957600080fd5b8286015b8481101561299d57803561299081612645565b835291830191830161297d565b509695505050505050565b600082601f8301126129b957600080fd5b813560206129c96127ea836127a4565b82815260059290921b840181019181810190868411156129e857600080fd5b8286015b8481101561299d5780356001600160801b0381168114612a0c5760008081fd5b83529183019183016129ec565b600082601f830112612a2a57600080fd5b81356020612a3a6127ea836127a4565b82815260059290921b84018101918181019086841115612a5957600080fd5b8286015b8481101561299d5780358352918301918301612a5d565b6000806000806000806101008789031215612a8e57600080fd5b863567ffffffffffffffff80821115612aa657600080fd5b612ab28a838b016127c8565b9750612ac18a60208b016128ca565b96506080890135915080821115612ad757600080fd5b612ae38a838b01612939565b955060a0890135915080821115612af957600080fd5b612b058a838b016129a8565b945060c0890135915080821115612b1b57600080fd5b612b278a838b01612939565b935060e0890135915080821115612b3d57600080fd5b50612b4a89828a01612a19565b9150509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015612b91578351151583529284019291840191600101612b73565b50909695505050505050565b600081518084526020808501945080840160005b83811015612bcd57815187529582019590820190600101612bb1565b509495945050505050565b6020815260006125436020830184612b9d565b60ff81168114610dc857600080fd5b600080600080600080600060e0888a031215612c1557600080fd5b8735612c2081612645565b96506020880135612c3081612645565b955060408801359450606088013593506080880135612c4e81612beb565b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612c7e57600080fd5b8235612c8981612645565b91506020830135612c9981612645565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818516808303821115612cd957612cd9612ca4565b01949350505050565b600082821015612cf457612cf4612ca4565b500390565b6000816000190483118215151615612d1357612d13612ca4565b500290565b600082612d3557634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612d4d57612d4d612ca4565b500190565b600181811c90821680612d6657607f821691505b60208210811415612d8757634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215612d9f57600080fd5b8151801515811461254357600080fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215612dd757600080fd5b815161254381612beb565b600181815b80851115612e1d578160001904821115612e0357612e03612ca4565b80851615612e1057918102915b93841c9390800290612de7565b509250929050565b600082612e3457506001610ad2565b81612e4157506000610ad2565b8160018114612e575760028114612e6157612e7d565b6001915050610ad2565b60ff841115612e7257612e72612ca4565b50506001821b610ad2565b5060208310610133831016604e8410600b8410161715612ea0575081810a610ad2565b612eaa8383612de2565b8060001904821115612ebe57612ebe612ca4565b029392505050565b600061254360ff841683612e25565b6000600019821415612ee957612ee9612ca4565b5060010190565b600081518084526020808501945080840160005b83811015612bcd5781516001600160a01b031687529582019590820190600101612f04565b600081518084526020808501945080840160005b83811015612bcd5781516001600160801b031687529582019590820190600101612f3d565b60e08082528851908201819052600090610100600582901b8401810191908401906020808d01855b83811015612fb85760ff19888703018552612fa6868351612677565b95509382019390820190600101612f8a565b505085840381870152505050612fce818a612ef0565b90508281036040840152612fe28189612f29565b90508281036060840152612ff68188612ef0565b9050828103608084015261300a8187612b9d565b91505061301f60a083018563ffffffff169052565b63ffffffff831660c08301526109d1565b600063ffffffff8381169083168181101561304d5761304d612ca4565b039392505050565b60006020828403121561306757600080fd5b5051919050565b60018060a01b03851681528360208201526080604082015260006130956080830185612ef0565b82810360608401526130a78185612b9d565b979650505050505050565b600080835481600182811c9150808316806130ce57607f831692505b60208084108214156130ee57634e487b7160e01b86526022600452602486fd5b818015613102576001811461311357613140565b60ff19861689528489019650613140565b60008a81526020902060005b868110156131385781548b82015290850190830161311f565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212209d50f51d2562bcf6326132389f7d29d0b87dd67f993b2478bf2fb924496e7fea64736f6c634300080a0033",
  "bytecodeSha1": "18f7f38ec57c8a7a20fbdf787c24f7ce5d1a27d1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "BuidlCollective",
  "coverageMap": {
    "branches": {
      "0": {
        "BuidlCollective._claim": {
          "112": [
            19919,
            19928,
            false
          ]
        },
        "BuidlCollective.calculateShareToClaim": {
          "97": [
            11995,
            12050,
            false
          ],
          "98": [
            12074,
            12148,
            false
          ],
          "99": [
            12326,
            12420,
            true
          ],
          "100": [
            12648,
            12720,
            true
          ],
          "101": [
            13166,
            13190,
            false
          ],
          "102": [
            13545,
            13573,
            false
          ]
        },
        "BuidlCollective.cancel": {
          "105": [
            7969,
            7995,
            true
          ]
        },
        "BuidlCollective.convertShareToToken": {
          "113": [
            14843,
            14867,
            true
          ]
        },
        "BuidlCollective.getVestingPercent": {
          "108": [
            14184,
            14234,
            false
          ],
          "109": [
            14277,
            14311,
            false
          ]
        },
        "BuidlCollective.initialize": {
          "106": [
            6839,
            6869,
            true
          ],
          "107": [
            7142,
            7174,
            true
          ]
        },
        "BuidlCollective.pokeApproval": {
          "110": [
            10745,
            10785,
            false
          ]
        },
        "BuidlCollective.stake": {
          "111": [
            15604,
            15634,
            true
          ]
        },
        "BuidlCollective.startCollective": {
          "104": [
            8693,
            8719,
            true
          ]
        },
        "BuidlCollective.unstakeWithoutClaim": {
          "103": [
            17240,
            17292,
            true
          ]
        }
      },
      "1": {
        "ERC20.DOMAIN_SEPARATOR": {
          "115": [
            5497,
            5530,
            true
          ]
        },
        "ERC20.permit": {
          "116": [
            4324,
            4351,
            true
          ],
          "117": [
            5166,
            5196,
            false
          ],
          "118": [
            5200,
            5225,
            true
          ]
        },
        "ERC20.transferFrom": {
          "114": [
            3552,
            3580,
            false
          ]
        }
      },
      "2": {}
    },
    "statements": {
      "0": {
        "BuidlCollective._claim": {
          "78": [
            19944,
            19991
          ],
          "79": [
            20005,
            20075
          ],
          "80": [
            20089,
            20143
          ],
          "81": [
            20157,
            20198
          ],
          "82": [
            20338,
            20370
          ],
          "83": [
            20511,
            20530
          ],
          "84": [
            20548,
            20591
          ],
          "85": [
            20424,
            20427
          ],
          "86": [
            20619,
            20674
          ],
          "87": [
            20688,
            20700
          ]
        },
        "BuidlCollective.calculateShareToClaim": {
          "0": [
            12052,
            12060
          ],
          "1": [
            12150,
            12158
          ],
          "2": [
            13192,
            13200
          ],
          "3": [
            13589,
            13611
          ],
          "4": [
            13642,
            13696
          ]
        },
        "BuidlCollective.cancel": {
          "34": [
            7961,
            7996
          ],
          "35": [
            8006,
            8023
          ]
        },
        "BuidlCollective.convertShareToToken": {
          "92": [
            14835,
            14892
          ],
          "93": [
            14902,
            14989
          ]
        },
        "BuidlCollective.getClaimable": {
          "58": [
            11362,
            11408
          ],
          "59": [
            11343,
            11346
          ],
          "60": [
            11429,
            11447
          ]
        },
        "BuidlCollective.getVestingPercent": {
          "48": [
            14040,
            14048
          ],
          "49": [
            14236,
            14263
          ],
          "50": [
            14313,
            14321
          ],
          "51": [
            14331,
            14426
          ]
        },
        "BuidlCollective.initialize": {
          "36": [
            6831,
            6870
          ],
          "37": [
            6880,
            6908
          ],
          "38": [
            6918,
            6936
          ],
          "39": [
            6946,
            6978
          ],
          "40": [
            6988,
            7022
          ],
          "41": [
            7134,
            7212
          ],
          "42": [
            7226,
            7275
          ],
          "43": [
            7369,
            7394
          ],
          "44": [
            7408,
            7431
          ],
          "45": [
            7115,
            7118
          ],
          "46": [
            7451,
            7477
          ],
          "47": [
            7487,
            7721
          ]
        },
        "BuidlCollective.pokeApproval": {
          "52": [
            10608,
            10647
          ],
          "53": [
            10661,
            10727
          ],
          "54": [
            10805,
            10824
          ],
          "55": [
            10863,
            10883
          ],
          "56": [
            10589,
            10592
          ],
          "57": [
            10917,
            10933
          ]
        },
        "BuidlCollective.readToken": {
          "71": [
            10140,
            10180
          ]
        },
        "BuidlCollective.stake": {
          "61": [
            15596,
            15662
          ],
          "62": [
            15807,
            15837
          ],
          "63": [
            15851,
            15879
          ],
          "64": [
            16373,
            16410
          ],
          "65": [
            16420,
            16446
          ],
          "66": [
            16456,
            16492
          ],
          "67": [
            16502,
            16721
          ]
        },
        "BuidlCollective.startCollective": {
          "23": [
            8685,
            8720
          ],
          "24": [
            8730,
            8754
          ],
          "25": [
            8929,
            8963
          ],
          "26": [
            9122,
            9188
          ],
          "27": [
            9317,
            9343
          ],
          "28": [
            9357,
            9387
          ],
          "29": [
            8910,
            8913
          ],
          "30": [
            9407,
            9463
          ],
          "31": [
            9473,
            9543
          ],
          "32": [
            9553,
            9579
          ],
          "33": [
            9589,
            9632
          ]
        },
        "BuidlCollective.unstake": {
          "17": [
            18047,
            18065
          ]
        },
        "BuidlCollective.unstakeAll": {
          "18": [
            18837,
            18855
          ],
          "19": [
            19063,
            19116
          ],
          "20": [
            19126,
            19165
          ],
          "21": [
            19175,
            19289
          ]
        },
        "BuidlCollective.unstakeWithoutClaim": {
          "8": [
            17219,
            17340
          ],
          "9": [
            17350,
            17402
          ],
          "10": [
            17412,
            17470
          ],
          "11": [
            17480,
            17594
          ]
        },
        "BuidlCollective.updateAdmin": {
          "76": [
            8212,
            8229
          ],
          "77": [
            8239,
            8266
          ]
        }
      },
      "1": {
        "ERC20.DOMAIN_SEPARATOR": {
          "22": [
            5478,
            5616
          ]
        },
        "ERC20._burn": {
          "94": [
            6718,
            6743
          ],
          "95": [
            6886,
            6907
          ],
          "96": [
            6928,
            6967
          ]
        },
        "ERC20._mint": {
          "89": [
            6385,
            6406
          ],
          "90": [
            6552,
            6575
          ],
          "91": [
            6596,
            6633
          ]
        },
        "ERC20.approve": {
          "5": [
            2788,
            2827
          ],
          "6": [
            2838,
            2880
          ],
          "7": [
            2891,
            2902
          ]
        },
        "ERC20.computeDomainSeparator": {
          "88": [
            5713,
            6114
          ]
        },
        "ERC20.permit": {
          "72": [
            4316,
            4379
          ],
          "73": [
            5141,
            5273
          ],
          "74": [
            5288,
            5332
          ],
          "75": [
            5353,
            5389
          ]
        },
        "ERC20.transfer": {
          "68": [
            3029,
            3060
          ],
          "69": [
            3206,
            3229
          ],
          "70": [
            3250,
            3287
          ]
        },
        "ERC20.transferFrom": {
          "12": [
            3594,
            3640
          ],
          "13": [
            3651,
            3676
          ],
          "14": [
            3822,
            3845
          ],
          "15": [
            3866,
            3897
          ],
          "16": [
            3908,
            3919
          ]
        }
      },
      "2": {}
    }
  },
  "dependencies": [
    "ERC20",
    "IBuidlCollective"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102535760003560e01c806370a0823111610146578063a9059cbb116100c3578063dd62ed3e11610087578063dd62ed3e14610593578063e0c9802f146105be578063e2f273bd1461060b578063f5dab7111461061e578063f851a4401461068b578063fed45587146106a457600080fd5b8063a9059cbb14610509578063a93206881461051c578063d32e81a51461056e578063d505accf14610577578063d77a1d3a1461058a57600080fd5b806395d89b411161010a57806395d89b411461049b5780639cfdbd5e146104a3578063a4c8b46b146104c1578063a583024b146104d6578063a694fc3a146104f657600080fd5b806370a082311461043b5780637a55ff211461045b5780637d9fce4d146104635780637ecebe0014610472578063817b1cd21461049257600080fd5b8063313ce567116101d45780634c33fe94116101985780634c33fe94146103d95780634e71d92d146103ec5780634f64b2be146103f45780635da69cb61461041f5780636b9542921461042857600080fd5b8063313ce5671461037f57806335322f37146103b85780633644e515146103c057806336e9b344146103c85780634ae99d30146103d157600080fd5b80631959a0021161021b5780631959a002146102c85780631ae69fb81461031d57806323b872dd146103325780632e17de781461034557806330adf81f1461035857600080fd5b806301c0c3e51461025857806301e1d1141461027e57806306fdde0314610287578063095ea7b31461029c57806318160ddd146102bf575b600080fd5b61026b61026636600461265a565b6106b7565b6040519081526020015b60405180910390f35b61026b600b5481565b61028f6109dd565b60405161027591906126c4565b6102af6102aa3660046126d7565b610a6b565b6040519015158152602001610275565b61026b60025481565b6102fd6102d636600461265a565b600e6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610275565b61033061032b366004612703565b610ad8565b005b6102af61034036600461271c565b610c62565b610330610353366004612703565b610d42565b61026b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103a67f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610275565b610330610dcb565b61026b610f4a565b61026b60085481565b610330610fa5565b6103306103e736600461265a565b6112e3565b61026b61131c565b610407610402366004612703565b61139c565b6040516001600160a01b039091168152602001610275565b61026b600d5481565b610330610436366004612a74565b6113c6565b61026b61044936600461265a565b60036020526000908152604090205481565b61026b611712565b61026b670de0b6b3a764000081565b61026b61048036600461265a565b60056020526000908152604090205481565b61026b60115481565b61028f611802565b6104ac61271081565b60405163ffffffff9091168152602001610275565b6104c961180f565b6040516102759190612b57565b6104e96104e436600461265a565b6119f4565b6040516102759190612bd8565b610330610504366004612703565b611a9c565b6102af6105173660046126d7565b611d1b565b61052f61052a366004612703565b611d81565b604080516001600160a01b03938416815282516020808301919091528301516001600160801b0316818301529101519091166060820152608001610275565b61026b600f5481565b610330610585366004612bfa565b611e12565b61026b60105481565b61026b6105a1366004612c6b565b600460209081526000928352604080842090915290825290205481565b600c546105e49063ffffffff80821691600160201b8104821691600160401b9091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610275565b61033061061936600461265a565b612063565b61065f61062c36600461265a565b600a6020526000908152604090208054600182015460029092015490916001600160801b0316906001600160a01b031683565b604080519384526001600160801b0390921660208401526001600160a01b031690820152606001610275565b600654610407906201000090046001600160a01b031681565b61028f6106b2366004612703565b6120de565b6001600160a01b0381166000908152600e602052604081206002015442116106e157506000919050565b600c546107049063ffffffff600160201b8204811691600160401b900416612cba565b63ffffffff16421161071857506000919050565b6001600160a01b0382166000908152600e602052604081206003015461073c611712565b6107469190612ce2565b600c5490915060009061076f9063ffffffff600160201b8204811691600160401b900416612cba565b6001600160a01b0385166000908152600e602052604090206002015463ffffffff91909116116107c4576001600160a01b0384166000908152600e60205260409020600201546107bf9042612ce2565b6107f3565b600c5463ffffffff600160401b82048116916107e991600160201b9091041642612ce2565b6107f39190612ce2565b600c5490915060009061081c9063ffffffff600160201b8204811691600160401b900416612cba565b63ffffffff16600f541061089657600b54600f5461083a9042612ce2565b60115461084a9061271090612cf9565b6108549190612cf9565b61085e9190612d18565b6001600160a01b0386166000908152600e60205260409020600101546010546108879190612ce2565b6108919190612d3a565b610923565b600b54600c546108bc9063ffffffff600160201b8204811691600160401b900416612cba565b6108cc9063ffffffff1642612ce2565b6011546108dc9061271090612cf9565b6108e69190612cf9565b6108f09190612d18565b6001600160a01b0386166000908152600e60205260409020600101546010546109199190612ce2565b6109239190612d3a565b905060006109318383612d18565b9050806109445750600095945050505050565b6001600160a01b0386166000908152600e6020526040812054829061096c9061271090612cf9565b6109769190612d18565b90506000670de0b6b3a76400006127106109908489612cf9565b61099a9190612d18565b6109a49190612d18565b9050600d5485106109ba57979650505050505050565b600d546109c78683612cf9565b6109d19190612d18565b98975050505050505050565b600080546109ea90612d52565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1690612d52565b8015610a635780601f10610a3857610100808354040283529160200191610a63565b820191906000526020600020905b815481529060010190602001808311610a4657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610ac69086815260200190565b60405180910390a35060015b92915050565b600b54600090670de0b6b3a7640000610af361271085612cf9565b610afd9190612cf9565b610b079190612d18565b336000908152600e6020526040902054909150811115610b675760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b60448201526064015b60405180910390fd5b336000908152600e602052604081208054839290610b86908490612ce2565b909155505060405163a9059cbb60e01b815233600482015260248101839052309063a9059cbb906044016020604051808303816000875af1158015610bcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf39190612d8d565b507f2504fcba4204cc42c3da7919528d55ab40c2be512fe40edc8153edc4c5bf2f4433838360105442610c24611712565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c00160405180910390a15050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610cbe57610c998382612ce2565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610ce6908490612ce2565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061314f83398151915290610d2f9087815260200190565b60405180910390a3506001949350505050565b600f54421115610dbf57600b54600f54610d5c9042612ce2565b601154610d6c9061271090612cf9565b610d769190612cf9565b610d809190612d18565b60106000828254610d919190612d3a565b909155505042600f55610da333612109565b50600b54600090670de0b6b3a7640000610af361271085612cf9565b610da333612109565b50565b600f54421115610f3457600b54600f54610de59042612ce2565b601154610df59061271090612cf9565b610dff9190612cf9565b610e099190612d18565b60106000828254610e1a9190612d3a565b909155505042600f55336000908152600e6020526040902054610e3957565b610e4233612109565b50336000908152600e6020526040812054600b5490919061271090670de0b6b3a764000090610e719085612cf9565b610e7b9190612d18565b610e859190612d18565b60405163a9059cbb60e01b815233600482015260248101829052909150309063a9059cbb906044016020604051808303816000875af1158015610ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef09190612d8d565b50336000818152600e60205260408120556010547f2504fcba4204cc42c3da7919528d55ab40c2be512fe40edc8153edc4c5bf2f4491908390859042610c24611712565b336000908152600e6020526040902054610e3957565b60007f00000000000000000000000000000000000000000000000000000000000000004614610f8057610f7b612397565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6006546201000090046001600160a01b03163314610fc257600080fd5b60065460ff1615610fd257600080fd5b6006805460ff1916600117905560098054604080516020808402820181019092528281526000939092909183018282801561103657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611018575b50505050509050611060604080516060810182526000808252602082018190529181019190915290565b6000805b835181101561125f57600a600085838151811061108357611083612daf565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208251606081018452815480825260018301546001600160801b03169382018490526002909201549094169284018390528751939650928790859081106110f3576110f3612daf565b60209081029190910101516040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015611154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111789190612d8d565b50600087858151811061118d5761118d612daf565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f69190612dc5565b61120190600a612ec6565b6112146001600160801b03841686612cf9565b61122690670de0b6b3a7640000612cf9565b6112309190612d18565b905061123c8187612d3a565b95506112488382612431565b50505050808061125790612ed5565b915050611064565b50600c805463ffffffff60401b1916600160401b4263ffffffff9081168202929092179283905561129d92600160201b810483169291900416612cba565b63ffffffff16600f55600b8190556040514281527f83aaee11563f280eac61ebd060f088ce7577d5e823efa6c78de1cfec8167605d9060200160405180910390a1505050565b6006546201000090046001600160a01b0316331461130057600080fd5b60065460ff161561131057600080fd5b806001600160a01b0316ff5b6000600f5442111561138a57600b54600f546113389042612ce2565b6011546113489061271090612cf9565b6113529190612cf9565b61135c9190612d18565b6010600082825461136d9190612d3a565b909155505042600f55600061138133612109565b91506113999050565b600061139533612109565b9150505b90565b600981815481106113ac57600080fd5b6000918252602090912001546001600160a01b0316905081565b600654610100900460ff16156113db57600080fd5b60068054620100003302610100600160b01b0319909116176101001790558451600c80546020880151604089015163ffffffff908116600160401b0263ffffffff60401b19908116928216600160201b0267ffffffffffffffff1990941691909516179190911792909216919091179055835160005b818110156116ad57600a600087838151811061146f5761146f612daf565b6020908102919091018101516001600160a01b03168252810191909152604001600020600101546001600160801b0316156114f65760405162461bcd60e51b815260206004820152602160248201527f544f4b454e204144445245535320414c524541445920494e495449414c495a456044820152601160fa1b6064820152608401610b5e565b600788828151811061150a5761150a612daf565b6020908102919091018101518254600181018455600093845292829020815161153c94919091019291909101906125ac565b506000604051806060016040528085848151811061155c5761155c612daf565b6020026020010151815260200187848151811061157b5761157b612daf565b60200260200101516001600160801b031681526020018684815181106115a3576115a3612daf565b60200260200101516001600160a01b0316815250905080600a60008985815181106115d0576115d0612daf565b6020908102919091018101516001600160a01b03908116835282820193909352604091820160002084518155908401516001820180546fffffffffffffffffffffffffffffffff19166001600160801b03909216919091179055920151600290920180546001600160a01b03191692909116919091179055865160099088908490811061165f5761165f612daf565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905550806116a581612ed5565b915050611451565b50600954600855600c546040517f489170cfe0f7fcdd8410d20d8a81df8f038624bbcd9814cca42d477e9d1bb46991611701918a91899189918991899163ffffffff600160201b8204811692911690612f62565b60405180910390a150505050505050565b600c54600090600160401b900463ffffffff168061173257600091505090565b600c5463ffffffff1660006117478342613030565b600c5490915063ffffffff8083169161176991600160201b9091041684612cba565b63ffffffff161161179057611788670de0b6b3a7640000612710612cf9565b935050505090565b600c5463ffffffff600160201b9091048116908216116117b4576000935050505090565b600c5463ffffffff80841691612710916117d691600160201b90041684613030565b6117ee9063ffffffff16670de0b6b3a7640000612cf9565b6117f89190612cf9565b6117889190612d18565b600180546109ea90612d52565b60095460609060009067ffffffffffffffff8111156118305761183061275d565b604051908082528060200260200182016040528015611859578160200160208202803683370190505b50905060008060005b6009548110156119eb57600a60006009838154811061188357611883612daf565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190206002015460098054919092169450829081106118ca576118ca612daf565b600091825260209091200154604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611923573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119479190613055565b9150600a60006009838154811061196057611960612daf565b60009182526020808320909101546001600160a01b0316835282019290925260400190205482106119b457600184828151811061199f5761199f612daf565b911515602092830291909101909101526119d9565b60008482815181106119c8576119c8612daf565b911515602092830291909101909101525b806119e381612ed5565b915050611862565b50919392505050565b60606000611a01836106b7565b60095490915060009067ffffffffffffffff811115611a2257611a2261275d565b604051908082528060200260200182016040528015611a4b578160200160208202803683370190505b50905060005b600954811015611a9457611a65838261248b565b828281518110611a7757611a77612daf565b602090810291909101015280611a8c81612ed5565b915050611a51565b509392505050565b600f54421115611cc057600b54600f54611ab69042612ce2565b601154611ac69061271090612cf9565b611ad09190612cf9565b611ada9190612d18565b60106000828254611aeb9190612d3a565b909155505042600f55336000818152600360205260409020543090831115611b4f5760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610b5e565b6001600160a01b03808316600090815260036020526040808220805487900390559183168152908120805485019055600b54670de0b6b3a7640000611b9661271087612cf9565b611ba09190612cf9565b611baa9190612d18565b601054909150426000611bbb611712565b60408051608081018252868152602080820187815282840187815260608401868152336000908152600e909452948320845181559151600183015551600282015592516003909301929092556011805493945090928a9290611c1e908490612d3a565b92505081905550856001600160a01b0316876001600160a01b031660008051602061314f8339815191528a604051611c5891815260200190565b60405180910390a360408051338152602081018a9052908101869052606081018590526080810184905260a081018390527f9dfa08abae6c607453d7ef936fd3d42c4afc359dcfa226a49be696604a2468459060c00160405180910390a15050505050505050565b336000818152600360205260409020543090831115611b4f5760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610b5e565b33600090815260036020526040812080548391908390611d3c908490612ce2565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061314f83398151915290610ac69086815260200190565b60408051606081018252600080825260208201819052918101829052600060098481548110611db257611db2612daf565b60009182526020808320909101546001600160a01b03908116808452600a835260409384902084516060810186528154815260018201546001600160801b0316948101949094526002015490911692820192909252909590945092505050565b42841015611e625760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610b5e565b6000611e6c610f4a565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611f85573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590611fbb5750886001600160a01b0316816001600160a01b0316145b611ff85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610b5e565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6006546201000090046001600160a01b0316331461208057600080fd5b6006805462010000600160b01b031916620100006001600160a01b038416908102919091179091556040519081527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f39060200160405180910390a150565b600781815481106120ee57600080fd5b9060005260206000200160009150905080546109ea90612d52565b600080612115836106b7565b90506000600980548060200260200160405190810160405280929190818152602001828054801561216f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612151575b505050505090506000815167ffffffffffffffff8111156121925761219261275d565b6040519080825280602002602001820160405280156121bb578160200160208202803683370190505b509050821561238f576010546001600160a01b0386166000908152600e60205260409020600101556121eb611712565b6001600160a01b0386166000908152600e602052604081206003810192909255426002830155815485929190612222908490612ce2565b9091555050600b54600090670de0b6b3a7640000906122419086612cf9565b61224b9190612d18565b9050600061225b61271083612d18565b9050612267308261254a565b60005b845181101561234657600061227f878361248b565b90508085838151811061229457612294612daf565b6020026020010181815250508582815181106122b2576122b2612daf565b602090810291909101015160405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561230d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123319190612d8d565b5050808061233e90612ed5565b91505061226a565b507fbbfaf902cec9107d8131a7888c2b89c5e5820ff6319b992657e8eaa9a36feced8786868660405161237c949392919061306e565b60405180910390a1509295945050505050565b505050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516123c991906130b2565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546124439190612d3a565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061314f83398151915291015b60405180910390a35050565b60095460009082106124d65760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b92590813d5550813d1881093d5539160621b6044820152606401610b5e565b61271063ffffffff16670de0b6b3a764000084600a60006009878154811061250057612500612daf565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461252f9190612cf9565b6125399190612d18565b6125439190612d18565b9392505050565b6001600160a01b03821660009081526003602052604081208054839290612572908490612ce2565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061314f8339815191529060200161247f565b8280546125b890612d52565b90600052602060002090601f0160209004810192826125da5760008555612620565b82601f106125f357805160ff1916838001178555612620565b82800160010185558215612620579182015b82811115612620578251825591602001919060010190612605565b5061262c929150612630565b5090565b5b8082111561262c5760008155600101612631565b6001600160a01b0381168114610dc857600080fd5b60006020828403121561266c57600080fd5b813561254381612645565b6000815180845260005b8181101561269d57602081850181015186830182015201612681565b818111156126af576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006125436020830184612677565b600080604083850312156126ea57600080fd5b82356126f581612645565b946020939093013593505050565b60006020828403121561271557600080fd5b5035919050565b60008060006060848603121561273157600080fd5b833561273c81612645565b9250602084013561274c81612645565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561279c5761279c61275d565b604052919050565b600067ffffffffffffffff8211156127be576127be61275d565b5060051b60200190565b6000601f83818401126127da57600080fd5b823560206127ef6127ea836127a4565b612773565b82815260059290921b8501810191818101908784111561280e57600080fd5b8287015b848110156128a557803567ffffffffffffffff808211156128335760008081fd5b818a0191508a603f8301126128485760008081fd5b8582013560408282111561285e5761285e61275d565b61286f828b01601f19168901612773565b92508183528c818386010111156128865760008081fd5b8181850189850137506000908201870152845250918301918301612812565b50979650505050505050565b803563ffffffff811681146128c557600080fd5b919050565b6000606082840312156128dc57600080fd5b6040516060810181811067ffffffffffffffff821117156128ff576128ff61275d565b60405290508061290e836128b1565b815261291c602084016128b1565b602082015261292d604084016128b1565b60408201525092915050565b600082601f83011261294a57600080fd5b8135602061295a6127ea836127a4565b82815260059290921b8401810191818101908684111561297957600080fd5b8286015b8481101561299d57803561299081612645565b835291830191830161297d565b509695505050505050565b600082601f8301126129b957600080fd5b813560206129c96127ea836127a4565b82815260059290921b840181019181810190868411156129e857600080fd5b8286015b8481101561299d5780356001600160801b0381168114612a0c5760008081fd5b83529183019183016129ec565b600082601f830112612a2a57600080fd5b81356020612a3a6127ea836127a4565b82815260059290921b84018101918181019086841115612a5957600080fd5b8286015b8481101561299d5780358352918301918301612a5d565b6000806000806000806101008789031215612a8e57600080fd5b863567ffffffffffffffff80821115612aa657600080fd5b612ab28a838b016127c8565b9750612ac18a60208b016128ca565b96506080890135915080821115612ad757600080fd5b612ae38a838b01612939565b955060a0890135915080821115612af957600080fd5b612b058a838b016129a8565b945060c0890135915080821115612b1b57600080fd5b612b278a838b01612939565b935060e0890135915080821115612b3d57600080fd5b50612b4a89828a01612a19565b9150509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015612b91578351151583529284019291840191600101612b73565b50909695505050505050565b600081518084526020808501945080840160005b83811015612bcd57815187529582019590820190600101612bb1565b509495945050505050565b6020815260006125436020830184612b9d565b60ff81168114610dc857600080fd5b600080600080600080600060e0888a031215612c1557600080fd5b8735612c2081612645565b96506020880135612c3081612645565b955060408801359450606088013593506080880135612c4e81612beb565b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612c7e57600080fd5b8235612c8981612645565b91506020830135612c9981612645565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818516808303821115612cd957612cd9612ca4565b01949350505050565b600082821015612cf457612cf4612ca4565b500390565b6000816000190483118215151615612d1357612d13612ca4565b500290565b600082612d3557634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612d4d57612d4d612ca4565b500190565b600181811c90821680612d6657607f821691505b60208210811415612d8757634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215612d9f57600080fd5b8151801515811461254357600080fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215612dd757600080fd5b815161254381612beb565b600181815b80851115612e1d578160001904821115612e0357612e03612ca4565b80851615612e1057918102915b93841c9390800290612de7565b509250929050565b600082612e3457506001610ad2565b81612e4157506000610ad2565b8160018114612e575760028114612e6157612e7d565b6001915050610ad2565b60ff841115612e7257612e72612ca4565b50506001821b610ad2565b5060208310610133831016604e8410600b8410161715612ea0575081810a610ad2565b612eaa8383612de2565b8060001904821115612ebe57612ebe612ca4565b029392505050565b600061254360ff841683612e25565b6000600019821415612ee957612ee9612ca4565b5060010190565b600081518084526020808501945080840160005b83811015612bcd5781516001600160a01b031687529582019590820190600101612f04565b600081518084526020808501945080840160005b83811015612bcd5781516001600160801b031687529582019590820190600101612f3d565b60e08082528851908201819052600090610100600582901b8401810191908401906020808d01855b83811015612fb85760ff19888703018552612fa6868351612677565b95509382019390820190600101612f8a565b505085840381870152505050612fce818a612ef0565b90508281036040840152612fe28189612f29565b90508281036060840152612ff68188612ef0565b9050828103608084015261300a8187612b9d565b91505061301f60a083018563ffffffff169052565b63ffffffff831660c08301526109d1565b600063ffffffff8381169083168181101561304d5761304d612ca4565b039392505050565b60006020828403121561306757600080fd5b5051919050565b60018060a01b03851681528360208201526080604082015260006130956080830185612ef0565b82810360608401526130a78185612b9d565b979650505050505050565b600080835481600182811c9150808316806130ce57607f831692505b60208084108214156130ee57634e487b7160e01b86526022600452602486fd5b818015613102576001811461311357613140565b60ff19861689528489019650613140565b60008a81526020902060005b868110156131385781548b82015290850190830161311f565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212209d50f51d2562bcf6326132389f7d29d0b87dd67f993b2478bf2fb924496e7fea64736f6c634300080a0033",
  "deployedSourceMap": "2333:18387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:1824;;;;;;:::i;:::-;;:::i;:::-;;;548:25:3;;;536:2;521:18;11889:1824:0;;;;;;;;4348:26;;;;;;1062:18:1;;;:::i;:::-;;;;;;;:::i;2670:239::-;;;;;;:::i;:::-;;:::i;:::-;;;1771:14:3;;1764:22;1746:41;;1734:2;1719:18;2670:239:1;1606:187:3;1336:26:1;;;;;;4718:44:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2029:25:3;;;2085:2;2070:18;;2063:34;;;;2113:18;;;2106:34;2171:2;2156:18;;2149:34;2016:3;2001:19;4718:44:0;1798:391:3;17058:543:0;;;;;;:::i;:::-;;:::i;:::-;;3322:604:1;;;;;;:::i;:::-;;:::i;17969:576:0:-;;;;;;:::i;:::-;;:::i;1677:167:1:-;;1727:117;1677:167;;1114:31;;;;;;;;3194:4:3;3182:17;;;3164:36;;3152:2;3137:18;1114:31:1;3022:184:3;18717:579:0;;;:::i;5402:221:1:-;;;:::i;4233:25:0:-;;;;;;8629:1010;;;:::i;7895:135::-;;;;;;:::i;:::-;;:::i;19427:140::-;;;:::i;4265:23::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3635:32:3;;;3617:51;;3605:2;3590:18;4265:23:0;3471:203:3;4667:40:0;;;;;;6561:1167;;;;;;:::i;:::-;;:::i;1369:44:1:-;;;;;;:::i;:::-;;;;;;;;;;;;;;13892:541:0;;;:::i;2615:50::-;;2657:8;2615:50;;1959:41:1;;;;;;:::i;:::-;;;;;;;;;;;;;;4997:26:0;;;;;;1087:20:1;;;:::i;2576:33:0:-;;2604:5;2576:33;;;;;10507:10:3;10495:23;;;10477:42;;10465:2;10450:18;2576:33:0;10333:192:3;10367:573:0;;;:::i;:::-;;;;;;;:::i;11091:363::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15452:1276::-;;;;;;:::i;:::-;;:::i;2915:401:1:-;;;;;;:::i;:::-;;:::i;9985:202:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;12164:15:3;;;12146:34;;12216:13;;12211:2;12196:18;;;12189:41;;;;12276:15;;12270:22;-1:-1:-1;;;;;12266:63:3;12246:18;;;12239:91;12376:15;;12370:22;12366:31;;;12361:2;12346:18;;12339:59;12095:3;12080:19;9985:202:0;11883:521:3;4803:29:0;;;;;;4117:1279:1;;;;;;:::i;:::-;;:::i;4921:23:0:-;;;;;;1420:64:1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4381:32:0;;;;;;;;;;-1:-1:-1;;;4381:32:0;;;;;-1:-1:-1;;;4381:32:0;;;;;;;;;;13933:10:3;13970:15;;;13952:34;;14022:15;;;14017:2;14002:18;;13995:43;14074:15;;14054:18;;;14047:43;;;;13911:2;13896:18;4381:32:0;13727:369:3;8143:130:0;;;;;;:::i;:::-;;:::i;4295:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4295:46:0;;-1:-1:-1;;;;;4295:46:0;;;;;;;14303:25:3;;;-1:-1:-1;;;;;14364:47:3;;;14359:2;14344:18;;14337:75;-1:-1:-1;;;;;14448:32:3;14428:18;;;14421:60;14291:2;14276:18;4295:46:0;14101:386:3;4165:20:0;;;;;;;;-1:-1:-1;;;;;4165:20:0;;;4192:35;;;;;;:::i;:::-;;:::i;11889:1824::-;-1:-1:-1;;;;;12014:17:0;;11972:7;12014:17;;;:8;:17;;;;;:36;;;11995:15;:55;11991:69;;-1:-1:-1;12059:1:0;;11889:1824;-1:-1:-1;11889:1824:0:o;11991:69::-;12127:14;:20;12094:53;;12127:20;-1:-1:-1;;;12127:20:0;;;;;-1:-1:-1;;;12094:30:0;;;:53;:::i;:::-;12074:74;;:15;:74;12070:88;;-1:-1:-1;12157:1:0;;11889:1824;-1:-1:-1;11889:1824:0:o;12070:88::-;-1:-1:-1;;;;;12237:17:0;;12168:32;12237:17;;;:8;:17;;;;;:48;;;12203:19;:17;:19::i;:::-;:82;;;;:::i;:::-;12399:14;:20;12168:117;;-1:-1:-1;12304:19:0;;12366:53;;12399:20;-1:-1:-1;;;12399:20:0;;;;;-1:-1:-1;;;12366:30:0;;;:53;:::i;:::-;-1:-1:-1;;;;;12326:17:0;;;;;;:8;:17;;;;;:36;;;:94;;;;;-1:-1:-1;12326:285:0;;-1:-1:-1;;;;;12575:17:0;;;;;;:8;:17;;;;;:36;;;12549:62;;:15;:62;:::i;:::-;12326:285;;;12500:14;:30;;-1:-1:-1;;;12500:30:0;;;;;12443:46;;-1:-1:-1;;;12469:20:0;;;;12443:15;:46;:::i;:::-;:87;;;;:::i;:::-;12699:14;:20;12304:307;;-1:-1:-1;12626:19:0;;12666:53;;12699:20;-1:-1:-1;;;12699:20:0;;;;;-1:-1:-1;;;12666:30:0;;;:53;:::i;:::-;12648:72;;:14;;:72;:437;;13074:11;;13047:14;;13029:32;;:15;:32;:::i;:::-;13009:11;;:16;;2604:5;;13009:16;:::i;:::-;:53;;;;:::i;:::-;13008:77;;;;:::i;:::-;-1:-1:-1;;;;;12961:17:0;;;;;;:8;:17;;;;;:36;;;12942:8;;:55;;12961:36;12942:55;:::i;:::-;:143;;;;:::i;:::-;12648:437;;;12912:11;;12878:14;:20;12845:53;;12878:20;-1:-1:-1;;;12878:20:0;;;;;-1:-1:-1;;;12845:30:0;;;:53;:::i;:::-;12826:73;;;;:15;:73;:::i;:::-;12806:11;;:16;;2604:5;;12806:16;:::i;:::-;:94;;;;:::i;:::-;12805:118;;;;:::i;:::-;-1:-1:-1;;;;;12758:17:0;;;;;;:8;:17;;;;;:36;;;12739:8;;:55;;12758:36;12739:55;:::i;:::-;:184;;;;:::i;:::-;12626:459;-1:-1:-1;13096:27:0;13126:25;13140:11;12626:459;13126:25;:::i;:::-;13096:55;-1:-1:-1;13166:24:0;13162:38;;-1:-1:-1;13199:1:0;;11889:1824;-1:-1:-1;;;;;11889:1824:0:o;13162:38::-;-1:-1:-1;;;;;13303:17:0;;13274:25;13303:17;;;:8;:17;;;;;:32;13356:19;;13303:37;;2604:5;;13303:37;:::i;:::-;13302:73;;;;:::i;:::-;13274:101;-1:-1:-1;13423:23:0;2657:8;2604:5;13450:56;13274:101;13450:24;:56;:::i;:::-;13449:63;;;;:::i;:::-;:81;;;;:::i;:::-;13423:107;;13560:13;;13545:11;:28;13541:166;;13596:15;11889:1824;-1:-1:-1;;;;;;;11889:1824:0:o;13541:166::-;13683:13;;13650:29;13668:11;13650:15;:29;:::i;:::-;13649:47;;;;:::i;:::-;13642:54;11889:1824;-1:-1:-1;;;;;;;;11889:1824:0:o;1062:18:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2670:239::-;2798:10;2768:4;2788:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2788:30:1;;;;;;;;;;:39;;;2843:37;2768:4;;2788:30;;2843:37;;;;2821:6;548:25:3;;536:2;521:18;;402:177;2843:37:1;;;;;;;;-1:-1:-1;2898:4:1;2670:239;;;;;:::o;17058:543:0:-;17198:11;;17131:21;;2657:8;17156:20;2604:5;17156:15;:20;:::i;:::-;:38;;;;:::i;:::-;17155:54;;;;:::i;:::-;17266:10;17257:20;;;;:8;:20;;;;;:35;17131:78;;-1:-1:-1;17240:52:0;;;17219:121;;;;-1:-1:-1;;;17219:121:0;;16102:2:3;17219:121:0;;;16084:21:3;16141:2;16121:18;;;16114:30;-1:-1:-1;;;16160:18:3;;;16153:52;16222:18;;17219:121:0;;;;;;;;;17359:10;17350:20;;;;:8;:20;;;;;:52;;17389:13;;17350:20;:52;;17389:13;;17350:52;:::i;:::-;;;;-1:-1:-1;;17412:58:0;;-1:-1:-1;;;17412:58:0;;17442:10;17412:58;;;16425:51:3;16492:18;;;16485:34;;;17426:4:0;;17412:29;;16398:18:3;;17412:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17485:109;17503:10;17515:15;17532:13;17547:8;;17557:15;17574:19;:17;:19::i;:::-;17485:109;;;-1:-1:-1;;;;;17117:32:3;;;17099:51;;17181:2;17166:18;;17159:34;;;;17209:18;;;17202:34;;;;17267:2;17252:18;;17245:34;17310:3;17295:19;;17288:35;17137:3;17339:19;;17332:35;17086:3;17071:19;17485:109:0;;;;;;;17121:480;17058:543;:::o;3322:604:1:-;-1:-1:-1;;;;;3474:15:1;;3440:4;3474:15;;;:9;:15;;;;;;;;3490:10;3474:27;;;;;;;;-1:-1:-1;;3552:28:1;;3548:92;;3624:16;3634:6;3624:7;:16;:::i;:::-;-1:-1:-1;;;;;3594:15:1;;;;;;:9;:15;;;;;;;;3610:10;3594:27;;;;;;;:46;3548:92;-1:-1:-1;;;;;3651:15:1;;;;;;:9;:15;;;;;:25;;3670:6;;3651:15;:25;;3670:6;;3651:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3822:13:1;;;;;;;:9;:13;;;;;;;:23;;;;;;3871:26;3822:13;;3871:26;;;-1:-1:-1;;;;;;;;;;;3871:26:1;;;3839:6;548:25:3;;536:2;521:18;;402:177;3871:26:1;;;;;;;;-1:-1:-1;3915:4:1;;3322:604;-1:-1:-1;;;;3322:604:1:o;17969:576:0:-;5293:14;;5275:15;:32;5271:269;;;5425:11;;5390:14;;5372:32;;:15;:32;:::i;:::-;5352:11;;:16;;2604:5;;5352:16;:::i;:::-;:53;;;;:::i;:::-;5351:85;;;;:::i;:::-;5323:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;5467:15:0;5450:14;:32;18047:18:::1;18054:10;18047:6;:18::i;:::-;-1:-1:-1::0;18142:11:0::1;::::0;18075:21:::1;::::0;2657:8:::1;18100:20;2604:5;18100:15:::0;:20:::1;:::i;5271:269::-:0;18047:18:::1;18054:10;18047:6;:18::i;5271:269::-:0;17969:576;:::o;18717:579::-;5293:14;;5275:15;:32;5271:269;;;5425:11;;5390:14;;5372:32;;:15;:32;:::i;:::-;5352:11;;:16;;2604:5;;5352:16;:::i;:::-;:53;;;;:::i;:::-;5351:85;;;;:::i;:::-;5323:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;5467:15:0;5450:14;:32;18788:10:::1;18779:20;::::0;;;:8:::1;:20;::::0;;;;:35;18775:53:::1;;18717:579::o:0;18775:53::-:1;18837:18;18844:10;18837:6;:18::i;:::-;-1:-1:-1::0;18903:10:0::1;18865:26;18894:20:::0;;;:8:::1;:20;::::0;;;;:35;18994:11:::1;::::0;18894:35;;18865:26;2604:5:::1;::::0;2657:8:::1;::::0;18961:44:::1;::::0;18894:35;18961:44:::1;:::i;:::-;18960:76;;;;:::i;:::-;:93;;;;:::i;:::-;19063:53;::::0;-1:-1:-1;;;19063:53:0;;19093:10:::1;19063:53;::::0;::::1;16425:51:3::0;16492:18;;;16485:34;;;18939:114:0;;-1:-1:-1;19077:4:0::1;::::0;19063:29:::1;::::0;16398:18:3;;19063:53:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;19135:10:0::1;19164:1;19126:20:::0;;;:8:::1;:20;::::0;;;;:39;19242:8:::1;::::0;19180:109:::1;::::0;19135:10;19210;;19222:18;;19252:15:::1;19269:19;:17;:19::i;5271:269::-:0;18788:10:::1;18779:20;::::0;;;:8:::1;:20;::::0;;;;:35;18775:53:::1;;18717:579::o:0;5402:221:1:-;5459:7;5514:16;5497:13;:33;:119;;5592:24;:22;:24::i;:::-;5478:138;;5402:221;:::o;5497:119::-;-1:-1:-1;5549:24:1;;5402:221::o;8629:1010:0:-;5088:5;;;;;-1:-1:-1;;;;;5088:5:0;5074:10;:19;5066:28;;;;;;8693:17:::1;::::0;::::1;;:26;8685:35;;;::::0;::::1;;8730:17;:24:::0;;-1:-1:-1;;8730:24:0::1;8750:4;8730:24;::::0;;8791:6:::1;8764:33:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;8730:17:::1;::::0;8764:33;;8791:6;;8764:33;::::1;8791:6:::0;8764:33;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;8764:33:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;8807:27;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;8807:27:0::1;8844:20;8879:9:::0;8874:524:::1;8894:7;:14;8890:1;:18;8874:524;;;8942:9;:21;8952:7;8960:1;8952:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;8942:21:0;;::::1;::::0;;;;::::1;::::0;;;;;;;;-1:-1:-1;8942:21:0;8929:34;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;8929:34:0::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;9128:10;;8929:34;;-1:-1:-1;8929:34:0;9128:7;;9136:1;;9128:10;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;9122:66:::1;::::0;-1:-1:-1;;;9122:66:0;;-1:-1:-1;;;;;17768:15:3;;;9122:66:0::1;::::0;::::1;17750:34:3::0;9174:4:0::1;17800:18:3::0;;;17793:43;17852:18;;;17845:34;;;9122:30:0;;::::1;::::0;::::1;::::0;17685:18:3;;9122:66:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9202:18;9281:7;9289:1;9281:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;9275:26:0::1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9269:34;::::0;:2:::1;:34;:::i;:::-;9224:14;-1:-1:-1::0;;;;;9224:14:0;::::1;:6:::0;:14:::1;:::i;:::-;:25;::::0;9241:8:::1;9224:25;:::i;:::-;9223:80;;;;:::i;:::-;9202:101:::0;-1:-1:-1;9317:26:0::1;9202:101:::0;9317:26;::::1;:::i;:::-;;;9357:30;9363:11;9376:10;9357:5;:30::i;:::-;8915:483;;;;8910:3;;;;;:::i;:::-;;;;8874:524;;;-1:-1:-1::0;9407:14:0::1;:56:::0;;-1:-1:-1;;;;9407:56:0::1;-1:-1:-1::0;;;9447:15:0::1;9407:56;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;9490:53:::1;::::0;-1:-1:-1;;;9523:20:0;::::1;::::0;::::1;::::0;9490:30;;::::1;;:53;:::i;:::-;9473:70;;:14;:70:::0;9553:11:::1;:26:::0;;;9594:38:::1;::::0;9616:15:::1;548:25:3::0;;9594:38:0::1;::::0;536:2:3;521:18;9594:38:0::1;;;;;;;8675:964;;;8629:1010::o:0;7895:135::-;5088:5;;;;;-1:-1:-1;;;;;5088:5:0;5074:10;:19;5066:28;;;;;;7969:17:::1;::::0;::::1;;:26;7961:35;;;::::0;::::1;;8019:3;-1:-1:-1::0;;;;;8006:17:0::1;;19427:140:::0;19479:13;5293:14;;5275:15;:32;5271:269;;;5425:11;;5390:14;;5372:32;;:15;:32;:::i;:::-;5352:11;;:16;;2604:5;;5352:16;:::i;:::-;:53;;;;:::i;:::-;5351:85;;;;:::i;:::-;5323:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;5467:15:0;5450:14;:32;19504:13:::1;19520:18;19527:10;19520:6;:18::i;:::-;19504:34:::0;-1:-1:-1;5271:269:0;;-1:-1:-1;5271:269:0;;19504:13:::1;19520:18;19527:10;19520:6;:18::i;:::-;19504:34:::0;-1:-1:-1;;5528:1:0::1;19427:140:::0;:::o;4265:23::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4265:23:0;;-1:-1:-1;4265:23:0;:::o;6561:1167::-;6839:21;;;;;;;:30;6831:39;;;;;;6880:21;:28;;6918:18;6926:10;6918:18;-1:-1:-1;;;;;;6918:18:0;;;;6880:28;6918:18;;;6946:32;;:14;:32;;;;;;;;;;;;;;-1:-1:-1;;;6946:32:0;-1:-1:-1;;;;6988:34:0;;;6946:32;;;-1:-1:-1;;;6946:32:0;-1:-1:-1;;6946:32:0;;;;;;;;;;;;;;;;6988:34;;;;;;7054:14;;6880:28;7078:364;7102:11;7098:1;:15;7078:364;;;7142:9;:21;7152:7;7160:1;7152:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7142:21:0;;;;;;;;;;;-1:-1:-1;7142:21:0;:27;;;-1:-1:-1;;;;;7142:27:0;:32;7134:78;;;;-1:-1:-1;;;7134:78:0;;19867:2:3;7134:78:0;;;19849:21:3;19906:2;19886:18;;;19879:30;19945:34;19925:18;;;19918:62;-1:-1:-1;;;19996:18:3;;;19989:31;20037:19;;7134:78:0;19665:397:3;7134:78:0;7226:19;7251:20;7272:1;7251:23;;;;;;;;:::i;:::-;;;;;;;;;;;;7226:49;;;;;;;-1:-1:-1;7226:49:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7289:18;7310:45;;;;;;;;7320:8;7329:1;7320:11;;;;;;;;:::i;:::-;;;;;;;7310:45;;;;7333:7;7341:1;7333:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7310:45:0;;;;;7345:6;7352:1;7345:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7310:45:0;;;;7289:66;;7393:1;7369:9;:21;7379:7;7387:1;7379:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7369:21:0;;;;;;;;;;;;;;;;-1:-1:-1;7369:21:0;:25;;;;;;;;;;;;;-1:-1:-1;;7369:25:0;-1:-1:-1;;;;;7369:25:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7369:25:0;;;;;;;;;;;7420:10;;7408:6;;7420:10;;7428:1;;7420:10;;;;;;:::i;:::-;;;;;;;;;;;;7408:23;;;;;;;-1:-1:-1;7408:23:0;;;;;;;;;;-1:-1:-1;;;;;;7408:23:0;-1:-1:-1;;;;;7408:23:0;;;;;;;;;-1:-1:-1;7115:3:0;;;;:::i;:::-;;;;7078:364;;;-1:-1:-1;7464:6:0;:13;7451:10;:26;7651:14;:20;7492:229;;;;;;7533:20;;7567:7;;7588;;7609:6;;7629:8;;7651:20;-1:-1:-1;;;7651:20:0;;;;;7685:26;;;7492:229;:::i;:::-;;;;;;;;6821:907;6561:1167;;;;;;:::o;13892:541::-;13980:14;:30;13942:7;;-1:-1:-1;;;13980:30:0;;;;;14020:28;;14047:1;14040:8;;;13892:541;:::o;14020:28::-;14079:14;:26;;;14058:18;14135:35;14161:9;14142:15;14135:35;:::i;:::-;14199:14;:20;14115:55;;-1:-1:-1;14184:50:0;;;;;14185:34;;-1:-1:-1;;;14199:20:0;;;;14185:11;:34;:::i;:::-;14184:50;;;14180:83;;14243:20;2657:8;2604:5;14243:20;:::i;:::-;14236:27;;;;;13892:541;:::o;14180:83::-;14291:14;:20;;-1:-1:-1;;;14291:20:0;;;;;14277:34;;;;14273:48;;14320:1;14313:8;;;;;13892:541;:::o;14273:48::-;14377:14;:20;14406;;;;;2604:5;;14364:33;;-1:-1:-1;;;14377:20:0;;;14364:10;:33;:::i;:::-;14338:60;;14356:42;;2657:8;14338:60;:::i;:::-;:65;;;;:::i;:::-;:88;;;;:::i;1087:20:1:-;;;;;;;:::i;10367:573:0:-;10474:6;:13;10412;;10437:23;;10463:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10463:25:0;;10437:51;;10498:19;10527:17;10559:9;10554:354;10574:6;:13;10570:17;;10554:354;;;10622:9;:20;10632:6;10639:1;10632:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10632:9:0;;;10622:20;;;;;;;;;;;;;;;:25;;;10679:6;:9;;10622:25;;;;;-1:-1:-1;10686:1:0;;10679:9;;;;;;:::i;:::-;;;;;;;;;;;10673:54;;-1:-1:-1;;;10673:54:0;;-1:-1:-1;;;;;23255:15:3;;;10673:54:0;;;23237:34:3;10721:4:0;23287:18:3;;;23280:43;10679:9:0;;;;10673:26;;23172:18:3;;10673:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10661:66;;10758:9;:20;10768:6;10775:1;10768:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10768:9:0;10758:20;;;;;;;;;;;;:27;10745:40;;10741:157;;10820:4;10805:9;10815:1;10805:12;;;;;;;;:::i;:::-;:19;;;:12;;;;;;;;;;;:19;10741:157;;;10878:5;10863:9;10873:1;10863:12;;;;;;;;:::i;:::-;:20;;;:12;;;;;;;;;;;:20;10741:157;10589:3;;;;:::i;:::-;;;;10554:354;;;-1:-1:-1;10924:9:0;;10367:573;-1:-1:-1;;;10367:573:0:o;11091:363::-;11151:16;11179:13;11195:30;11217:7;11195:21;:30::i;:::-;11280:6;:13;11179:46;;-1:-1:-1;11235:28:0;;11266;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11266:28:0;;11235:59;;11309:9;11304:115;11328:6;:13;11324:17;;11304:115;;;11379:29;11399:5;11406:1;11379:19;:29::i;:::-;11362:11;11374:1;11362:14;;;;;;;;:::i;:::-;;;;;;;;;;:46;11343:3;;;;:::i;:::-;;;;11304:115;;;-1:-1:-1;11436:11:0;11091:363;-1:-1:-1;;;11091:363:0:o;15452:1276::-;5293:14;;5275:15;:32;5271:269;;;5425:11;;5390:14;;5372:32;;:15;:32;:::i;:::-;5352:11;;:16;;2604:5;;5352:16;:::i;:::-;:53;;;;:::i;:::-;5351:85;;;;:::i;:::-;5323:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;5467:15:0;5450:14;:32;15539:10:::1;15524:12;15604:15:::0;;;:9:::1;:15;::::0;;;;;15580:4:::1;::::0;15604:30;-1:-1:-1;15604:30:0::1;15596:66;;;::::0;-1:-1:-1;;;15596:66:0;;23725:2:3;15596:66:0::1;::::0;::::1;23707:21:3::0;23764:2;23744:18;;;23737:30;-1:-1:-1;;;23783:18:3;;;23776:53;23846:18;;15596:66:0::1;23523:347:3::0;15596:66:0::1;-1:-1:-1::0;;;;;15807:15:0;;::::1;;::::0;;;:9:::1;:15;::::0;;;;;:30;;;;::::1;::::0;;15851:13;;::::1;::::0;;;;;:28;;;::::1;::::0;;15977:11:::1;::::0;2657:8:::1;15927:16;2604:5;15826:11:::0;15927:16:::1;:::i;:::-;:34;;;;:::i;:::-;15926:62;;;;:::i;:::-;16028:8;::::0;15900:88;;-1:-1:-1;16076:15:0::1;15998:27;16143:19;:17;:19::i;:::-;16205:158;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;16382:10:::1;16172:30;16373:20:::0;;;:8:::1;:20:::0;;;;;;:37;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;16420:11:::1;:26:::0;;16101:61;;-1:-1:-1;16205:158:0;;16435:11;;16172:30;16420:26:::1;::::0;16435:11;;16420:26:::1;:::i;:::-;;;;;;;;16476:2;-1:-1:-1::0;;;;;16461:31:0::1;16470:4;-1:-1:-1::0;;;;;16461:31:0::1;-1:-1:-1::0;;;;;;;;;;;16480:11:0::1;16461:31;;;;548:25:3::0;;536:2;521:18;;402:177;16461:31:0::1;;;;;;;;16507:214;::::0;;16536:10:::1;17099:51:3::0;;17181:2;17166:18;;17159:34;;;17209:18;;;17202:34;;;17267:2;17252:18;;17245:34;;;17310:3;17295:19;;17288:35;;;17137:3;17339:19;;17332:35;;;16507:214:0::1;::::0;17086:3:3;17071:19;16507:214:0::1;;;;;;;15514:1214;;;;;;;17969:576:::0;:::o;5271:269::-;15539:10:::1;15524:12;15604:15:::0;;;:9:::1;:15;::::0;;;;;15580:4:::1;::::0;15604:30;-1:-1:-1;15604:30:0::1;15596:66;;;::::0;-1:-1:-1;;;15596:66:0;;23725:2:3;15596:66:0::1;::::0;::::1;23707:21:3::0;23764:2;23744:18;;;23737:30;-1:-1:-1;;;23783:18:3;;;23776:53;23846:18;;15596:66:0::1;23523:347:3::0;2915:401:1;3039:10;3009:4;3029:21;;;:9;:21;;;;;:31;;3054:6;;3029:21;3009:4;;3029:31;;3054:6;;3029:31;:::i;:::-;;;;-1:-1:-1;;;;;;;3206:13:1;;;;;;:9;:13;;;;;;;:23;;;;;;3255:32;3264:10;;-1:-1:-1;;;;;;;;;;;3255:32:1;;;3223:6;548:25:3;;536:2;521:18;;402:177;9985:202:0;-1:-1:-1;;;;;;;;10057:7:0;-1:-1:-1;;;;;;;;;;;;;;;10094:17:0;10114:6;10121:8;10114:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10114:16:0;;;10159:20;;;:9;:20;;;;;;;10140:40;;;;;;;;;;;10114:16;10140:40;;;-1:-1:-1;;;;;10140:40:0;;;;;;;;;;;;;;;;;;;;;10114:16;;10140:40;;-1:-1:-1;9985:202:0;-1:-1:-1;;;9985:202:0:o;4117:1279:1:-;4336:15;4324:8;:27;;4316:63;;;;-1:-1:-1;;;4316:63:1;;24077:2:3;4316:63:1;;;24059:21:3;24116:2;24096:18;;;24089:30;24155:25;24135:18;;;24128:53;24198:18;;4316:63:1;23875:347:3;4316:63:1;4544:14;4658:18;:16;:18::i;:::-;-1:-1:-1;;;;;4925:13:1;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4733:271;;1727:117;4733:271;;;24514:25:3;24593:18;;;24586:43;;;;24665:15;;;24645:18;;;24638:43;24697:18;;;24690:34;;;24740:19;;;24733:35;;;;24784:19;;;;24777:35;;;4733:271:1;;;;;;;;;;24486:19:3;;;4733:271:1;;;4698:328;;;;;;;;-1:-1:-1;;;4588:456:1;;;25081:27:3;25124:11;;;25117:27;;;;25160:12;;;25153:28;;;;25197:12;;4588:456:1;;;-1:-1:-1;;4588:456:1;;;;;;;;;4561:497;;4588:456;4561:497;;;;5073:24;5100:26;;;;;;;;;25447:25:3;;;25520:4;25508:17;;25488:18;;;25481:45;;;;25542:18;;;25535:34;;;25585:18;;;25578:34;;;4561:497:1;;-1:-1:-1;5073:24:1;5100:26;;25419:19:3;;5100:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5100:26:1;;-1:-1:-1;;5100:26:1;;;-1:-1:-1;;;;;;;5166:30:1;;;;;;:59;;;5220:5;-1:-1:-1;;;;;5200:25:1;:16;-1:-1:-1;;;;;5200:25:1;;5166:59;5141:132;;;;-1:-1:-1;;;5141:132:1;;25825:2:3;5141:132:1;;;25807:21:3;25864:2;25844:18;;;25837:30;-1:-1:-1;;;25883:18:3;;;25876:44;25937:18;;5141:132:1;25623:338:3;5141:132:1;-1:-1:-1;;;;;5288:27:1;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5358:31;548:25:3;;;5288:36:1;;-1:-1:-1;5358:31:1;;;;;;521:18:3;5358:31:1;;;;;;;4117:1279;;;;;;;:::o;8143:130:0:-;5088:5;;;;;-1:-1:-1;;;;;5088:5:0;5074:10;:19;5066:28;;;;;;8212:5:::1;:17:::0;;-1:-1:-1;;;;;;8212:17:0::1;::::0;-1:-1:-1;;;;;8212:17:0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;8244:22:::1;::::0;3617:51:3;;;8244:22:0::1;::::0;3605:2:3;3590:18;8244:22:0::1;;;;;;;8143:130:::0;:::o;4192:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19634:1083::-;19685:13;19750;19766:30;19788:7;19766:21;:30::i;:::-;19750:46;;19806:24;19833:6;19806:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19806:33:0;;;;;;;;;;;;;;;;;;;;;;;19849:24;19890:7;:14;19876:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19876:29:0;-1:-1:-1;19849:56:0;-1:-1:-1;19919:9:0;;19915:796;;19983:8;;-1:-1:-1;;;;;19944:17:0;;;;;;:8;:17;;;;;:36;;:47;20056:19;:17;:19::i;:::-;-1:-1:-1;;;;;20005:17:0;;;;;;:8;:17;;;;;:48;;;:70;;;;20128:15;20089:36;;;:54;20157:41;;20193:5;;20005:17;;20157:41;;20193:5;;20157:41;:::i;:::-;;;;-1:-1:-1;;20243:11:0;;20212:19;;2657:8;;20235:19;;:5;:19;:::i;:::-;20234:39;;;;:::i;:::-;20212:61;-1:-1:-1;20287:18:0;20308:16;2604:5;20212:61;20308:16;:::i;:::-;20287:37;;20338:32;20352:4;20359:10;20338:5;:32::i;:::-;20389:9;20384:222;20408:7;:14;20404:1;:18;20384:222;;;20447:14;20464:29;20484:5;20491:1;20464:19;:29::i;:::-;20447:46;;20524:6;20511:7;20519:1;20511:10;;;;;;;;:::i;:::-;;;;;;:19;;;;;20554:7;20562:1;20554:10;;;;;;;;:::i;:::-;;;;;;;;;;;20548:43;;-1:-1:-1;;;20548:43:0;;-1:-1:-1;;;;;16443:32:3;;;20548:43:0;;;16425:51:3;16492:18;;;16485:34;;;20548:26:0;;;;;;16398:18:3;;20548:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20429:177;20424:3;;;;;:::i;:::-;;;;20384:222;;;;20624:50;20641:7;20650:5;20657:7;20666;20624:50;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;20695:5:0;;19634:1083;-1:-1:-1;;;;;19634:1083:0:o;19915:796::-;19700:1017;;;19634:1083;;;:::o;5629:492:1:-;5694:7;5791:141;5970:4;5954:22;;;;;;:::i;:::-;;;;;;;;;;5759:341;;;28103:25:3;;;;28144:18;;28137:34;;;;5998:14:1;28187:18:3;;;28180:34;6034:13:1;28230:18:3;;;28223:34;6077:4:1;28273:19:3;;;28266:61;28075:19;;5759:341:1;;;;;;;;;;;;5732:382;;;;;;5713:401;;5629:492;:::o;6315:325::-;6400:6;6385:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6552:13:1;;;;;;:9;:13;;;;;;;;:23;;;;;;6601:32;548:25:3;;;-1:-1:-1;;;;;;;;;;;6601:32:1;521:18:3;6601:32:1;;;;;;;;6315:325;;:::o;14708:288:0:-;14854:6;:13;14816:7;;14843:24;;14835:57;;;;-1:-1:-1;;;14835:57:0;;28540:2:3;14835:57:0;;;28522:21:3;28579:2;28559:18;;;28552:30;-1:-1:-1;;;28598:18:3;;;28591:50;28658:18;;14835:57:0;28338:344:3;14835:57:0;2604:5;14921:68;;2657:8;14959:6;14922:9;:27;14932:6;14939:8;14932:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14932:16:0;14922:27;;;;;;;;;;;;:34;:43;;;;:::i;:::-;14921:63;;;;:::i;:::-;:68;;;;:::i;:::-;14902:87;14708:288;-1:-1:-1;;;14708:288:0:o;6646:328:1:-;-1:-1:-1;;;;;6718:15:1;;;;;;:9;:15;;;;;:25;;6737:6;;6718:15;:25;;6737:6;;6718:25;:::i;:::-;;;;-1:-1:-1;;6886:11:1;:21;;;;;;;6933:34;;548:25:3;;;-1:-1:-1;;;;;;;6933:34:1;;;-1:-1:-1;;;;;;;;;;;6933:34:1;536:2:3;521:18;6933:34:1;402:177:3;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:3;-1:-1:-1;;;;;89:31:3;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;584:472::-;626:3;664:5;658:12;691:6;686:3;679:19;716:1;726:162;740:6;737:1;734:13;726:162;;;802:4;858:13;;;854:22;;848:29;830:11;;;826:20;;819:59;755:12;726:162;;;906:6;903:1;900:13;897:87;;;972:1;965:4;956:6;951:3;947:16;943:27;936:38;897:87;-1:-1:-1;1038:2:3;1017:15;-1:-1:-1;;1013:29:3;1004:39;;;;1045:4;1000:50;;584:472;-1:-1:-1;;584:472:3:o;1061:220::-;1210:2;1199:9;1192:21;1173:4;1230:45;1271:2;1260:9;1256:18;1248:6;1230:45;:::i;1286:315::-;1354:6;1362;1415:2;1403:9;1394:7;1390:23;1386:32;1383:52;;;1431:1;1428;1421:12;1383:52;1470:9;1457:23;1489:31;1514:5;1489:31;:::i;:::-;1539:5;1591:2;1576:18;;;;1563:32;;-1:-1:-1;;;1286:315:3:o;2194:180::-;2253:6;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;-1:-1:-1;2345:23:3;;2194:180;-1:-1:-1;2194:180:3:o;2379:456::-;2456:6;2464;2472;2525:2;2513:9;2504:7;2500:23;2496:32;2493:52;;;2541:1;2538;2531:12;2493:52;2580:9;2567:23;2599:31;2624:5;2599:31;:::i;:::-;2649:5;-1:-1:-1;2706:2:3;2691:18;;2678:32;2719:33;2678:32;2719:33;:::i;:::-;2379:456;;2771:7;;-1:-1:-1;;;2825:2:3;2810:18;;;;2797:32;;2379:456::o;3679:127::-;3740:10;3735:3;3731:20;3728:1;3721:31;3771:4;3768:1;3761:15;3795:4;3792:1;3785:15;3811:275;3882:2;3876:9;3947:2;3928:13;;-1:-1:-1;;3924:27:3;3912:40;;3982:18;3967:34;;4003:22;;;3964:62;3961:88;;;4029:18;;:::i;:::-;4065:2;4058:22;3811:275;;-1:-1:-1;3811:275:3:o;4091:182::-;4150:4;4183:18;4175:6;4172:30;4169:56;;;4205:18;;:::i;:::-;-1:-1:-1;4250:1:3;4246:14;4262:4;4242:25;;4091:182::o;4278:1539::-;4331:5;4361:4;4405:3;4400:2;4392:6;4388:15;4384:25;4374:53;;4423:1;4420;4413:12;4374:53;4459:6;4446:20;4485:4;4509:59;4525:42;4564:2;4525:42;:::i;:::-;4509:59;:::i;:::-;4602:15;;;4688:1;4684:10;;;;4672:23;;4668:32;;;4633:12;;;;4712:15;;;4709:35;;;4740:1;4737;4730:12;4709:35;4776:2;4768:6;4764:15;4788:1000;4804:6;4799:3;4796:15;4788:1000;;;4890:3;4877:17;4917:18;4967:2;4954:11;4951:19;4948:109;;;5011:1;5040:2;5036;5029:14;4948:109;5092:11;5084:6;5080:24;5070:34;;5144:3;5139:2;5135;5131:11;5127:21;5117:119;;5190:1;5219:2;5215;5208:14;5117:119;5280:2;5276;5272:11;5259:25;5307:2;5332;5328;5325:10;5322:36;;;5338:18;;:::i;:::-;5386:51;5410:11;;;-1:-1:-1;;5406:25:3;5402:34;;5386:51;:::i;:::-;5371:66;;5466:2;5457:7;5450:19;5510:3;5505:2;5500;5496;5492:11;5488:20;5485:29;5482:122;;;5556:1;5586:3;5581;5574:16;5482:122;5661:2;5656;5652;5648:11;5643:2;5634:7;5630:16;5617:47;-1:-1:-1;5711:1:3;5688:16;;;5684:25;;5677:36;5726:20;;-1:-1:-1;5766:12:3;;;;4821;;4788:1000;;;-1:-1:-1;5806:5:3;4278:1539;-1:-1:-1;;;;;;;4278:1539:3:o;5822:163::-;5889:20;;5949:10;5938:22;;5928:33;;5918:61;;5975:1;5972;5965:12;5918:61;5822:163;;;:::o;5990:556::-;6047:5;6095:4;6083:9;6078:3;6074:19;6070:30;6067:50;;;6113:1;6110;6103:12;6067:50;6146:2;6140:9;6188:4;6180:6;6176:17;6259:6;6247:10;6244:22;6223:18;6211:10;6208:34;6205:62;6202:88;;;6270:18;;:::i;:::-;6306:2;6299:22;6339:6;-1:-1:-1;6339:6:3;6369:28;6387:9;6369:28;:::i;:::-;6361:6;6354:44;6431:37;6464:2;6453:9;6449:18;6431:37;:::i;:::-;6426:2;6418:6;6414:15;6407:62;6502:37;6535:2;6524:9;6520:18;6502:37;:::i;:::-;6497:2;6489:6;6485:15;6478:62;;5990:556;;;;:::o;6551:736::-;6605:5;6658:3;6651:4;6643:6;6639:17;6635:27;6625:55;;6676:1;6673;6666:12;6625:55;6712:6;6699:20;6738:4;6762:59;6778:42;6817:2;6778:42;:::i;6762:59::-;6855:15;;;6941:1;6937:10;;;;6925:23;;6921:32;;;6886:12;;;;6965:15;;;6962:35;;;6993:1;6990;6983:12;6962:35;7029:2;7021:6;7017:15;7041:217;7057:6;7052:3;7049:15;7041:217;;;7137:3;7124:17;7154:31;7179:5;7154:31;:::i;:::-;7198:18;;7236:12;;;;7074;;7041:217;;;-1:-1:-1;7276:5:3;6551:736;-1:-1:-1;;;;;;6551:736:3:o;7292:860::-;7346:5;7399:3;7392:4;7384:6;7380:17;7376:27;7366:55;;7417:1;7414;7407:12;7366:55;7453:6;7440:20;7479:4;7503:59;7519:42;7558:2;7519:42;:::i;7503:59::-;7596:15;;;7682:1;7678:10;;;;7666:23;;7662:32;;;7627:12;;;;7706:15;;;7703:35;;;7734:1;7731;7724:12;7703:35;7770:2;7762:6;7758:15;7782:341;7798:6;7793:3;7790:15;7782:341;;;7878:3;7865:17;-1:-1:-1;;;;;7919:5:3;7915:46;7908:5;7905:57;7895:155;;8004:1;8033:2;8029;8022:14;7895:155;8063:18;;8101:12;;;;7815;;7782:341;;8157:661;8211:5;8264:3;8257:4;8249:6;8245:17;8241:27;8231:55;;8282:1;8279;8272:12;8231:55;8318:6;8305:20;8344:4;8368:59;8384:42;8423:2;8384:42;:::i;8368:59::-;8461:15;;;8547:1;8543:10;;;;8531:23;;8527:32;;;8492:12;;;;8571:15;;;8568:35;;;8599:1;8596;8589:12;8568:35;8635:2;8627:6;8623:15;8647:142;8663:6;8658:3;8655:15;8647:142;;;8729:17;;8717:30;;8767:12;;;;8680;;8647:142;;8823:1406;9088:6;9096;9104;9112;9120;9128;9181:3;9169:9;9160:7;9156:23;9152:33;9149:53;;;9198:1;9195;9188:12;9149:53;9238:9;9225:23;9267:18;9308:2;9300:6;9297:14;9294:34;;;9324:1;9321;9314:12;9294:34;9347:60;9399:7;9390:6;9379:9;9375:22;9347:60;:::i;:::-;9337:70;;9426:57;9475:7;9470:2;9459:9;9455:18;9426:57;:::i;:::-;9416:67;;9536:3;9525:9;9521:19;9508:33;9492:49;;9566:2;9556:8;9553:16;9550:36;;;9582:1;9579;9572:12;9550:36;9605:63;9660:7;9649:8;9638:9;9634:24;9605:63;:::i;:::-;9595:73;;9721:3;9710:9;9706:19;9693:33;9677:49;;9751:2;9741:8;9738:16;9735:36;;;9767:1;9764;9757:12;9735:36;9790:63;9845:7;9834:8;9823:9;9819:24;9790:63;:::i;:::-;9780:73;;9906:3;9895:9;9891:19;9878:33;9862:49;;9936:2;9926:8;9923:16;9920:36;;;9952:1;9949;9942:12;9920:36;9975:63;10030:7;10019:8;10008:9;10004:24;9975:63;:::i;:::-;9965:73;;10091:3;10080:9;10076:19;10063:33;10047:49;;10121:2;10111:8;10108:16;10105:36;;;10137:1;10134;10127:12;10105:36;;10160:63;10215:7;10204:8;10193:9;10189:24;10160:63;:::i;:::-;10150:73;;;8823:1406;;;;;;;;:::o;10530:642::-;10695:2;10747:21;;;10817:13;;10720:18;;;10839:22;;;10666:4;;10695:2;10918:15;;;;10892:2;10877:18;;;10666:4;10961:185;10975:6;10972:1;10969:13;10961:185;;;11050:13;;11043:21;11036:29;11024:42;;11121:15;;;;11086:12;;;;10997:1;10990:9;10961:185;;;-1:-1:-1;11163:3:3;;10530:642;-1:-1:-1;;;;;;10530:642:3:o;11177:435::-;11230:3;11268:5;11262:12;11295:6;11290:3;11283:19;11321:4;11350:2;11345:3;11341:12;11334:19;;11387:2;11380:5;11376:14;11408:1;11418:169;11432:6;11429:1;11426:13;11418:169;;;11493:13;;11481:26;;11527:12;;;;11562:15;;;;11454:1;11447:9;11418:169;;;-1:-1:-1;11603:3:3;;11177:435;-1:-1:-1;;;;;11177:435:3:o;11617:261::-;11796:2;11785:9;11778:21;11759:4;11816:56;11868:2;11857:9;11853:18;11845:6;11816:56;:::i;12409:114::-;12493:4;12486:5;12482:16;12475:5;12472:27;12462:55;;12513:1;12510;12503:12;12528:801;12639:6;12647;12655;12663;12671;12679;12687;12740:3;12728:9;12719:7;12715:23;12711:33;12708:53;;;12757:1;12754;12747:12;12708:53;12796:9;12783:23;12815:31;12840:5;12815:31;:::i;:::-;12865:5;-1:-1:-1;12922:2:3;12907:18;;12894:32;12935:33;12894:32;12935:33;:::i;:::-;12987:7;-1:-1:-1;13041:2:3;13026:18;;13013:32;;-1:-1:-1;13092:2:3;13077:18;;13064:32;;-1:-1:-1;13148:3:3;13133:19;;13120:33;13162:31;13120:33;13162:31;:::i;:::-;12528:801;;;;-1:-1:-1;12528:801:3;;;;13212:7;13266:3;13251:19;;13238:33;;-1:-1:-1;13318:3:3;13303:19;;;13290:33;;12528:801;-1:-1:-1;;12528:801:3:o;13334:388::-;13402:6;13410;13463:2;13451:9;13442:7;13438:23;13434:32;13431:52;;;13479:1;13476;13469:12;13431:52;13518:9;13505:23;13537:31;13562:5;13537:31;:::i;:::-;13587:5;-1:-1:-1;13644:2:3;13629:18;;13616:32;13657:33;13616:32;13657:33;:::i;:::-;13709:7;13699:17;;;13334:388;;;;;:::o;14492:127::-;14553:10;14548:3;14544:20;14541:1;14534:31;14584:4;14581:1;14574:15;14608:4;14605:1;14598:15;14624:228;14663:3;14691:10;14728:2;14725:1;14721:10;14758:2;14755:1;14751:10;14789:3;14785:2;14781:12;14776:3;14773:21;14770:47;;;14797:18;;:::i;:::-;14833:13;;14624:228;-1:-1:-1;;;;14624:228:3:o;14857:125::-;14897:4;14925:1;14922;14919:8;14916:34;;;14930:18;;:::i;:::-;-1:-1:-1;14967:9:3;;14857:125::o;14987:168::-;15027:7;15093:1;15089;15085:6;15081:14;15078:1;15075:21;15070:1;15063:9;15056:17;15052:45;15049:71;;;15100:18;;:::i;:::-;-1:-1:-1;15140:9:3;;14987:168::o;15160:217::-;15200:1;15226;15216:132;;15270:10;15265:3;15261:20;15258:1;15251:31;15305:4;15302:1;15295:15;15333:4;15330:1;15323:15;15216:132;-1:-1:-1;15362:9:3;;15160:217::o;15382:128::-;15422:3;15453:1;15449:6;15446:1;15443:13;15440:39;;;15459:18;;:::i;:::-;-1:-1:-1;15495:9:3;;15382:128::o;15515:380::-;15594:1;15590:12;;;;15637;;;15658:61;;15712:4;15704:6;15700:17;15690:27;;15658:61;15765:2;15757:6;15754:14;15734:18;15731:38;15728:161;;;15811:10;15806:3;15802:20;15799:1;15792:31;15846:4;15843:1;15836:15;15874:4;15871:1;15864:15;15728:161;;15515:380;;;:::o;16530:277::-;16597:6;16650:2;16638:9;16629:7;16625:23;16621:32;16618:52;;;16666:1;16663;16656:12;16618:52;16698:9;16692:16;16751:5;16744:13;16737:21;16730:5;16727:32;16717:60;;16773:1;16770;16763:12;17378:127;17439:10;17434:3;17430:20;17427:1;17420:31;17470:4;17467:1;17460:15;17494:4;17491:1;17484:15;17890:247;17958:6;18011:2;17999:9;17990:7;17986:23;17982:32;17979:52;;;18027:1;18024;18017:12;17979:52;18059:9;18053:16;18078:29;18101:5;18078:29;:::i;18142:422::-;18231:1;18274:5;18231:1;18288:270;18309:7;18299:8;18296:21;18288:270;;;18368:4;18364:1;18360:6;18356:17;18350:4;18347:27;18344:53;;;18377:18;;:::i;:::-;18427:7;18417:8;18413:22;18410:55;;;18447:16;;;;18410:55;18526:22;;;;18486:15;;;;18288:270;;;18292:3;18142:422;;;;;:::o;18569:806::-;18618:5;18648:8;18638:80;;-1:-1:-1;18689:1:3;18703:5;;18638:80;18737:4;18727:76;;-1:-1:-1;18774:1:3;18788:5;;18727:76;18819:4;18837:1;18832:59;;;;18905:1;18900:130;;;;18812:218;;18832:59;18862:1;18853:10;;18876:5;;;18900:130;18937:3;18927:8;18924:17;18921:43;;;18944:18;;:::i;:::-;-1:-1:-1;;19000:1:3;18986:16;;19015:5;;18812:218;;19114:2;19104:8;19101:16;19095:3;19089:4;19086:13;19082:36;19076:2;19066:8;19063:16;19058:2;19052:4;19049:12;19045:35;19042:77;19039:159;;;-1:-1:-1;19151:19:3;;;19183:5;;19039:159;19230:34;19255:8;19249:4;19230:34;:::i;:::-;19300:6;19296:1;19292:6;19288:19;19279:7;19276:32;19273:58;;;19311:18;;:::i;:::-;19349:20;;18569:806;-1:-1:-1;;;18569:806:3:o;19380:140::-;19438:5;19467:47;19508:4;19498:8;19494:19;19488:4;19467:47;:::i;19525:135::-;19564:3;-1:-1:-1;;19585:17:3;;19582:43;;;19605:18;;:::i;:::-;-1:-1:-1;19652:1:3;19641:13;;19525:135::o;20067:461::-;20120:3;20158:5;20152:12;20185:6;20180:3;20173:19;20211:4;20240:2;20235:3;20231:12;20224:19;;20277:2;20270:5;20266:14;20298:1;20308:195;20322:6;20319:1;20316:13;20308:195;;;20387:13;;-1:-1:-1;;;;;20383:39:3;20371:52;;20443:12;;;;20478:15;;;;20419:1;20337:9;20308:195;;20533:476;20586:3;20624:5;20618:12;20651:6;20646:3;20639:19;20677:4;20706:2;20701:3;20697:12;20690:19;;20743:2;20736:5;20732:14;20764:1;20774:210;20788:6;20785:1;20782:13;20774:210;;;20853:13;;-1:-1:-1;;;;;20849:54:3;20837:67;;20924:12;;;;20959:15;;;;20810:1;20803:9;20774:210;;21014:1780;21588:3;21601:22;;;21672:13;;21573:19;;;21694:22;;;-1:-1:-1;;21735:3:3;21818:1;21814:14;;;21799:30;;21795:39;;;21754:18;;;;21853:4;21880:15;;;-1:-1:-1;21923:256:3;21937:6;21934:1;21931:13;21923:256;;;22030:3;22026:8;22014:9;22006:6;22002:22;21998:37;21993:3;21986:50;22059:40;22092:6;22083;22077:13;22059:40;:::i;:::-;22049:50;-1:-1:-1;22157:12:3;;;;22122:15;;;;21959:1;21952:9;21923:256;;;21927:3;;22227:9;22219:6;22215:22;22210:2;22199:9;22195:18;22188:50;;;;22261:44;22298:6;22290;22261:44;:::i;:::-;22247:58;;22353:9;22345:6;22341:22;22336:2;22325:9;22321:18;22314:50;22387:44;22424:6;22416;22387:44;:::i;:::-;22373:58;;22479:9;22471:6;22467:22;22462:2;22451:9;22447:18;22440:50;22513:44;22550:6;22542;22513:44;:::i;:::-;22499:58;;22606:9;22598:6;22594:22;22588:3;22577:9;22573:19;22566:51;22634:44;22671:6;22663;22634:44;:::i;:::-;22626:52;;;22687:46;22728:3;22717:9;22713:19;22705:6;10310:10;10299:22;10287:35;;10234:94;22687:46;10310:10;10299:22;;22783:3;22768:19;;10287:35;22742:46;10234:94;22799:221;22838:4;22867:10;22927;;;;22897;;22949:12;;;22946:38;;;22964:18;;:::i;:::-;23001:13;;22799:221;-1:-1:-1;;;22799:221:3:o;23334:184::-;23404:6;23457:2;23445:9;23436:7;23432:23;23428:32;23425:52;;;23473:1;23470;23463:12;23425:52;-1:-1:-1;23496:16:3;;23334:184;-1:-1:-1;23334:184:3:o;25966:635::-;26308:1;26304;26299:3;26295:11;26291:19;26283:6;26279:32;26268:9;26261:51;26348:6;26343:2;26332:9;26328:18;26321:34;26391:3;26386:2;26375:9;26371:18;26364:31;26242:4;26418:57;26470:3;26459:9;26455:19;26447:6;26418:57;:::i;:::-;26523:9;26515:6;26511:22;26506:2;26495:9;26491:18;26484:50;26551:44;26588:6;26580;26551:44;:::i;:::-;26543:52;25966:635;-1:-1:-1;;;;;;;25966:635:3:o;26735:1104::-;26865:3;26894:1;26927:6;26921:13;26957:3;26979:1;27007:9;27003:2;26999:18;26989:28;;27067:2;27056:9;27052:18;27089;27079:61;;27133:4;27125:6;27121:17;27111:27;;27079:61;27159:2;27207;27199:6;27196:14;27176:18;27173:38;27170:165;;;-1:-1:-1;;;27234:33:3;;27290:4;27287:1;27280:15;27320:4;27241:3;27308:17;27170:165;27351:18;27378:104;;;;27496:1;27491:323;;;;27344:470;;27378:104;-1:-1:-1;;27411:24:3;;27399:37;;27456:16;;;;-1:-1:-1;27378:104:3;;27491:323;26682:1;26675:14;;;26719:4;26706:18;;27589:1;27603:165;27617:6;27614:1;27611:13;27603:165;;;27695:14;;27682:11;;;27675:35;27738:16;;;;27632:10;;27603:165;;;27607:3;;27797:6;27792:3;27788:16;27781:23;;27344:470;-1:-1:-1;27830:3:3;;26735:1104;-1:-1:-1;;;;;;;;26735:1104:3:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "calculateShareToClaim(address)": {
        "details": "releaseFactor plays a role in slowly releasing the vested amounts",
        "notice": "calculate the shares (in BPs) to claim for a particular user     updated = true means updateCheckpoint is run aldy, used in state transition function     updated = false means updateCheckpoint is not run, used in view function",
        "params": {
          "_staker": "address of the staker"
        },
        "returns": {
          "_0": "percentage of shares (in BPs)"
        }
      },
      "cancel(address)": {
        "notice": "admin function to cancel a collective, only before startCollective()",
        "params": {
          "_to": "address to send back the eth during contract deployment"
        }
      },
      "claim()": {
        "notice": "claim would convert the ERC20 representation tokens into the underlying tokens based on the claimable quota."
      },
      "getClaimable(address)": {
        "notice": "function to read a staker's claimable",
        "params": {
          "_staker": "address of staker"
        },
        "returns": {
          "_0": "the amounts of underlying tokens"
        }
      },
      "getVestingPercent()": {
        "notice": "helper function to calculate the percentage (in BPs) of share vested in the vesting schedule",
        "returns": {
          "_0": "percentage of shares (in BPs) * VEST_MULTIPLIER"
        }
      },
      "initialize(string[],(uint32,uint32,uint32),address[],uint128[],address[],uint256[])": {
        "notice": "admin function to initialize a collective  this version assumes 1 tokens are sent in by 1 address",
        "params": {
          "_collectiveInfo": "defines vestingPeriod and cliff, startTime would be override in startCollective()",
          "_namesOfParticipants": "name of participants",
          "_prices": "price of each tokens, would be used for calculating shares with _targets",
          "_targets": "tokens amounts  TODO: change name and symbol of token => name of collective",
          "_tokens": "name of participants",
          "_users": "address of users to pull funds during startCollective()"
        }
      },
      "pokeApproval()": {
        "notice": "only when all tokens involved return true can the admin start the collective ",
        "returns": {
          "_0": "return if tokens approval is completed for each tokens involved"
        }
      },
      "readToken(uint256)": {
        "notice": "function to read a defined tokens' address and specification in the collective",
        "params": {
          "_tokenId": "position of the token during initialize()"
        }
      },
      "stake(uint256)": {
        "notice": "staking ERC20 representation tokens would slowly convert your representation tokens to the underlying tokens     if the vesting schedule has already started. ",
        "params": {
          "_assetValue": "the amount of ERC20 representation tokens to stake"
        }
      },
      "startCollective()": {
        "notice": "admin function to start the collective     during starting the contract would pull the predefined quantities of tokens      from the users defined in initialize()     any user defined in the initialize() that has not done approve in advance for their tokens     would lead to failure of this function"
      },
      "unstake(uint256)": {
        "details": "the unstake amount should be the remainder of claimable since the function would call claim first.",
        "notice": "unstake and withdraw the ERC20 representation tokens that are previously staked     if any of them is not converted to underlying tokens.",
        "params": {
          "_assetValueLeft": "the amount of ERC20 representation tokens to unstake"
        }
      },
      "unstakeAll()": {
        "notice": "unstake and withdraw ALL the ERC20 representation tokens that are previously staked     if any of them is not converted to underlying tokens."
      },
      "unstakeWithoutClaim(uint256)": {
        "details": "the unstake amount can be as big as the previously staked amount",
        "notice": "unstake and withdraw the ERC20 representation tokens that are previously staked     without claiming, essentially forsaking the claimable",
        "params": {
          "_assetValueLeft": "the amount of ERC20 representation tokens to unstake"
        }
      },
      "updateAdmin(address)": {
        "notice": "admin function to transfer admin ownership",
        "params": {
          "_newAdmin": "address of new admin"
        }
      }
    },
    "notice": "Create a uniform vesting schedule for multiple underlying tokens, which can be redeemed gradually through staking the ERC20 representation LP token.     ###############################################     BuidlCollective Specification     The BuidlCollective provides a way for co-vesting to be implemented on the block chain,         allowing multiple parties who seek to co-vest their tokens to initialize a collective,         providing approval for their corresponding liquid tokens, and start the vesting sychronously.          After the covesting is started, underlying tokens would be released according to the schedule and          be allocated to the staked ERC20 representation LP proportionally. Each LP tokens are guarantteed the          same amount of underlying tokens.      LP tokens can be freely transferred but would need to undergo staking in order to convert to the underlying tokens.     If 100% of representation LP tokens are staked, then the staked LP tokens are converted to underlying tokens     just like the vesting schedule     If 50% of representation LP tokens are staked, then the staked LP tokens are converted to underlying tokens     with half of the vesting time needed.      There is a 3-day releaseFactor that adjusts the rate staking position can claim their underlying tokens.     If a staked position can convert LP to 1% of the underlying tokens by staking 5 days. Since 5 days is more      than the releaseFactor (3-day), 1% full amount is converted.      If a staked position can convert LP to 1% of the underlying tokens by staking 1.5 days. Since 1.5 days is less     than the releaseFactor (3-day), pro-rated amount is converted, in this case, 1.5/3 * 1% = 0.5% is converted.     ###############################################",
    "title": "BuidlCollective",
    "version": 1
  },
  "offset": [
    2333,
    20720
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xE0C9802F EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xE2F273BD EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xF5DAB711 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x68B JUMPI DUP1 PUSH4 0xFED45587 EQ PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xA9320688 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xD32E81A5 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xD77A1D3A EQ PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x9CFDBD5E EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xA4C8B46B EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xA583024B EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x7A55FF21 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x7D9FCE4D EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4C33FE94 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x4C33FE94 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x5DA69CB6 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x6B954292 EQ PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x35322F37 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x36E9B344 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x4AE99D30 EQ PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1959A002 GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x1AE69FB8 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C0C3E5 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x26D7 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST PUSH2 0x26B PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x275 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x2703 JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x271C JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x2703 JUMP JUMPDEST PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x26B PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x3A6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST PUSH2 0x330 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x26B PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x26B PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x131C JUMP JUMPDEST PUSH2 0x407 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x2703 JUMP JUMPDEST PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST PUSH2 0x26B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x26B PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x480 CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x1802 JUMP JUMPDEST PUSH2 0x4AC PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH2 0x4E9 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x2BD8 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x2703 JUMP JUMPDEST PUSH2 0x1A9C JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x517 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D7 JUMP JUMPDEST PUSH2 0x1D1B JUMP JUMPDEST PUSH2 0x52F PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x2703 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE DUP3 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 DUP4 ADD MSTORE SWAP2 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x275 JUMP JUMPDEST PUSH2 0x26B PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BFA JUMP JUMPDEST PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x26B PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x5E4 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0x275 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x65F PUSH2 0x62C CALLDATASIZE PUSH1 0x4 PUSH2 0x265A JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x275 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x407 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x6B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2703 JUMP JUMPDEST PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x6E1 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x704 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV AND PUSH2 0x2CBA JUMP JUMPDEST PUSH4 0xFFFFFFFF AND TIMESTAMP GT PUSH2 0x718 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x73C PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x76F SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV AND PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND GT PUSH2 0x7C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x7BF SWAP1 TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV DUP2 AND SWAP2 PUSH2 0x7E9 SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x81C SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV AND PUSH2 0x2CBA JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0xF SLOAD LT PUSH2 0x896 JUMPI PUSH1 0xB SLOAD PUSH1 0xF SLOAD PUSH2 0x83A SWAP1 TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x84A SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x10 SLOAD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x8BC SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV AND PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x8CC SWAP1 PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x8F0 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x10 SLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x931 DUP4 DUP4 PUSH2 0x2D18 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x944 JUMPI POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x96C SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x976 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2710 PUSH2 0x990 DUP5 DUP10 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST SWAP1 POP PUSH1 0xD SLOAD DUP6 LT PUSH2 0x9BA JUMPI SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x9C7 DUP7 DUP4 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x9D1 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x9EA SWAP1 PUSH2 0x2D52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA16 SWAP1 PUSH2 0x2D52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA63 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA63 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xAC6 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xAF3 PUSH2 0x2710 DUP6 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x554E5354414B4520414D4F554E5420544F4F20424947 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB86 SWAP1 DUP5 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST POP PUSH32 0x2504FCBA4204CC42C3DA7919528D55AB40C2BE512FE40EDC8153EDC4C5BF2F44 CALLER DUP4 DUP4 PUSH1 0x10 SLOAD TIMESTAMP PUSH2 0xC24 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xCBE JUMPI PUSH2 0xC99 DUP4 DUP3 PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xCE6 SWAP1 DUP5 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x314F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xD2F SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0xDBF JUMPI PUSH1 0xB SLOAD PUSH1 0xF SLOAD PUSH2 0xD5C SWAP1 TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0xD6C SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE PUSH2 0xDA3 CALLER PUSH2 0x2109 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xAF3 PUSH2 0x2710 DUP6 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xDA3 CALLER PUSH2 0x2109 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0xF34 JUMPI PUSH1 0xB SLOAD PUSH1 0xF SLOAD PUSH2 0xDE5 SWAP1 TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0xDF5 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE39 JUMPI JUMP JUMPDEST PUSH2 0xE42 CALLER PUSH2 0x2109 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xB SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2710 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xE71 SWAP1 DUP6 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH2 0xE85 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH32 0x2504FCBA4204CC42C3DA7919528D55AB40C2BE512FE40EDC8153EDC4C5BF2F44 SWAP2 SWAP1 DUP4 SWAP1 DUP6 SWAP1 TIMESTAMP PUSH2 0xC24 PUSH2 0x1712 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE39 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xF80 JUMPI PUSH2 0xF7B PUSH2 0x2397 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1036 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1018 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x1060 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x125F JUMPI PUSH1 0xA PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1083 JUMPI PUSH2 0x1083 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP5 AND SWAP3 DUP5 ADD DUP4 SWAP1 MSTORE DUP8 MLOAD SWAP4 SWAP7 POP SWAP3 DUP8 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x10F3 JUMPI PUSH2 0x10F3 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1154 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1178 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST POP PUSH1 0x0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x2DC5 JUMP JUMPDEST PUSH2 0x1201 SWAP1 PUSH1 0xA PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0x1214 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND DUP7 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1226 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST SWAP1 POP PUSH2 0x123C DUP2 DUP8 PUSH2 0x2D3A JUMP JUMPDEST SWAP6 POP PUSH2 0x1248 DUP4 DUP3 PUSH2 0x2431 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1257 SWAP1 PUSH2 0x2ED5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1064 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH2 0x129D SWAP3 PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV DUP4 AND SWAP3 SWAP2 SWAP1 DIV AND PUSH2 0x2CBA JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0xF SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x83AAEE11563F280EAC61EBD060F088CE7577D5E823EFA6C78DE1CFEC8167605D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0x138A JUMPI PUSH1 0xB SLOAD PUSH1 0xF SLOAD PUSH2 0x1338 SWAP1 TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1348 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1352 SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x136D SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE PUSH1 0x0 PUSH2 0x1381 CALLER PUSH2 0x2109 JUMP JUMPDEST SWAP2 POP PUSH2 0x1399 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1395 CALLER PUSH2 0x2109 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH3 0x10000 CALLER MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH2 0x100 OR SWAP1 SSTORE DUP5 MLOAD PUSH1 0xC DUP1 SLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 DUP10 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 DUP2 AND SWAP3 DUP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP6 AND OR SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16AD JUMPI PUSH1 0xA PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x146F JUMPI PUSH2 0x146F PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4B454E204144445245535320414C524541445920494E495449414C495A45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x7 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x150A JUMPI PUSH2 0x150A PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x153C SWAP5 SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x25AC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x155C JUMPI PUSH2 0x155C PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x157B JUMPI PUSH2 0x157B PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x15A3 JUMPI PUSH2 0x15A3 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x15D0 JUMPI PUSH2 0x15D0 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 MLOAD PUSH1 0x9 SWAP1 DUP9 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x165F JUMPI PUSH2 0x165F PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP DUP1 PUSH2 0x16A5 DUP2 PUSH2 0x2ED5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1451 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SSTORE PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH32 0x489170CFE0F7FCDD8410D20D8A81DF8F038624BBCD9814CCA42D477E9D1BB469 SWAP2 PUSH2 0x1701 SWAP2 DUP11 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP10 SWAP2 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1732 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x0 PUSH2 0x1747 DUP4 TIMESTAMP PUSH2 0x3030 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF DUP1 DUP4 AND SWAP2 PUSH2 0x1769 SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND DUP5 PUSH2 0x2CBA JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT PUSH2 0x1790 JUMPI PUSH2 0x1788 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2710 PUSH2 0x2CF9 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT PUSH2 0x17B4 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0x17D6 SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV AND DUP5 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x17EE SWAP1 PUSH4 0xFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x17F8 SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x9EA SWAP1 PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x1830 PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1859 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x19EB JUMPI PUSH1 0xA PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1883 JUMPI PUSH2 0x1883 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x9 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP5 POP DUP3 SWAP1 DUP2 LT PUSH2 0x18CA JUMPI PUSH2 0x18CA PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1923 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1947 SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP PUSH1 0xA PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1960 JUMPI PUSH2 0x1960 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x19B4 JUMPI PUSH1 0x1 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x199F JUMPI PUSH2 0x199F PUSH2 0x2DAF JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19C8 JUMPI PUSH2 0x19C8 PUSH2 0x2DAF JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST DUP1 PUSH2 0x19E3 DUP2 PUSH2 0x2ED5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1862 JUMP JUMPDEST POP SWAP2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A01 DUP4 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A22 JUMPI PUSH2 0x1A22 PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A4B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1A94 JUMPI PUSH2 0x1A65 DUP4 DUP3 PUSH2 0x248B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A77 JUMPI PUSH2 0x1A77 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x1A8C DUP2 PUSH2 0x2ED5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A51 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0x1CC0 JUMPI PUSH1 0xB SLOAD PUSH1 0xF SLOAD PUSH2 0x1AB6 SWAP1 TIMESTAMP PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1AC6 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1AD0 SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1ADA SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AEB SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ADDRESS SWAP1 DUP4 GT ISZERO PUSH2 0x1B4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9 PUSH1 0x4B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0xB SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B96 PUSH2 0x2710 DUP8 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1BA0 SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x1BAA SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP TIMESTAMP PUSH1 0x0 PUSH2 0x1BBB PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 DUP2 MSTORE DUP3 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP7 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP5 MSTORE SWAP5 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP11 SWAP3 SWAP1 PUSH2 0x1C1E SWAP1 DUP5 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x314F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 PUSH1 0x40 MLOAD PUSH2 0x1C58 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x9DFA08ABAE6C607453D7EF936FD3D42C4AFC359DCFA226A49BE696604A246845 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ADDRESS SWAP1 DUP4 GT ISZERO PUSH2 0x1B4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9 PUSH1 0x4B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB5E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x1D3C SWAP1 DUP5 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x314F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xAC6 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1DB2 JUMPI PUSH2 0x1DB2 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x60 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x1E62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6C PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1FBB JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1FF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24A72B20A624A22FA9A4A3A722A9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP11 SWAP1 SSTORE MLOAD DUP10 DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x39E7D4B9BA48F55A740A5192809DBC498FA12724C030B37DAB126A3F6774C0F3 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x9EA SWAP1 PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2115 DUP4 PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x216F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2151 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2192 JUMPI PUSH2 0x2192 PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21BB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 ISZERO PUSH2 0x238F JUMPI PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE PUSH2 0x21EB PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x2222 SWAP1 DUP5 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2241 SWAP1 DUP7 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x224B SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x225B PUSH2 0x2710 DUP4 PUSH2 0x2D18 JUMP JUMPDEST SWAP1 POP PUSH2 0x2267 ADDRESS DUP3 PUSH2 0x254A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 PUSH2 0x227F DUP8 DUP4 PUSH2 0x248B JUMP JUMPDEST SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2294 JUMPI PUSH2 0x2294 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22B2 JUMPI PUSH2 0x22B2 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x230D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2331 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x233E SWAP1 PUSH2 0x2ED5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x226A JUMP JUMPDEST POP PUSH32 0xBBFAF902CEC9107D8131A7888C2B89C5E5820FF6319B992657E8EAA9A36FECED DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x237C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x306E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x23C9 SWAP2 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2443 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x314F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x24D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B92590813D5550813D1881093D55391 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x2710 PUSH4 0xFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0xA PUSH1 0x0 PUSH1 0x9 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x2500 JUMPI PUSH2 0x2500 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x252F SWAP2 SWAP1 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x2539 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH2 0x2543 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2572 SWAP1 DUP5 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x314F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x247F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x25B8 SWAP1 PUSH2 0x2D52 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x25DA JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2620 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x25F3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2620 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2620 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2620 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2605 JUMP JUMPDEST POP PUSH2 0x262C SWAP3 SWAP2 POP PUSH2 0x2630 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x262C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2543 DUP2 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x269D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2681 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x26AF JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2543 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x26F5 DUP2 PUSH2 0x2645 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x273C DUP2 PUSH2 0x2645 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x274C DUP2 PUSH2 0x2645 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x279C JUMPI PUSH2 0x279C PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x27BE JUMPI PUSH2 0x27BE PUSH2 0x275D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT PUSH2 0x27DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x20 PUSH2 0x27EF PUSH2 0x27EA DUP4 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x2773 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP6 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP8 DUP5 GT ISZERO PUSH2 0x280E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP8 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x28A5 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2833 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x3F DUP4 ADD SLT PUSH2 0x2848 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP6 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 DUP3 GT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285E PUSH2 0x275D JUMP JUMPDEST PUSH2 0x286F DUP3 DUP12 ADD PUSH1 0x1F NOT AND DUP10 ADD PUSH2 0x2773 JUMP JUMPDEST SWAP3 POP DUP2 DUP4 MSTORE DUP13 DUP2 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2886 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP2 DUP6 ADD DUP10 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 SWAP1 DUP3 ADD DUP8 ADD MSTORE DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2812 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x28C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x28FF JUMPI PUSH2 0x28FF PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x290E DUP4 PUSH2 0x28B1 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x291C PUSH1 0x20 DUP5 ADD PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x292D PUSH1 0x40 DUP5 ADD PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x294A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x295A PUSH2 0x27EA DUP4 PUSH2 0x27A4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x299D JUMPI DUP1 CALLDATALOAD PUSH2 0x2990 DUP2 PUSH2 0x2645 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x297D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x29C9 PUSH2 0x27EA DUP4 PUSH2 0x27A4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x29E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x299D JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A0C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2A3A PUSH2 0x27EA DUP4 PUSH2 0x27A4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2A59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x299D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2A5D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2A8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB2 DUP11 DUP4 DUP12 ADD PUSH2 0x27C8 JUMP JUMPDEST SWAP8 POP PUSH2 0x2AC1 DUP11 PUSH1 0x20 DUP12 ADD PUSH2 0x28CA JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AE3 DUP11 DUP4 DUP12 ADD PUSH2 0x2939 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B05 DUP11 DUP4 DUP12 ADD PUSH2 0x29A8 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B27 DUP11 DUP4 DUP12 ADD PUSH2 0x2939 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4A DUP10 DUP3 DUP11 ADD PUSH2 0x2A19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B91 JUMPI DUP4 MLOAD ISZERO ISZERO DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2B73 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BCD JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2BB1 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2543 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B9D JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2C15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2C20 DUP2 PUSH2 0x2645 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2C30 DUP2 PUSH2 0x2645 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x2C4E DUP2 PUSH2 0x2BEB JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C89 DUP2 PUSH2 0x2645 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C99 DUP2 PUSH2 0x2645 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x2CD9 JUMPI PUSH2 0x2CD9 PUSH2 0x2CA4 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2CF4 JUMPI PUSH2 0x2CF4 PUSH2 0x2CA4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2D13 JUMPI PUSH2 0x2D13 PUSH2 0x2CA4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D35 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2D4D JUMPI PUSH2 0x2D4D PUSH2 0x2CA4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2D66 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2543 DUP2 PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2E1D JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2E03 JUMPI PUSH2 0x2E03 PUSH2 0x2CA4 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2E10 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E34 JUMPI POP PUSH1 0x1 PUSH2 0xAD2 JUMP JUMPDEST DUP2 PUSH2 0x2E41 JUMPI POP PUSH1 0x0 PUSH2 0xAD2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2E57 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2E61 JUMPI PUSH2 0x2E7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2E72 JUMPI PUSH2 0x2E72 PUSH2 0x2CA4 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xAD2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2EA0 JUMPI POP DUP2 DUP2 EXP PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x2EAA DUP4 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2EBE JUMPI PUSH2 0x2EBE PUSH2 0x2CA4 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2543 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2E25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2EE9 JUMPI PUSH2 0x2EE9 PUSH2 0x2CA4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BCD JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F04 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BCD JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F3D JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP3 MSTORE DUP9 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x100 PUSH1 0x5 DUP3 SWAP1 SHL DUP5 ADD DUP2 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x20 DUP1 DUP14 ADD DUP6 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FB8 JUMPI PUSH1 0xFF NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x2FA6 DUP7 DUP4 MLOAD PUSH2 0x2677 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F8A JUMP JUMPDEST POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE POP POP POP PUSH2 0x2FCE DUP2 DUP11 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2FE2 DUP2 DUP10 PUSH2 0x2F29 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2FF6 DUP2 DUP9 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x300A DUP2 DUP8 PUSH2 0x2B9D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x301F PUSH1 0xA0 DUP4 ADD DUP6 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x304D JUMPI PUSH2 0x304D PUSH2 0x2CA4 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3095 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2EF0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x30A7 DUP2 DUP6 PUSH2 0x2B9D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x30CE JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x30EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3102 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3113 JUMPI PUSH2 0x3140 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3140 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3138 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x311F JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 POP CREATE2 SAR 0x25 PUSH3 0xBCF632 PUSH2 0x3238 SWAP16 PUSH30 0x29D0B87DD67F993B2478BF2FB924496E7FEA64736F6C634300080A003300 ",
  "pcMap": {
    "0": {
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x253"
    },
    "25": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "42": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "GT",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x593"
    },
    "75": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE0C9802F"
    },
    "82": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BE"
    },
    "86": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2F273BD"
    },
    "93": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60B"
    },
    "97": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF5DAB711"
    },
    "104": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61E"
    },
    "108": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF851A440"
    },
    "115": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68B"
    },
    "119": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFED45587"
    },
    "126": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "127": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A4"
    },
    "130": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "131": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "142": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "146": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9320688"
    },
    "153": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "157": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD32E81A5"
    },
    "164": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56E"
    },
    "168": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD505ACCF"
    },
    "175": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x577"
    },
    "179": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD77A1D3A"
    },
    "186": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58A"
    },
    "190": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "191": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "202": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "GT",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "206": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "213": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49B"
    },
    "217": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9CFDBD5E"
    },
    "224": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "228": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA4C8B46B"
    },
    "235": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C1"
    },
    "239": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA583024B"
    },
    "246": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D6"
    },
    "250": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA694FC3A"
    },
    "257": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F6"
    },
    "261": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "266": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "273": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43B"
    },
    "277": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7A55FF21"
    },
    "284": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45B"
    },
    "288": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7D9FCE4D"
    },
    "295": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x463"
    },
    "299": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7ECEBE00"
    },
    "306": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x472"
    },
    "310": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "311": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x817B1CD2"
    },
    "317": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "318": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x492"
    },
    "321": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "322": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "324": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "325": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "326": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "328": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "333": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "GT",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "337": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "338": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C33FE94"
    },
    "344": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "GT",
      "path": "0"
    },
    "345": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "348": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "349": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "350": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C33FE94"
    },
    "355": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "356": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "359": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "360": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "361": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4E71D92D"
    },
    "366": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "367": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EC"
    },
    "370": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "371": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "372": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4F64B2BE"
    },
    "377": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "378": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F4"
    },
    "381": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "382": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "383": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5DA69CB6"
    },
    "388": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "389": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41F"
    },
    "392": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "393": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "394": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6B954292"
    },
    "399": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "400": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x428"
    },
    "403": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "404": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "406": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "407": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "408": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "410": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "415": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "416": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "419": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "420": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "421": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35322F37"
    },
    "426": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "427": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "430": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "431": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "432": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3644E515"
    },
    "437": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "438": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0"
    },
    "441": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "442": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "443": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x36E9B344"
    },
    "448": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "449": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C8"
    },
    "452": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "453": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "454": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4AE99D30"
    },
    "459": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "460": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D1"
    },
    "463": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "464": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "466": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "467": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "468": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "470": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1959A002"
    },
    "475": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "GT",
      "path": "0"
    },
    "476": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "479": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "480": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "481": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1959A002"
    },
    "486": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "487": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "490": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "491": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "492": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1AE69FB8"
    },
    "497": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "498": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31D"
    },
    "501": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "502": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "503": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "508": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "509": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "512": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "513": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "514": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E17DE78"
    },
    "519": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "520": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "523": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "524": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "525": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x30ADF81F"
    },
    "530": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "531": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "534": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "535": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "537": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "538": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "539": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "541": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1C0C3E5"
    },
    "546": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "547": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x258"
    },
    "550": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "551": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "552": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1E1D114"
    },
    "557": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "558": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E"
    },
    "561": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "562": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "563": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "568": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "569": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "572": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "573": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "574": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "579": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "580": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29C"
    },
    "583": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "584": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "585": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "590": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "EQ",
      "path": "0"
    },
    "591": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BF"
    },
    "594": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "595": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "596": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "598": {
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "599": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2333,
        20720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "600": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "601": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "604": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "607": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "608": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "610": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265A"
    },
    "613": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "614": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "615": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B7"
    },
    "618": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "619": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "620": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "622": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "623": {
      "op": "SWAP1"
    },
    "624": {
      "op": "DUP2"
    },
    "625": {
      "op": "MSTORE"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "628": {
      "op": "ADD"
    },
    "629": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "630": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "632": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "633": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "634": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "635": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SUB",
      "path": "0"
    },
    "636": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "637": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "RETURN",
      "path": "0"
    },
    "638": {
      "offset": [
        4348,
        4374
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "639": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        4348,
        4374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "642": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        4348,
        4374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "644": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        4348,
        4374
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "645": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        4348,
        4374
      ],
      "op": "DUP2",
      "path": "0"
    },
    "646": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        4348,
        4374
      ],
      "op": "JUMP",
      "path": "0"
    },
    "647": {
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "648": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F"
    },
    "651": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9DD"
    },
    "654": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "655": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "656": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "658": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "659": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275"
    },
    "662": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "663": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "664": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26C4"
    },
    "667": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "668": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "669": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "672": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AA"
    },
    "675": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "676": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "678": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D7"
    },
    "681": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "1"
    },
    "682": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "683": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA6B"
    },
    "686": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "1"
    },
    "687": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "688": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "690": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "691": {
      "op": "SWAP1"
    },
    "692": {
      "op": "ISZERO"
    },
    "693": {
      "op": "ISZERO"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "MSTORE"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "698": {
      "op": "ADD"
    },
    "699": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275"
    },
    "702": {
      "op": "JUMP"
    },
    "703": {
      "offset": [
        1336,
        1362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "704": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "707": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "709": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "710": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "DUP2",
      "path": "1"
    },
    "711": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "712": {
      "offset": [
        4718,
        4762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD"
    },
    "716": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "719": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "720": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "722": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265A"
    },
    "725": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4718,
        4762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "726": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "727": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "729": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "731": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "732": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "DUP2",
      "path": "0"
    },
    "736": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "737": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "739": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "740": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "741": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "DUP1",
      "path": "0"
    },
    "742": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "743": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "745": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "DUP3",
      "path": "0"
    },
    "746": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "ADD",
      "path": "0"
    },
    "747": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "748": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "750": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "DUP4",
      "path": "0"
    },
    "751": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "ADD",
      "path": "0"
    },
    "752": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "753": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "755": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "756": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "757": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "ADD",
      "path": "0"
    },
    "758": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "759": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "760": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "761": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "762": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "763": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "DUP5",
      "path": "0"
    },
    "764": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "765": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "766": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "768": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "DUP1",
      "path": "0"
    },
    "769": {
      "fn": "ERC20.approve",
      "offset": [
        4718,
        4762
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "770": {
      "op": "SWAP5"
    },
    "771": {
      "op": "DUP6"
    },
    "772": {
      "op": "MSTORE"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "775": {
      "op": "DUP6"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "op": "SWAP4"
    },
    "778": {
      "op": "SWAP1"
    },
    "779": {
      "op": "SWAP4"
    },
    "780": {
      "op": "MSTORE"
    },
    "781": {
      "op": "SWAP2"
    },
    "782": {
      "op": "DUP4"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "op": "MSTORE"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "787": {
      "op": "DUP3"
    },
    "788": {
      "op": "ADD"
    },
    "789": {
      "op": "MSTORE"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "offset": [
        4718,
        4762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "796": {
      "op": "JUMP"
    },
    "797": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "798": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "801": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "804": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "805": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "807": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2703"
    },
    "810": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17058,
        17601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "811": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "812": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD8"
    },
    "815": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17058,
        17601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "816": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "817": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "STOP",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "822": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x340"
    },
    "825": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "826": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "828": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x271C"
    },
    "831": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "1"
    },
    "832": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "833": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC62"
    },
    "836": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "1"
    },
    "837": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "838": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "841": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "844": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "845": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "847": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2703"
    },
    "850": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        17969,
        18545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "851": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "852": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD42"
    },
    "855": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        17969,
        18545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "856": {
      "offset": [
        1677,
        1844
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "857": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1677,
        1844
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "860": {
      "offset": [
        1727,
        1844
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "893": {
      "offset": [
        1677,
        1844
      ],
      "op": "DUP2",
      "path": "1"
    },
    "894": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1677,
        1844
      ],
      "op": "JUMP",
      "path": "1"
    },
    "895": {
      "offset": [
        1114,
        1145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "896": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "899": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "932": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "DUP2",
      "path": "1"
    },
    "933": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "JUMP",
      "path": "1"
    },
    "934": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "935": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "937": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "940": {
      "op": "SWAP1"
    },
    "941": {
      "op": "SWAP2"
    },
    "942": {
      "op": "AND"
    },
    "943": {
      "op": "DUP2"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275"
    },
    "951": {
      "op": "JUMP"
    },
    "952": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18717,
        19296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "953": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18717,
        19296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "956": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18717,
        19296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDCB"
    },
    "959": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        18717,
        19296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "960": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "961": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "964": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF4A"
    },
    "967": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "1"
    },
    "968": {
      "offset": [
        4233,
        4258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "969": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        4233,
        4258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "972": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        4233,
        4258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "974": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        4233,
        4258
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "975": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        4233,
        4258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "976": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        4233,
        4258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "977": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8629,
        9639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "978": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8629,
        9639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "981": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8629,
        9639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA5"
    },
    "984": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        8629,
        9639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "985": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "986": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "989": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E7"
    },
    "992": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "993": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "995": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265A"
    },
    "998": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        7895,
        8030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "999": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1000": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E3"
    },
    "1003": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        7895,
        8030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1004": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19427,
        19567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1005": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19427,
        19567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1008": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19427,
        19567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131C"
    },
    "1011": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        19427,
        19567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1012": {
      "offset": [
        4265,
        4288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1013": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x407"
    },
    "1016": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x402"
    },
    "1019": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1020": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1022": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2703"
    },
    "1025": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        4265,
        4288
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1026": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1027": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139C"
    },
    "1030": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        4265,
        4288
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1031": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1032": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1034": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "SUB"
    },
    "1043": {
      "op": "SWAP1"
    },
    "1044": {
      "op": "SWAP2"
    },
    "1045": {
      "op": "AND"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "1054": {
      "op": "JUMP"
    },
    "1055": {
      "offset": [
        4667,
        4707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1056": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4667,
        4707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1059": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4667,
        4707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1061": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4667,
        4707
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1062": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4667,
        4707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1063": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4667,
        4707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1064": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1065": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "1068": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x436"
    },
    "1071": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1072": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1074": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A74"
    },
    "1077": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        6561,
        7728
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1078": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1079": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C6"
    },
    "1082": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        6561,
        7728
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1083": {
      "offset": [
        1369,
        1413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1084": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "1087": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x449"
    },
    "1090": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1091": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1093": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x265A"
    },
    "1096": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1097": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1098": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1100": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1102": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1103": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1105": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1106": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1107": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1108": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1110": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1111": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1112": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1113": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1114": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1115": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13892,
        14433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1116": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13892,
        14433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1119": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13892,
        14433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1712"
    },
    "1122": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        13892,
        14433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1123": {
      "offset": [
        2615,
        2665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1124": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2615,
        2665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1127": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "1136": {
      "offset": [
        2615,
        2665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1137": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2615,
        2665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1138": {
      "offset": [
        1959,
        2000
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1139": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "1142": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x480"
    },
    "1145": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1146": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1148": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x265A"
    },
    "1151": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1152": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1153": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1155": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1157": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1158": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1160": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1161": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1162": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1163": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1165": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1166": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1167": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1168": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1169": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1170": {
      "offset": [
        4997,
        5023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1171": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        4997,
        5023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1174": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        4997,
        5023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "1176": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        4997,
        5023
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1177": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        4997,
        5023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1178": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        4997,
        5023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1179": {
      "offset": [
        1087,
        1107
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1180": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F"
    },
    "1183": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1802"
    },
    "1186": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        1087,
        1107
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1187": {
      "offset": [
        2576,
        2609
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1188": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2576,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AC"
    },
    "1191": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "1194": {
      "offset": [
        2576,
        2609
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1195": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2576,
        2609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1196": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2576,
        2609
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1197": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2576,
        2609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1199": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2576,
        2609
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1200": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1205": {
      "op": "SWAP1"
    },
    "1206": {
      "op": "SWAP2"
    },
    "1207": {
      "op": "AND"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "offset": [
        2576,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "1216": {
      "op": "JUMP"
    },
    "1217": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1218": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1221": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180F"
    },
    "1224": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10367,
        10940
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1225": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1226": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1229": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "1232": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1233": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1234": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B57"
    },
    "1237": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10367,
        10940
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1238": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1239": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E9"
    },
    "1242": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E4"
    },
    "1245": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1246": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1248": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265A"
    },
    "1251": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1252": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1253": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F4"
    },
    "1256": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1257": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1258": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1260": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1261": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "1264": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1265": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1266": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BD8"
    },
    "1269": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1270": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1271": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "1274": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1277": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1278": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1280": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2703"
    },
    "1283": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        15452,
        16728
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1284": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9C"
    },
    "1288": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        15452,
        16728
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1289": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1290": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "1293": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x517"
    },
    "1296": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1297": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1299": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D7"
    },
    "1302": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1303": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1304": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D1B"
    },
    "1307": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1308": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52F"
    },
    "1312": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52A"
    },
    "1315": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1316": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1318": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2703"
    },
    "1321": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        9985,
        10187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1322": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1323": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D81"
    },
    "1326": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        9985,
        10187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1327": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1328": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1330": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1331": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "op": "SUB"
    },
    "1340": {
      "op": "SWAP4"
    },
    "1341": {
      "op": "DUP5"
    },
    "1342": {
      "op": "AND"
    },
    "1343": {
      "op": "DUP2"
    },
    "1344": {
      "op": "MSTORE"
    },
    "1345": {
      "op": "DUP3"
    },
    "1346": {
      "op": "MLOAD"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1349": {
      "op": "DUP1"
    },
    "1350": {
      "op": "DUP4"
    },
    "1351": {
      "op": "ADD"
    },
    "1352": {
      "op": "SWAP2"
    },
    "1353": {
      "op": "SWAP1"
    },
    "1354": {
      "op": "SWAP2"
    },
    "1355": {
      "op": "MSTORE"
    },
    "1356": {
      "op": "DUP4"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "op": "MLOAD"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "op": "SUB"
    },
    "1367": {
      "op": "AND"
    },
    "1368": {
      "op": "DUP2"
    },
    "1369": {
      "op": "DUP4"
    },
    "1370": {
      "op": "ADD"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "SWAP2"
    },
    "1373": {
      "op": "ADD"
    },
    "1374": {
      "op": "MLOAD"
    },
    "1375": {
      "op": "SWAP1"
    },
    "1376": {
      "op": "SWAP2"
    },
    "1377": {
      "op": "AND"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1380": {
      "op": "DUP3"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "1389": {
      "op": "JUMP"
    },
    "1390": {
      "offset": [
        4803,
        4832
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1391": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        4803,
        4832
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1394": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        4803,
        4832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1396": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        4803,
        4832
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1397": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        4803,
        4832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1398": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        4803,
        4832
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1399": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1400": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x330"
    },
    "1403": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x585"
    },
    "1406": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1407": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1409": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BFA"
    },
    "1412": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1413": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1414": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E12"
    },
    "1417": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1418": {
      "offset": [
        4921,
        4944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1419": {
      "fn": "ERC20.permit",
      "offset": [
        4921,
        4944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1422": {
      "fn": "ERC20.permit",
      "offset": [
        4921,
        4944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "1424": {
      "fn": "ERC20.permit",
      "offset": [
        4921,
        4944
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1425": {
      "fn": "ERC20.permit",
      "offset": [
        4921,
        4944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1426": {
      "fn": "ERC20.permit",
      "offset": [
        4921,
        4944
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1427": {
      "offset": [
        1420,
        1484
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1428": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "1431": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A1"
    },
    "1434": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1435": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1437": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C6B"
    },
    "1440": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1441": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1442": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1444": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1446": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1447": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1448": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1449": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1451": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1452": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1453": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1454": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1456": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1457": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1458": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1459": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1460": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1461": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1462": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1463": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1464": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1465": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1466": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1467": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1468": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1469": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1470": {
      "offset": [
        4381,
        4413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1471": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1473": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1474": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E4"
    },
    "1477": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1478": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1483": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1484": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1485": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "AND",
      "path": "0"
    },
    "1486": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "offset": [
        4381,
        4413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1493": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "DIV",
      "path": "0"
    },
    "1494": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1495": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "AND",
      "path": "0"
    },
    "1496": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "offset": [
        4381,
        4413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1503": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1504": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "DIV",
      "path": "0"
    },
    "1505": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "AND",
      "path": "0"
    },
    "1506": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1507": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1508": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1509": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1511": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1512": {
      "fn": "ERC20.permit",
      "offset": [
        4381,
        4413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1513": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1518": {
      "op": "SWAP5"
    },
    "1519": {
      "op": "DUP6"
    },
    "1520": {
      "op": "AND"
    },
    "1521": {
      "op": "DUP2"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "SWAP3"
    },
    "1524": {
      "op": "DUP5"
    },
    "1525": {
      "op": "AND"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1528": {
      "op": "DUP5"
    },
    "1529": {
      "op": "ADD"
    },
    "1530": {
      "op": "MSTORE"
    },
    "1531": {
      "op": "SWAP3"
    },
    "1532": {
      "op": "AND"
    },
    "1533": {
      "op": "SWAP2"
    },
    "1534": {
      "op": "DUP2"
    },
    "1535": {
      "op": "ADD"
    },
    "1536": {
      "op": "SWAP2"
    },
    "1537": {
      "op": "SWAP1"
    },
    "1538": {
      "op": "SWAP2"
    },
    "1539": {
      "op": "MSTORE"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "offset": [
        4381,
        4413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "1546": {
      "op": "JUMP"
    },
    "1547": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1548": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "1551": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x619"
    },
    "1554": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1555": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1557": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265A"
    },
    "1560": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        8143,
        8273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1561": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1562": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2063"
    },
    "1565": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        8143,
        8273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1566": {
      "offset": [
        4295,
        4341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1567": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "1570": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62C"
    },
    "1573": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1574": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1576": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265A"
    },
    "1579": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        4295,
        4341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1580": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1581": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1583": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1585": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1586": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1588": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1590": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1591": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1593": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1594": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1595": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1596": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1597": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1599": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1600": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "ADD",
      "path": "0"
    },
    "1601": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1602": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1604": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1605": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1606": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "ADD",
      "path": "0"
    },
    "1607": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1608": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1609": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "op": "SUB"
    },
    "1618": {
      "offset": [
        4295,
        4341
      ],
      "op": "AND",
      "path": "0"
    },
    "1619": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1626": {
      "op": "SHL"
    },
    "1627": {
      "op": "SUB"
    },
    "1628": {
      "offset": [
        4295,
        4341
      ],
      "op": "AND",
      "path": "0"
    },
    "1629": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1630": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1631": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1632": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1634": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1635": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4295,
        4341
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1636": {
      "op": "SWAP4"
    },
    "1637": {
      "op": "DUP5"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "op": "SWAP1"
    },
    "1648": {
      "op": "SWAP3"
    },
    "1649": {
      "op": "AND"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1652": {
      "op": "DUP5"
    },
    "1653": {
      "op": "ADD"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1661": {
      "op": "SHL"
    },
    "1662": {
      "op": "SUB"
    },
    "1663": {
      "op": "AND"
    },
    "1664": {
      "op": "SWAP1"
    },
    "1665": {
      "op": "DUP3"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "op": "MSTORE"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "offset": [
        4295,
        4341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "1674": {
      "op": "JUMP"
    },
    "1675": {
      "offset": [
        4165,
        4185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1676": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1678": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1679": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x407"
    },
    "1682": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1683": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "1687": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1688": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "DIV",
      "path": "0"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1695": {
      "op": "SHL"
    },
    "1696": {
      "op": "SUB"
    },
    "1697": {
      "offset": [
        4165,
        4185
      ],
      "op": "AND",
      "path": "0"
    },
    "1698": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1699": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4165,
        4185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1700": {
      "offset": [
        4192,
        4227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1701": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "1704": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B2"
    },
    "1707": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1708": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1710": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2703"
    },
    "1713": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        4192,
        4227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1714": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1715": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DE"
    },
    "1718": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        4192,
        4227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1719": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "op": "SUB"
    },
    "1728": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1729": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "AND",
      "path": "0"
    },
    "1730": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11972,
        11979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1732": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1733": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1734": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1735": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "1737": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1739": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1740": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1742": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1743": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12031
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1744": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1746": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12050
      ],
      "op": "ADD",
      "path": "0"
    },
    "1747": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12014,
        12050
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1748": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11995,
        12010
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1749": {
      "branch": 97,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11995,
        12050
      ],
      "op": "GT",
      "path": "0"
    },
    "1750": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11991,
        12060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E1"
    },
    "1753": {
      "branch": 97,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11991,
        12060
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12059,
        12060
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "1757": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12059,
        12060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1758": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "o",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1761": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11991,
        12060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1762": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1764": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12147
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1765": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12094,
        12147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1768": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12094,
        12147
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1769": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12147
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1780": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12147
      ],
      "op": "DIV",
      "path": "0"
    },
    "1781": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1782": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12147
      ],
      "op": "AND",
      "path": "0"
    },
    "1783": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12127,
        12147
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1788": {
      "op": "SHL"
    },
    "1789": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12094,
        12124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1790": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12094,
        12124
      ],
      "op": "DIV",
      "path": "0"
    },
    "1791": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12094,
        12124
      ],
      "op": "AND",
      "path": "0"
    },
    "1792": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12094,
        12147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBA"
    },
    "1795": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12094,
        12147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1796": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12094,
        12147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12074,
        12148
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1802": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12074,
        12148
      ],
      "op": "AND",
      "path": "0"
    },
    "1803": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12074,
        12089
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1804": {
      "branch": 98,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12074,
        12148
      ],
      "op": "GT",
      "path": "0"
    },
    "1805": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12070,
        12158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x718"
    },
    "1808": {
      "branch": 98,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12070,
        12158
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12157,
        12158
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "1812": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12157,
        12158
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1813": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "o",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1816": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12070,
        12158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1823": {
      "op": "SHL"
    },
    "1824": {
      "op": "SUB"
    },
    "1825": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1826": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "AND",
      "path": "0"
    },
    "1827": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12168,
        12200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1829": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1830": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1831": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1832": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "1834": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1836": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1837": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1839": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1840": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12254
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1841": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1843": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12285
      ],
      "op": "ADD",
      "path": "0"
    },
    "1844": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12237,
        12285
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1845": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73C"
    },
    "1848": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1712"
    },
    "1851": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12203,
        12222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1852": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1853": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12285
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x746"
    },
    "1856": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12285
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1857": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1858": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12285
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "1861": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12203,
        12285
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1862": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12203,
        12285
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1863": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1865": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12419
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1866": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12168,
        12285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12168,
        12285
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12304,
        12323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1871": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12304,
        12323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1872": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12366,
        12419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "1875": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12366,
        12419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1876": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12419
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12419
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1887": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12419
      ],
      "op": "DIV",
      "path": "0"
    },
    "1888": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1889": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12419
      ],
      "op": "AND",
      "path": "0"
    },
    "1890": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12399,
        12419
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1895": {
      "op": "SHL"
    },
    "1896": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12366,
        12396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1897": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12366,
        12396
      ],
      "op": "DIV",
      "path": "0"
    },
    "1898": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12366,
        12396
      ],
      "op": "AND",
      "path": "0"
    },
    "1899": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12366,
        12419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBA"
    },
    "1902": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12366,
        12419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1903": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12366,
        12419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1913": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "AND",
      "path": "0"
    },
    "1914": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1916": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1917": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1918": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1919": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "1921": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1923": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1924": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1926": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1927": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12343
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1928": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1930": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12362
      ],
      "op": "ADD",
      "path": "0"
    },
    "1931": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12362
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1932": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12420
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1937": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1938": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1939": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1940": {
      "branch": 99,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12420
      ],
      "op": "AND",
      "path": "0"
    },
    "1941": {
      "op": "GT"
    },
    "1942": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C4"
    },
    "1945": {
      "branch": 99,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1955": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "AND",
      "path": "0"
    },
    "1956": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1958": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1959": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1960": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1961": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "1963": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1965": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1966": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1968": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1969": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12592
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1970": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1972": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12611
      ],
      "op": "ADD",
      "path": "0"
    },
    "1973": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12575,
        12611
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1974": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12549,
        12611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BF"
    },
    "1977": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12549,
        12611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1978": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12549,
        12564
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1979": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12549,
        12611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "1982": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12549,
        12611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1983": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12549,
        12611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1984": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "1987": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1988": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12326,
        12611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1989": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1991": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12530
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1992": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12530
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2001": {
      "op": "SHL"
    },
    "2002": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12530
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2003": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12530
      ],
      "op": "DIV",
      "path": "0"
    },
    "2004": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2005": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12530
      ],
      "op": "AND",
      "path": "0"
    },
    "2006": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12500,
        12530
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2007": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "2010": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12469,
        12489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2017": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12469,
        12489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2018": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12469,
        12489
      ],
      "op": "DIV",
      "path": "0"
    },
    "2019": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12469,
        12489
      ],
      "op": "AND",
      "path": "0"
    },
    "2020": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12458
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2021": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "2024": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12443,
        12489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2025": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2026": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "2029": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12530
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2030": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2031": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "2034": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12443,
        12530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2035": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12443,
        12530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2036": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2038": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12719
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2039": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12304,
        12611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2040": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12304,
        12611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2041": {
      "op": "POP"
    },
    "2042": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12626,
        12645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2044": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12626,
        12645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2045": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12666,
        12719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81C"
    },
    "2048": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12666,
        12719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2049": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12719
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12719
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2060": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12719
      ],
      "op": "DIV",
      "path": "0"
    },
    "2061": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2062": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12719
      ],
      "op": "AND",
      "path": "0"
    },
    "2063": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12699,
        12719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12666,
        12696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2070": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12666,
        12696
      ],
      "op": "DIV",
      "path": "0"
    },
    "2071": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12666,
        12696
      ],
      "op": "AND",
      "path": "0"
    },
    "2072": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12666,
        12719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBA"
    },
    "2075": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12666,
        12719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2076": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12666,
        12719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2077": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        12720
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2082": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        12720
      ],
      "op": "AND",
      "path": "0"
    },
    "2083": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        12662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2085": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        12662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2086": {
      "branch": 100,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        12720
      ],
      "op": "LT",
      "path": "0"
    },
    "2087": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x896"
    },
    "2090": {
      "branch": 100,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        13085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2091": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13074,
        13085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2093": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13074,
        13085
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2094": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13047,
        13061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2096": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13047,
        13061
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2097": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13029,
        13061
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83A"
    },
    "2100": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13029,
        13061
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2101": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13029,
        13044
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2102": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13029,
        13061
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "2105": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13029,
        13061
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2106": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13029,
        13061
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2107": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "2109": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13020
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2110": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84A"
    },
    "2113": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2114": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2117": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2118": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2121": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13009,
        13025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2122": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2123": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x854"
    },
    "2126": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13062
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2127": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13062
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2128": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2131": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13009,
        13062
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2132": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13009,
        13062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2133": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13008,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85E"
    },
    "2136": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13008,
        13085
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2137": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13008,
        13085
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2138": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13008,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2141": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13008,
        13085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2142": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13008,
        13085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2149": {
      "op": "SHL"
    },
    "2150": {
      "op": "SUB"
    },
    "2151": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2152": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "AND",
      "path": "0"
    },
    "2153": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2155": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2156": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2157": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2158": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2160": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2162": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2163": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2165": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2166": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12978
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2167": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2169": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12997
      ],
      "op": "ADD",
      "path": "0"
    },
    "2170": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12997
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2171": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        12950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2173": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        12950
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2174": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        12997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x887"
    },
    "2177": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        12997
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2178": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12961,
        12997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2179": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        12997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "2182": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12942,
        12997
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2183": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        12997
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2184": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x891"
    },
    "2187": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        13085
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2188": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        13085
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2189": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "2192": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12942,
        13085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2193": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12942,
        13085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2194": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        13085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x923"
    },
    "2197": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        13085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2198": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12648,
        13085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2199": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12912,
        12923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2201": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12912,
        12923
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2202": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2204": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12898
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2205": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12845,
        12898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BC"
    },
    "2208": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12845,
        12898
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2209": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12898
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2218": {
      "op": "SHL"
    },
    "2219": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12898
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2220": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12898
      ],
      "op": "DIV",
      "path": "0"
    },
    "2221": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12898
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2222": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12898
      ],
      "op": "AND",
      "path": "0"
    },
    "2223": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12878,
        12898
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12845,
        12875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2230": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12845,
        12875
      ],
      "op": "DIV",
      "path": "0"
    },
    "2231": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12845,
        12875
      ],
      "op": "AND",
      "path": "0"
    },
    "2232": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12845,
        12898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBA"
    },
    "2235": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12845,
        12898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2236": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12845,
        12898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2237": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12826,
        12899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CC"
    },
    "2240": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12826,
        12899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2241": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12826,
        12899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2246": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12826,
        12899
      ],
      "op": "AND",
      "path": "0"
    },
    "2247": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12826,
        12841
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2248": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12826,
        12899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "2251": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12826,
        12899
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2252": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12826,
        12899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2253": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "2255": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2256": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DC"
    },
    "2259": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2260": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2263": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2264": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2267": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12806,
        12822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2268": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2269": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E6"
    },
    "2272": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12900
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2273": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2274": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2277": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12806,
        12900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2278": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12806,
        12900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2279": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12805,
        12923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F0"
    },
    "2282": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12805,
        12923
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2283": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12805,
        12923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2284": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12805,
        12923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2287": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12805,
        12923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2288": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12805,
        12923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "SUB"
    },
    "2297": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2298": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "AND",
      "path": "0"
    },
    "2299": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2301": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2302": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2303": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2304": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12766
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2306": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2308": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2309": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2311": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2312": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12775
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2313": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2315": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12794
      ],
      "op": "ADD",
      "path": "0"
    },
    "2316": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12794
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2317": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2319": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12747
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2320": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x919"
    },
    "2323": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12794
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2324": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12758,
        12794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2325": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "2328": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12739,
        12794
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2329": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12794
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2330": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x923"
    },
    "2333": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12923
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2334": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2335": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "2338": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12739,
        12923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2339": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12739,
        12923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2340": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12626,
        13085
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13096,
        13123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2344": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13126,
        13151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x931"
    },
    "2347": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13140,
        13151
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2348": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12626,
        13085
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2349": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13126,
        13151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2352": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13126,
        13151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2353": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13126,
        13151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2354": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13096,
        13151
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "branch": 101,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13166,
        13190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2357": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13162,
        13200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x944"
    },
    "2360": {
      "branch": 101,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13162,
        13200
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13199,
        13200
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "2364": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13199,
        13200
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2365": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "op": "POP"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "op": "POP"
    },
    "2371": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "o",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2372": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13162,
        13200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2382": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "AND",
      "path": "0"
    },
    "2383": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13274,
        13299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2385": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2386": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2387": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2388": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2390": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2392": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2393": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2395": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2396": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13320
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2397": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13335
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2398": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13356,
        13375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2399": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13356,
        13375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2400": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96C"
    },
    "2403": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2404": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2407": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2408": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2411": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13303,
        13340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2412": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13303,
        13340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2413": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13302,
        13375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2416": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13302,
        13375
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2417": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13302,
        13375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2418": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13302,
        13375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2421": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13302,
        13375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2422": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13302,
        13375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2423": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13274,
        13375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2424": {
      "op": "POP"
    },
    "2425": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13423,
        13446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2427": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "2436": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2439": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13450,
        13506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x990"
    },
    "2442": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13274,
        13375
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2443": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13450,
        13474
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2444": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13450,
        13506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2447": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13450,
        13506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2448": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13450,
        13506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2449": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99A"
    },
    "2452": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2453": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2454": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2457": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13449,
        13512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2458": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2459": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A4"
    },
    "2462": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13530
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2463": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2464": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2467": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13449,
        13530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2468": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13449,
        13530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2469": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13423,
        13530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2470": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13423,
        13530
      ],
      "op": "POP",
      "path": "0"
    },
    "2471": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13560,
        13573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "2473": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13560,
        13573
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2474": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13545,
        13556
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2475": {
      "branch": 102,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13545,
        13573
      ],
      "op": "LT",
      "path": "0"
    },
    "2476": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13541,
        13707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BA"
    },
    "2479": {
      "branch": 102,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13541,
        13707
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2480": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13596,
        13611
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 3
    },
    "2481": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "op": "POP"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "POP"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "o",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2490": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13541,
        13707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2491": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13683,
        13696
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0xD"
    },
    "2493": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13683,
        13696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2494": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13650,
        13679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C7"
    },
    "2497": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13668,
        13679
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2498": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13650,
        13665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2499": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13650,
        13679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2502": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13650,
        13679
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2503": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13650,
        13679
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2504": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13649,
        13696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D1"
    },
    "2507": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13649,
        13696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2508": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13649,
        13696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2509": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13649,
        13696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2512": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        13649,
        13696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2513": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13649,
        13696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2514": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        13642,
        13696
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "2515": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        13713
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2516": {
      "op": "POP"
    },
    "2517": {
      "op": "POP"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "op": "POP"
    },
    "2524": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "o",
      "offset": [
        11889,
        13713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2525": {
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2526": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2528": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2529": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2530": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9EA"
    },
    "2533": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2534": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D52"
    },
    "2537": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2538": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2539": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2540": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2542": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2543": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2545": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2546": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2547": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DIV",
      "path": "1"
    },
    "2548": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MUL",
      "path": "1"
    },
    "2549": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2551": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2552": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2554": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2555": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2556": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2557": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2558": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2560": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2561": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2562": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2563": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2564": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2565": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2566": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2567": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2568": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2570": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2571": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2572": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2573": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2574": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA16"
    },
    "2577": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2578": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D52"
    },
    "2581": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2582": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2583": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2584": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2585": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA63"
    },
    "2588": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2589": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2590": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2592": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "LT",
      "path": "1"
    },
    "2593": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA38"
    },
    "2596": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2597": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2600": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2601": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2602": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2603": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DIV",
      "path": "1"
    },
    "2604": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MUL",
      "path": "1"
    },
    "2605": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2606": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2607": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2608": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2610": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2611": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2612": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA63"
    },
    "2615": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2616": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2617": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2618": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2619": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2620": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2621": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2623": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2624": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2626": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2628": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2629": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2630": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2631": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2632": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2633": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2634": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2635": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2636": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2638": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2639": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2640": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2642": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2643": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2644": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2645": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "GT",
      "path": "1"
    },
    "2646": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA46"
    },
    "2649": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2650": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2651": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2652": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SUB",
      "path": "1"
    },
    "2653": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2655": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "AND",
      "path": "1"
    },
    "2656": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2657": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "1"
    },
    "2658": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2659": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2660": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "1"
    },
    "2661": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "1"
    },
    "2662": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "1"
    },
    "2663": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "1"
    },
    "2664": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "1"
    },
    "2665": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2666": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "o",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2667": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2668": {
      "fn": "ERC20.approve",
      "offset": [
        2798,
        2808
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 5
    },
    "2669": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2671": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2672": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2673": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2674": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2676": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2678": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2679": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2680": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2681": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2683": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2684": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2685": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2695": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "AND",
      "path": "1"
    },
    "2696": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2697": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2698": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2699": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2700": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2701": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2702": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2703": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2704": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2705": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2706": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2707": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 6
    },
    "2708": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2709": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2710": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2711": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2712": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2745": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2746": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC6"
    },
    "2749": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2750": {
      "fn": "ERC20.approve",
      "offset": [
        2821,
        2827
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2751": {
      "op": "DUP2"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "SWAP1"
    },
    "2757": {
      "op": "JUMP"
    },
    "2758": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2759": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2761": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2762": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2763": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2764": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SUB",
      "path": "1"
    },
    "2765": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2766": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2767": {
      "op": "POP"
    },
    "2768": {
      "fn": "ERC20.approve",
      "offset": [
        2898,
        2902
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x1"
    },
    "2770": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2771": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2772": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2773": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "POP",
      "path": "1"
    },
    "2774": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "POP",
      "path": "1"
    },
    "2775": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2776": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2777": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17198,
        17209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2779": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17198,
        17209
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2780": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17131,
        17152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2782": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17131,
        17152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2783": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "2792": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF3"
    },
    "2795": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2798": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17171
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2799": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2802": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17156,
        17176
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2803": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2804": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "2807": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17194
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2808": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2809": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "2812": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17156,
        17194
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2813": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17156,
        17194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2814": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17155,
        17209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB07"
    },
    "2817": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17155,
        17209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2818": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17155,
        17209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2819": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17155,
        17209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "2822": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17155,
        17209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2823": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17155,
        17209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2824": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17266,
        17276
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "2825": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2827": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2828": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2829": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2830": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2832": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2834": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2835": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2837": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2838": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17277
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2839": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17257,
        17292
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2840": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17131,
        17209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2841": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17131,
        17209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2842": {
      "op": "POP"
    },
    "2843": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17240,
        17292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2844": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17240,
        17292
      ],
      "op": "GT",
      "path": "0"
    },
    "2845": {
      "branch": 103,
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17240,
        17292
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2846": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB67"
    },
    "2849": {
      "branch": 103,
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2850": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2852": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2861": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2864": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2866": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2867": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2873": {
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH22",
      "value": "0x554E5354414B4520414D4F554E5420544F4F20424947"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2901": {
      "op": "SHL"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2904": {
      "op": "DUP3"
    },
    "2905": {
      "op": "ADD"
    },
    "2906": {
      "op": "MSTORE"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2909": {
      "op": "ADD"
    },
    "2910": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2911": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2913": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2914": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2915": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2916": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "SUB",
      "path": "0"
    },
    "2917": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2918": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2919": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17219,
        17340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2920": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17359,
        17369
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "2921": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2923": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2924": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2925": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2926": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2928": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2930": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2931": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2933": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2934": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2935": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2936": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2937": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17389,
        17402
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2938": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17389,
        17402
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2939": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2940": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB86"
    },
    "2943": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2944": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17389,
        17402
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2945": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17389,
        17402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2946": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "2949": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17350,
        17402
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2950": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2951": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2952": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2953": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17350,
        17402
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "op": "POP"
    },
    "2956": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "2958": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2959": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2968": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2969": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17442,
        17452
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2970": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2972": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2973": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "ADD",
      "path": "0"
    },
    "2974": {
      "op": "MSTORE"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2977": {
      "op": "DUP2"
    },
    "2978": {
      "op": "ADD"
    },
    "2979": {
      "op": "DUP4"
    },
    "2980": {
      "op": "SWAP1"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17426,
        17430
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2983": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17426,
        17430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2984": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17441
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "2989": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2992": {
      "op": "ADD"
    },
    "2993": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2995": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2997": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2998": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2999": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3000": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "SUB",
      "path": "0"
    },
    "3001": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3002": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3004": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3005": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "GAS",
      "path": "0"
    },
    "3006": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "CALL",
      "path": "0"
    },
    "3007": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3008": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3009": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3010": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCF"
    },
    "3013": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3014": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3015": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3017": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3018": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3019": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3020": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3022": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3023": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3024": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "POP",
      "path": "0"
    },
    "3025": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "POP",
      "path": "0"
    },
    "3026": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "POP",
      "path": "0"
    },
    "3027": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "POP",
      "path": "0"
    },
    "3028": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3030": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3031": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3032": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3034": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "NOT",
      "path": "0"
    },
    "3035": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3037": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3038": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "ADD",
      "path": "0"
    },
    "3039": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "AND",
      "path": "0"
    },
    "3040": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3041": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "ADD",
      "path": "0"
    },
    "3042": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3043": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3045": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3046": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "POP",
      "path": "0"
    },
    "3047": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3048": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "ADD",
      "path": "0"
    },
    "3049": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3050": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF3"
    },
    "3053": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3054": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3055": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8D"
    },
    "3058": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17412,
        17470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3059": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3060": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17412,
        17470
      ],
      "op": "POP",
      "path": "0"
    },
    "3061": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 11,
      "value": "0x2504FCBA4204CC42C3DA7919528D55AB40C2BE512FE40EDC8153EDC4C5BF2F44"
    },
    "3094": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17503,
        17513
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3095": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17515,
        17530
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3096": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17532,
        17545
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3097": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17547,
        17555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3099": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17547,
        17555
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3100": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17557,
        17572
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3101": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17574,
        17593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC24"
    },
    "3104": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17574,
        17591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1712"
    },
    "3107": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "i",
      "offset": [
        17574,
        17593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3108": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17574,
        17593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3109": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3111": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3112": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3119": {
      "op": "SHL"
    },
    "3120": {
      "op": "SUB"
    },
    "3121": {
      "op": "SWAP1"
    },
    "3122": {
      "op": "SWAP8"
    },
    "3123": {
      "op": "AND"
    },
    "3124": {
      "op": "DUP8"
    },
    "3125": {
      "op": "MSTORE"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3128": {
      "op": "DUP8"
    },
    "3129": {
      "op": "ADD"
    },
    "3130": {
      "op": "SWAP6"
    },
    "3131": {
      "op": "SWAP1"
    },
    "3132": {
      "op": "SWAP6"
    },
    "3133": {
      "op": "MSTORE"
    },
    "3134": {
      "op": "SWAP4"
    },
    "3135": {
      "op": "DUP6"
    },
    "3136": {
      "op": "ADD"
    },
    "3137": {
      "op": "SWAP3"
    },
    "3138": {
      "op": "SWAP1"
    },
    "3139": {
      "op": "SWAP3"
    },
    "3140": {
      "op": "MSTORE"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3143": {
      "op": "DUP5"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3148": {
      "op": "DUP4"
    },
    "3149": {
      "op": "ADD"
    },
    "3150": {
      "op": "MSTORE"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3153": {
      "op": "DUP3"
    },
    "3154": {
      "op": "ADD"
    },
    "3155": {
      "op": "MSTORE"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3158": {
      "op": "ADD"
    },
    "3159": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3161": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3162": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3163": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3164": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "SUB",
      "path": "0"
    },
    "3165": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3166": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17485,
        17594
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3167": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17121,
        17601
      ],
      "op": "POP",
      "path": "0"
    },
    "3168": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "offset": [
        17058,
        17601
      ],
      "op": "POP",
      "path": "0"
    },
    "3169": {
      "fn": "BuidlCollective.unstakeWithoutClaim",
      "jump": "o",
      "offset": [
        17058,
        17601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3170": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3177": {
      "op": "SHL"
    },
    "3178": {
      "op": "SUB"
    },
    "3179": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "AND",
      "path": "1"
    },
    "3181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3440,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3184": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3186": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3188": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3190": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3191": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3192": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3193": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3195": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3196": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3197": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3198": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3490,
        3500
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3199": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3200": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3202": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3203": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3204": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3205": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3206": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3209": {
      "op": "NOT"
    },
    "3210": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3552,
        3580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3211": {
      "branch": 114,
      "fn": "ERC20.transferFrom",
      "offset": [
        3552,
        3580
      ],
      "op": "EQ",
      "path": "1"
    },
    "3212": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBE"
    },
    "3215": {
      "branch": 114,
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3216": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0xC99"
    },
    "3219": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3634,
        3640
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3220": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3631
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3221": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CE2"
    },
    "3224": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3624,
        3640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3225": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3232": {
      "op": "SHL"
    },
    "3233": {
      "op": "SUB"
    },
    "3234": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3235": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "AND",
      "path": "1"
    },
    "3236": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3238": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3240": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3241": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3603
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3243": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3246": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3250": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3251": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3610,
        3620
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3254": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3256": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3259": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3260": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3640
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3262": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3269": {
      "op": "SHL"
    },
    "3270": {
      "op": "SUB"
    },
    "3271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 13
    },
    "3272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "AND",
      "path": "1"
    },
    "3273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3276": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3278": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3282": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3285": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3286": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3289": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3290": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3292": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE6"
    },
    "3295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3297": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3298": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CE2"
    },
    "3301": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3651,
        3676
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3304": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3306": {
      "op": "POP"
    },
    "3307": {
      "op": "POP"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "op": "SUB"
    },
    "3316": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 14
    },
    "3317": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3318": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "AND",
      "path": "1"
    },
    "3319": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3321": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3322": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3323": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3324": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3831
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3326": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3328": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3329": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3331": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3332": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3333": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3334": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3335": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3336": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3337": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3338": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "ADD",
      "path": "1"
    },
    "3339": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3340": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3341": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 15
    },
    "3342": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3343": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3344": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3345": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "AND",
      "path": "1"
    },
    "3346": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3349": {
      "op": "DUP1"
    },
    "3350": {
      "op": "MLOAD"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3353": {
      "op": "PUSH2",
      "value": "0x314F"
    },
    "3356": {
      "op": "DUP4"
    },
    "3357": {
      "op": "CODECOPY"
    },
    "3358": {
      "op": "DUP2"
    },
    "3359": {
      "op": "MLOAD"
    },
    "3360": {
      "op": "SWAP2"
    },
    "3361": {
      "op": "MSTORE"
    },
    "3362": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3363": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD2F"
    },
    "3366": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3367": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3839,
        3845
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3368": {
      "op": "DUP2"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "SWAP1"
    },
    "3374": {
      "op": "JUMP"
    },
    "3375": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3376": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3378": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3379": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3380": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3381": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SUB",
      "path": "1"
    },
    "3382": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3383": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3384": {
      "op": "POP"
    },
    "3385": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3915,
        3919
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x1"
    },
    "3387": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3915,
        3919
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3388": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "op": "POP"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3394": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3395": {
      "offset": [
        5293,
        5307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3397": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5293,
        5307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3398": {
      "offset": [
        5275,
        5290
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3399": {
      "offset": [
        5275,
        5307
      ],
      "op": "GT",
      "path": "0"
    },
    "3400": {
      "offset": [
        5271,
        5540
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3401": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5271,
        5540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBF"
    },
    "3404": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3405": {
      "offset": [
        5425,
        5436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3407": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5425,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3408": {
      "offset": [
        5390,
        5404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3410": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5390,
        5404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3411": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5C"
    },
    "3414": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5372,
        5404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3415": {
      "offset": [
        5372,
        5387
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3416": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "3419": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3420": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3421": {
      "offset": [
        5352,
        5363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3423": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5352,
        5363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3424": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6C"
    },
    "3427": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5352,
        5368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3428": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "3431": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3432": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "3435": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3436": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3437": {
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD76"
    },
    "3440": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3441": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3442": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "3445": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3446": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3447": {
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD80"
    },
    "3450": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3451": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3452": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "3455": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3456": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3457": {
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3459": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3461": {
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3462": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3463": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3464": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD91"
    },
    "3467": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3468": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3469": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "3472": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3473": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3474": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3475": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3476": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5323,
        5436
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3477": {
      "op": "POP"
    },
    "3478": {
      "op": "POP"
    },
    "3479": {
      "offset": [
        5467,
        5482
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3480": {
      "offset": [
        5450,
        5464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3482": {
      "offset": [
        5450,
        5482
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3483": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18047,
        18065
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0xDA3"
    },
    "3486": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18054,
        18064
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3487": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18047,
        18053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2109"
    },
    "3490": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        18047,
        18065
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3491": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18047,
        18065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18142,
        18153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3495": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18142,
        18153
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3496": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18075,
        18096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3498": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18075,
        18096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3499": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "3508": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18100,
        18120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF3"
    },
    "3511": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "3514": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18100,
        18115
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3515": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18100,
        18120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "3518": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        18100,
        18120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3519": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3520": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18047,
        18065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA3"
    },
    "3523": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18054,
        18064
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3524": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        18047,
        18053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2109"
    },
    "3527": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        18047,
        18065
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3528": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3529": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "POP",
      "path": "0"
    },
    "3530": {
      "fn": "BuidlCollective.unstake",
      "jump": "o",
      "offset": [
        17969,
        18545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3531": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18717,
        19296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3532": {
      "offset": [
        5293,
        5307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3534": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5293,
        5307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3535": {
      "offset": [
        5275,
        5290
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3536": {
      "offset": [
        5275,
        5307
      ],
      "op": "GT",
      "path": "0"
    },
    "3537": {
      "offset": [
        5271,
        5540
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3538": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5271,
        5540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF34"
    },
    "3541": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3542": {
      "offset": [
        5425,
        5436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3544": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5425,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3545": {
      "offset": [
        5390,
        5404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3547": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5390,
        5404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3548": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE5"
    },
    "3551": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5372,
        5404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3552": {
      "offset": [
        5372,
        5387
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3553": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "3556": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3557": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3558": {
      "offset": [
        5352,
        5363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3560": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5352,
        5363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3561": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF5"
    },
    "3564": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5352,
        5368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3565": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "3568": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3569": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "3572": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3573": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3574": {
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFF"
    },
    "3577": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3578": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3579": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "3582": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3583": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3584": {
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE09"
    },
    "3587": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3588": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3589": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "3592": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3593": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3594": {
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3596": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3598": {
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3599": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3600": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3601": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1A"
    },
    "3604": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3605": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3606": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "3609": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3610": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3611": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3612": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3613": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5323,
        5436
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3614": {
      "op": "POP"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "offset": [
        5467,
        5482
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3617": {
      "offset": [
        5450,
        5464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "3619": {
      "offset": [
        5450,
        5482
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3620": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18788,
        18798
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3621": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3623": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3624": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3625": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3626": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "3628": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3630": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3631": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3633": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3634": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3635": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3636": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18775,
        18828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE39"
    },
    "3639": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18775,
        18828
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3640": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "o",
      "offset": [
        18717,
        19296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3641": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18775,
        18828
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3642": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18837,
        18855
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0xE42"
    },
    "3645": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18844,
        18854
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3646": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18837,
        18843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2109"
    },
    "3649": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        18837,
        18855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3650": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18837,
        18855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18903,
        18913
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3653": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18865,
        18891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3655": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3656": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3657": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3658": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "3660": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3662": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3663": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3665": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3666": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18914
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3667": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18929
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3668": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18994,
        19005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3670": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18994,
        19005
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3671": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3672": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18929
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3673": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18865,
        18891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3674": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "3677": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3678": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "3687": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        2657,
        2665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3688": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18961,
        19005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE71"
    },
    "3691": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18961,
        19005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3692": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18894,
        18929
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3693": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18961,
        19005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "3696": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        18961,
        19005
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3697": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18961,
        19005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3698": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7B"
    },
    "3701": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3702": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3703": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "3706": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        18960,
        19036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3707": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3708": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE85"
    },
    "3711": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19053
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3712": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3713": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "3716": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        18960,
        19053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3717": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18960,
        19053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3718": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x40"
    },
    "3720": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3721": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3728": {
      "op": "SHL"
    },
    "3729": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3730": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3731": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19093,
        19103
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3732": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3734": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3735": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "ADD",
      "path": "0"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3739": {
      "op": "DUP2"
    },
    "3740": {
      "op": "ADD"
    },
    "3741": {
      "op": "DUP3"
    },
    "3742": {
      "op": "SWAP1"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18939,
        19053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3745": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18939,
        19053
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3746": {
      "op": "POP"
    },
    "3747": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19077,
        19081
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3748": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19077,
        19081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3749": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19092
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3754": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3760": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3762": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3763": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3764": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3765": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "SUB",
      "path": "0"
    },
    "3766": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3767": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3769": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3770": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "GAS",
      "path": "0"
    },
    "3771": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "CALL",
      "path": "0"
    },
    "3772": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3773": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3774": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3775": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECC"
    },
    "3778": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3779": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3780": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3782": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3783": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3784": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3785": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3787": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3788": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3789": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "POP",
      "path": "0"
    },
    "3790": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "POP",
      "path": "0"
    },
    "3791": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "POP",
      "path": "0"
    },
    "3792": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "POP",
      "path": "0"
    },
    "3793": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3795": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3796": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3797": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3799": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "NOT",
      "path": "0"
    },
    "3800": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3802": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3803": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "ADD",
      "path": "0"
    },
    "3804": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "AND",
      "path": "0"
    },
    "3805": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3806": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "ADD",
      "path": "0"
    },
    "3807": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3808": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3810": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3811": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "POP",
      "path": "0"
    },
    "3812": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3813": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "ADD",
      "path": "0"
    },
    "3814": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3815": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF0"
    },
    "3818": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3819": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3820": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8D"
    },
    "3823": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        19063,
        19116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3824": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19063,
        19116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3825": {
      "op": "POP"
    },
    "3826": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19135,
        19145
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "3827": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19164,
        19165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3829": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3830": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3831": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3832": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "3834": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3836": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3837": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3839": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3840": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19146
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3841": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19126,
        19165
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3842": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19242,
        19250
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x10"
    },
    "3844": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19242,
        19250
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3845": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19180,
        19289
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2504FCBA4204CC42C3DA7919528D55AB40C2BE512FE40EDC8153EDC4C5BF2F44"
    },
    "3878": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19180,
        19289
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3879": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19135,
        19145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3880": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19210,
        19220
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3881": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19210,
        19220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3882": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19222,
        19240
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3883": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19222,
        19240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3884": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19252,
        19267
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3885": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19269,
        19288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC24"
    },
    "3888": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        19269,
        19286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1712"
    },
    "3891": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        19269,
        19288
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3892": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3893": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18788,
        18798
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3894": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3896": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3897": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3898": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3899": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "3901": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3903": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3904": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3906": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3907": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18799
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3908": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18779,
        18814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3909": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18775,
        18828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE39"
    },
    "3912": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        18775,
        18828
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3913": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "o",
      "offset": [
        18717,
        19296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3914": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3915": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5459,
        5466
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3917": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5514,
        5530
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 22,
      "value": "0x0"
    },
    "3950": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5510
      ],
      "op": "CHAINID",
      "path": "1"
    },
    "3951": {
      "branch": 115,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5530
      ],
      "op": "EQ",
      "path": "1"
    },
    "3952": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF80"
    },
    "3955": {
      "branch": 115,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3956": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5616
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7B"
    },
    "3959": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2397"
    },
    "3962": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5592,
        5616
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3963": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5616
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3964": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5478,
        5616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3965": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5478,
        5616
      ],
      "op": "POP",
      "path": "1"
    },
    "3966": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3967": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3968": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3969": {
      "op": "POP"
    },
    "3970": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5549,
        5573
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "4003": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5549,
        5573
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4004": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4005": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8629,
        9639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4006": {
      "offset": [
        5088,
        5093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4008": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5088,
        5093
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4009": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5088,
        5093
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "4013": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5088,
        5093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4014": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5088,
        5093
      ],
      "op": "DIV",
      "path": "0"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "op": "SUB"
    },
    "4023": {
      "offset": [
        5088,
        5093
      ],
      "op": "AND",
      "path": "0"
    },
    "4024": {
      "offset": [
        5074,
        5084
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4025": {
      "offset": [
        5074,
        5093
      ],
      "op": "EQ",
      "path": "0"
    },
    "4026": {
      "offset": [
        5066,
        5094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC2"
    },
    "4029": {
      "offset": [
        5066,
        5094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4030": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5066,
        5094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4032": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5066,
        5094
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4033": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5066,
        5094
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4034": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        5066,
        5094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4035": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8693,
        8710
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x6"
    },
    "4037": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8693,
        8710
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4038": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8693,
        8710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4040": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8693,
        8710
      ],
      "op": "AND",
      "path": "0"
    },
    "4041": {
      "branch": 104,
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8693,
        8719
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4042": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8685,
        8720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD2"
    },
    "4045": {
      "branch": 104,
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8685,
        8720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4046": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8685,
        8720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4048": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8685,
        8720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4049": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8685,
        8720
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4050": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8685,
        8720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4051": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8747
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x6"
    },
    "4053": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8754
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4054": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8754
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4057": {
      "op": "NOT"
    },
    "4058": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8754
      ],
      "op": "AND",
      "path": "0"
    },
    "4059": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8750,
        8754
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4061": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8754
      ],
      "op": "OR",
      "path": "0"
    },
    "4062": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8754
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4063": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8754
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4064": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8791,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "4066": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4067": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4068": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4070": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4071": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4072": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4074": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4075": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4076": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "MUL",
      "path": "0"
    },
    "4077": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4078": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "ADD",
      "path": "0"
    },
    "4079": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4080": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "ADD",
      "path": "0"
    },
    "4081": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4082": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4083": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4084": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4085": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4086": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4087": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4089": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8730,
        8747
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4090": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4091": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4092": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8791,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4093": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8791,
        8797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4094": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4095": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "ADD",
      "path": "0"
    },
    "4096": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8791,
        8797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4097": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4098": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4099": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4100": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1036"
    },
    "4103": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4104": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4106": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "MUL",
      "path": "0"
    },
    "4107": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4108": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "ADD",
      "path": "0"
    },
    "4109": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4110": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4111": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4113": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4114": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4116": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4118": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4119": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4120": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4121": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4122": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "op": "SUB"
    },
    "4131": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "AND",
      "path": "0"
    },
    "4132": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4133": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4134": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4136": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4137": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4138": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "ADD",
      "path": "0"
    },
    "4139": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4140": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4142": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "ADD",
      "path": "0"
    },
    "4143": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4144": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4145": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "GT",
      "path": "0"
    },
    "4146": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1018"
    },
    "4149": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4150": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4151": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "POP",
      "path": "0"
    },
    "4152": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "POP",
      "path": "0"
    },
    "4153": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "POP",
      "path": "0"
    },
    "4154": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "POP",
      "path": "0"
    },
    "4155": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "POP",
      "path": "0"
    },
    "4156": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4157": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8764,
        8797
      ],
      "op": "POP",
      "path": "0"
    },
    "4158": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8807,
        8834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1060"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4163": {
      "op": "DUP1"
    },
    "4164": {
      "op": "MLOAD"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4167": {
      "op": "DUP2"
    },
    "4168": {
      "op": "ADD"
    },
    "4169": {
      "op": "DUP3"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4173": {
      "op": "DUP1"
    },
    "4174": {
      "op": "DUP3"
    },
    "4175": {
      "op": "MSTORE"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4178": {
      "op": "DUP3"
    },
    "4179": {
      "op": "ADD"
    },
    "4180": {
      "op": "DUP2"
    },
    "4181": {
      "op": "SWAP1"
    },
    "4182": {
      "op": "MSTORE"
    },
    "4183": {
      "op": "SWAP2"
    },
    "4184": {
      "op": "DUP2"
    },
    "4185": {
      "op": "ADD"
    },
    "4186": {
      "op": "SWAP2"
    },
    "4187": {
      "op": "SWAP1"
    },
    "4188": {
      "op": "SWAP2"
    },
    "4189": {
      "op": "MSTORE"
    },
    "4190": {
      "op": "SWAP1"
    },
    "4191": {
      "op": "JUMP"
    },
    "4192": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8807,
        8834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4193": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8844,
        8864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4195": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8879,
        8888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4196": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8874,
        9398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4197": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8894,
        8901
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4198": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8894,
        8908
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4199": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8890,
        8891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4200": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8890,
        8908
      ],
      "op": "LT",
      "path": "0"
    },
    "4201": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8874,
        9398
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4202": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8874,
        9398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125F"
    },
    "4205": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8874,
        9398
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4206": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8951
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0xA"
    },
    "4208": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4210": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8959
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4211": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8960,
        8961
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4212": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4213": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4214": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4215": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "LT",
      "path": "0"
    },
    "4216": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1083"
    },
    "4219": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4220": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1083"
    },
    "4223": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "4226": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        8952,
        8962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4227": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4228": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4230": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4231": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4232": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "MUL",
      "path": "0"
    },
    "4233": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4234": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4235": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4236": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "ADD",
      "path": "0"
    },
    "4237": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4238": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "ADD",
      "path": "0"
    },
    "4239": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8952,
        8962
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4246": {
      "op": "SHL"
    },
    "4247": {
      "op": "SUB"
    },
    "4248": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4249": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4250": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "AND",
      "path": "0"
    },
    "4251": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4252": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4253": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4254": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4255": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "ADD",
      "path": "0"
    },
    "4256": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4257": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4258": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4259": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4260": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4262": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4263": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4264": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "ADD",
      "path": "0"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8942,
        8963
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4268": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4269": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4270": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4272": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4273": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "ADD",
      "path": "0"
    },
    "4274": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4275": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4276": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4277": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4278": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4279": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4280": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4281": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4283": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4284": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "ADD",
      "path": "0"
    },
    "4285": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4292": {
      "op": "SHL"
    },
    "4293": {
      "op": "SUB"
    },
    "4294": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "AND",
      "path": "0"
    },
    "4295": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4296": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4297": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "ADD",
      "path": "0"
    },
    "4298": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4299": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4300": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4301": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4303": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4304": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4305": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "ADD",
      "path": "0"
    },
    "4306": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4307": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4308": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4309": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "AND",
      "path": "0"
    },
    "4310": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4311": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4312": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "ADD",
      "path": "0"
    },
    "4313": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4314": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4315": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4316": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 26
    },
    "4317": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4318": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4319": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8929,
        8963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4322": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9135
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4323": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4324": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9136,
        9137
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4325": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9136,
        9137
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4326": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4327": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "LT",
      "path": "0"
    },
    "4328": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F3"
    },
    "4331": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4332": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F3"
    },
    "4335": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "4338": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9128,
        9138
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4339": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4340": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4342": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4343": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4344": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "MUL",
      "path": "0"
    },
    "4345": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4346": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4347": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4348": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "ADD",
      "path": "0"
    },
    "4349": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "ADD",
      "path": "0"
    },
    "4350": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9128,
        9138
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4351": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4353": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4354": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4361": {
      "op": "SHL"
    },
    "4362": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4363": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "op": "SUB"
    },
    "4372": {
      "op": "DUP5"
    },
    "4373": {
      "op": "DUP2"
    },
    "4374": {
      "op": "AND"
    },
    "4375": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4377": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4378": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "ADD",
      "path": "0"
    },
    "4379": {
      "op": "MSTORE"
    },
    "4380": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9174,
        9178
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4383": {
      "op": "DUP4"
    },
    "4384": {
      "op": "ADD"
    },
    "4385": {
      "op": "MSTORE"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4388": {
      "op": "DUP3"
    },
    "4389": {
      "op": "ADD"
    },
    "4390": {
      "op": "DUP7"
    },
    "4391": {
      "op": "SWAP1"
    },
    "4392": {
      "op": "MSTORE"
    },
    "4393": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4394": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9152
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4395": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9152
      ],
      "op": "AND",
      "path": "0"
    },
    "4396": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4397": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9152
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "4402": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4408": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4410": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4411": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4412": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4413": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "SUB",
      "path": "0"
    },
    "4414": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4415": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4417": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4418": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "GAS",
      "path": "0"
    },
    "4419": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "CALL",
      "path": "0"
    },
    "4420": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4421": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4422": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4423": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1154"
    },
    "4426": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4427": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4428": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4430": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4431": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4432": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4433": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4435": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4436": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4437": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "POP",
      "path": "0"
    },
    "4438": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "POP",
      "path": "0"
    },
    "4439": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "POP",
      "path": "0"
    },
    "4440": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "POP",
      "path": "0"
    },
    "4441": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4443": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4444": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4445": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4447": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "NOT",
      "path": "0"
    },
    "4448": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4450": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4451": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "ADD",
      "path": "0"
    },
    "4452": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "AND",
      "path": "0"
    },
    "4453": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4454": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "ADD",
      "path": "0"
    },
    "4455": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4456": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4458": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4459": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "POP",
      "path": "0"
    },
    "4460": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4461": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "ADD",
      "path": "0"
    },
    "4462": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4463": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1178"
    },
    "4466": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4467": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4468": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8D"
    },
    "4471": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9122,
        9188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4472": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4473": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9122,
        9188
      ],
      "op": "POP",
      "path": "0"
    },
    "4474": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9202,
        9220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4476": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9288
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4477": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9289,
        9290
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4478": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4479": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4480": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4481": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "LT",
      "path": "0"
    },
    "4482": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118D"
    },
    "4485": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4486": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118D"
    },
    "4489": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "4492": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9281,
        9291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4493": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4494": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4496": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "MUL",
      "path": "0"
    },
    "4497": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4499": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "ADD",
      "path": "0"
    },
    "4500": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "ADD",
      "path": "0"
    },
    "4501": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9281,
        9291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4508": {
      "op": "SHL"
    },
    "4509": {
      "op": "SUB"
    },
    "4510": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9301
      ],
      "op": "AND",
      "path": "0"
    },
    "4511": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9301
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "4516": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4518": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4519": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4520": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4525": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "AND",
      "path": "0"
    },
    "4526": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4528": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "SHL",
      "path": "0"
    },
    "4529": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4530": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4531": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4533": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "ADD",
      "path": "0"
    },
    "4534": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4536": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4538": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4539": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4540": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4541": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "SUB",
      "path": "0"
    },
    "4542": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4543": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4544": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "GAS",
      "path": "0"
    },
    "4545": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4546": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4547": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4548": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4549": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D2"
    },
    "4552": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4553": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4554": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4556": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4557": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4558": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4559": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4561": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4562": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4563": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "POP",
      "path": "0"
    },
    "4564": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "POP",
      "path": "0"
    },
    "4565": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "POP",
      "path": "0"
    },
    "4566": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "POP",
      "path": "0"
    },
    "4567": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4569": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4570": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4571": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4573": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "NOT",
      "path": "0"
    },
    "4574": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4576": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4577": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "ADD",
      "path": "0"
    },
    "4578": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "AND",
      "path": "0"
    },
    "4579": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4580": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "ADD",
      "path": "0"
    },
    "4581": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4582": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4584": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4585": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "POP",
      "path": "0"
    },
    "4586": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4587": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "ADD",
      "path": "0"
    },
    "4588": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4589": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F6"
    },
    "4592": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4593": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4594": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC5"
    },
    "4597": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9275,
        9303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4598": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9275,
        9303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4599": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9269,
        9303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1201"
    },
    "4602": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9269,
        9303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4603": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9269,
        9271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4605": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9269,
        9303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC6"
    },
    "4608": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9269,
        9303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4609": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9269,
        9303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4610": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1214"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4619": {
      "op": "SHL"
    },
    "4620": {
      "op": "SUB"
    },
    "4621": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9238
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4622": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9238
      ],
      "op": "AND",
      "path": "0"
    },
    "4623": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9230
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4624": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "4627": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9224,
        9238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4628": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4629": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1226"
    },
    "4632": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4633": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9241,
        9249
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "4642": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "4645": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9224,
        9249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4646": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9224,
        9249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4647": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9223,
        9303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1230"
    },
    "4650": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9223,
        9303
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4651": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9223,
        9303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4652": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9223,
        9303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "4655": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9223,
        9303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4656": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9223,
        9303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4657": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9202,
        9303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4658": {
      "op": "POP"
    },
    "4659": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9317,
        9343
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x123C"
    },
    "4662": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9202,
        9303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4663": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9317,
        9343
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4664": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9317,
        9343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "4667": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9317,
        9343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4668": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9317,
        9343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4669": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9317,
        9343
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "4670": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9317,
        9343
      ],
      "op": "POP",
      "path": "0"
    },
    "4671": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9357,
        9387
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x1248"
    },
    "4674": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9363,
        9374
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4675": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9376,
        9386
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4676": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9357,
        9362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2431"
    },
    "4679": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9357,
        9387
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4680": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9357,
        9387
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4681": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8915,
        9398
      ],
      "op": "POP",
      "path": "0"
    },
    "4682": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8915,
        9398
      ],
      "op": "POP",
      "path": "0"
    },
    "4683": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8915,
        9398
      ],
      "op": "POP",
      "path": "0"
    },
    "4684": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8915,
        9398
      ],
      "op": "POP",
      "path": "0"
    },
    "4685": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 29
    },
    "4686": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4687": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1257"
    },
    "4690": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4691": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED5"
    },
    "4694": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        8910,
        8913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4695": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4696": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4697": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "POP",
      "path": "0"
    },
    "4698": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8910,
        8913
      ],
      "op": "POP",
      "path": "0"
    },
    "4699": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8874,
        9398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1064"
    },
    "4702": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8874,
        9398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4703": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8874,
        9398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9421
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0xC"
    },
    "4707": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4708": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4709": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4716": {
      "op": "SHL"
    },
    "4717": {
      "op": "NOT"
    },
    "4718": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "AND",
      "path": "0"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4723": {
      "op": "SHL"
    },
    "4724": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9447,
        9462
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4725": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4730": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4731": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4732": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "AND",
      "path": "0"
    },
    "4733": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4734": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "MUL",
      "path": "0"
    },
    "4735": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4736": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4737": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4738": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "OR",
      "path": "0"
    },
    "4739": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4740": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4741": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4742": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9407,
        9463
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4743": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9543
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0x129D"
    },
    "4746": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9543
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4751": {
      "op": "SHL"
    },
    "4752": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9523,
        9543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4753": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9523,
        9543
      ],
      "op": "DIV",
      "path": "0"
    },
    "4754": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9523,
        9543
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4755": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9523,
        9543
      ],
      "op": "AND",
      "path": "0"
    },
    "4756": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9523,
        9543
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4757": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9520
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4758": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9520
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4759": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9520
      ],
      "op": "DIV",
      "path": "0"
    },
    "4760": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9520
      ],
      "op": "AND",
      "path": "0"
    },
    "4761": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBA"
    },
    "4764": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        9490,
        9543
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4765": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9490,
        9543
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4766": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9473,
        9543
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4771": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9473,
        9543
      ],
      "op": "AND",
      "path": "0"
    },
    "4772": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9473,
        9487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "4774": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9473,
        9543
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4775": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9553,
        9564
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0xB"
    },
    "4777": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9553,
        9579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4778": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9553,
        9579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4779": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9553,
        9579
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4780": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x40"
    },
    "4782": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4783": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9616,
        9631
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4784": {
      "op": "DUP2"
    },
    "4785": {
      "op": "MSTORE"
    },
    "4786": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x83AAEE11563F280EAC61EBD060F088CE7577D5E823EFA6C78DE1CFEC8167605D"
    },
    "4819": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4822": {
      "op": "ADD"
    },
    "4823": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4825": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4826": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4827": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4828": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "SUB",
      "path": "0"
    },
    "4829": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4830": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        9594,
        9632
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4831": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8675,
        9639
      ],
      "op": "POP",
      "path": "0"
    },
    "4832": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8675,
        9639
      ],
      "op": "POP",
      "path": "0"
    },
    "4833": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        8675,
        9639
      ],
      "op": "POP",
      "path": "0"
    },
    "4834": {
      "fn": "BuidlCollective.startCollective",
      "jump": "o",
      "offset": [
        8629,
        9639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4835": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7895,
        8030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4836": {
      "offset": [
        5088,
        5093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4838": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5088,
        5093
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4839": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5088,
        5093
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "4843": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5088,
        5093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4844": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5088,
        5093
      ],
      "op": "DIV",
      "path": "0"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4851": {
      "op": "SHL"
    },
    "4852": {
      "op": "SUB"
    },
    "4853": {
      "offset": [
        5088,
        5093
      ],
      "op": "AND",
      "path": "0"
    },
    "4854": {
      "offset": [
        5074,
        5084
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4855": {
      "offset": [
        5074,
        5093
      ],
      "op": "EQ",
      "path": "0"
    },
    "4856": {
      "offset": [
        5066,
        5094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1300"
    },
    "4859": {
      "offset": [
        5066,
        5094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4860": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5066,
        5094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4862": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5066,
        5094
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4863": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5066,
        5094
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4864": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        5066,
        5094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4865": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7969,
        7986
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x6"
    },
    "4867": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7969,
        7986
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4868": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7969,
        7986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4870": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7969,
        7986
      ],
      "op": "AND",
      "path": "0"
    },
    "4871": {
      "branch": 105,
      "fn": "BuidlCollective.cancel",
      "offset": [
        7969,
        7995
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4872": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7961,
        7996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1310"
    },
    "4875": {
      "branch": 105,
      "fn": "BuidlCollective.cancel",
      "offset": [
        7961,
        7996
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4876": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7961,
        7996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4878": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7961,
        7996
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4879": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7961,
        7996
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4880": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        7961,
        7996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4881": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        8019,
        8022
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 35
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4888": {
      "op": "SHL"
    },
    "4889": {
      "op": "SUB"
    },
    "4890": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        8006,
        8023
      ],
      "op": "AND",
      "path": "0"
    },
    "4891": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        8006,
        8023
      ],
      "op": "SELFDESTRUCT",
      "path": "0"
    },
    "4892": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19427,
        19567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4893": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19479,
        19492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4895": {
      "offset": [
        5293,
        5307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "4897": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5293,
        5307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4898": {
      "offset": [
        5275,
        5290
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4899": {
      "offset": [
        5275,
        5307
      ],
      "op": "GT",
      "path": "0"
    },
    "4900": {
      "offset": [
        5271,
        5540
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4901": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5271,
        5540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138A"
    },
    "4904": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4905": {
      "offset": [
        5425,
        5436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "4907": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5425,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4908": {
      "offset": [
        5390,
        5404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "4910": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5390,
        5404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4911": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1338"
    },
    "4914": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5372,
        5404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4915": {
      "offset": [
        5372,
        5387
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4916": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "4919": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4920": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4921": {
      "offset": [
        5352,
        5363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "4923": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5352,
        5363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4924": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1348"
    },
    "4927": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5352,
        5368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4928": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "4931": {
      "fn": "BuidlCollective.claim",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4932": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "4935": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4936": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4937": {
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1352"
    },
    "4940": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4941": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4942": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "4945": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4946": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4947": {
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135C"
    },
    "4950": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4951": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4952": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "4955": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4956": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4957": {
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "4959": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4961": {
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4962": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4963": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4964": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "4967": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4968": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4969": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "4972": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4973": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4974": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4975": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4976": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5323,
        5436
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4977": {
      "op": "POP"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "offset": [
        5467,
        5482
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4980": {
      "offset": [
        5450,
        5464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "4982": {
      "offset": [
        5450,
        5482
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4983": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19504,
        19517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4985": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19520,
        19538
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1381"
    },
    "4988": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19527,
        19537
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4989": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19520,
        19526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2109"
    },
    "4992": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        19520,
        19538
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4993": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19520,
        19538
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4994": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19504,
        19538
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "offset": [
        5271,
        5540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1399"
    },
    "4999": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5271,
        5540
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5000": {
      "op": "POP"
    },
    "5001": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5002": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5003": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19504,
        19517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5005": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19520,
        19538
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1395"
    },
    "5008": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19527,
        19537
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5009": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19520,
        19526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2109"
    },
    "5012": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        19520,
        19538
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5013": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19520,
        19538
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5014": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19504,
        19538
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "offset": [
        5528,
        5529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5018": {
      "fn": "BuidlCollective.claim",
      "offset": [
        19427,
        19567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5019": {
      "fn": "BuidlCollective.claim",
      "jump": "o",
      "offset": [
        19427,
        19567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5020": {
      "offset": [
        4265,
        4288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5021": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "5023": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5024": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5025": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5026": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5027": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "LT",
      "path": "0"
    },
    "5028": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AC"
    },
    "5031": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5032": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5034": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5035": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5036": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5037": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5039": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5040": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5041": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5042": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5044": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5045": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5046": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5047": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "ADD",
      "path": "0"
    },
    "5048": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5055": {
      "op": "SHL"
    },
    "5056": {
      "op": "SUB"
    },
    "5057": {
      "offset": [
        4265,
        4288
      ],
      "op": "AND",
      "path": "0"
    },
    "5058": {
      "fn": "BuidlCollective.claim",
      "offset": [
        4265,
        4288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5059": {
      "op": "POP"
    },
    "5060": {
      "offset": [
        4265,
        4288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5061": {
      "fn": "BuidlCollective.claim",
      "jump": "o",
      "offset": [
        4265,
        4288
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5062": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5063": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6860
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x6"
    },
    "5065": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5066": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5069": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5070": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6860
      ],
      "op": "DIV",
      "path": "0"
    },
    "5071": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5073": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6860
      ],
      "op": "AND",
      "path": "0"
    },
    "5074": {
      "branch": 106,
      "fn": "BuidlCollective.initialize",
      "offset": [
        6839,
        6869
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5075": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6831,
        6870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DB"
    },
    "5078": {
      "branch": 106,
      "fn": "BuidlCollective.initialize",
      "offset": [
        6831,
        6870
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5079": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6831,
        6870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5081": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6831,
        6870
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5082": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6831,
        6870
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5083": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6831,
        6870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5084": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6880,
        6901
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x6"
    },
    "5086": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6880,
        6908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5087": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6880,
        6908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5088": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 38,
      "value": "0x10000"
    },
    "5092": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6926,
        6936
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5093": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "MUL",
      "path": "0"
    },
    "5094": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5101": {
      "op": "SHL"
    },
    "5102": {
      "op": "SUB"
    },
    "5103": {
      "op": "NOT"
    },
    "5104": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5105": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5106": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "AND",
      "path": "0"
    },
    "5107": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "OR",
      "path": "0"
    },
    "5108": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6880,
        6908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5111": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "OR",
      "path": "0"
    },
    "5112": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5113": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6918,
        6936
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5114": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 39
    },
    "5115": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5116": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5118": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5119": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5120": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5122": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5123": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "ADD",
      "path": "0"
    },
    "5124": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5125": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5127": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5128": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "ADD",
      "path": "0"
    },
    "5129": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5130": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5135": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5136": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5137": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "AND",
      "path": "0"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5142": {
      "op": "SHL"
    },
    "5143": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "MUL",
      "path": "0"
    },
    "5144": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5151": {
      "op": "SHL"
    },
    "5152": {
      "op": "NOT"
    },
    "5153": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 40
    },
    "5154": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5155": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "AND",
      "path": "0"
    },
    "5156": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5157": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5158": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "AND",
      "path": "0"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5163": {
      "op": "SHL"
    },
    "5164": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "MUL",
      "path": "0"
    },
    "5165": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5174": {
      "op": "NOT"
    },
    "5175": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5176": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5177": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "AND",
      "path": "0"
    },
    "5178": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5179": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5180": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "5181": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "AND",
      "path": "0"
    },
    "5182": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "OR",
      "path": "0"
    },
    "5183": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5184": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5185": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5186": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "OR",
      "path": "0"
    },
    "5187": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5188": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5189": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5190": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6946,
        6978
      ],
      "op": "AND",
      "path": "0"
    },
    "5191": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5192": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5193": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5194": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "OR",
      "path": "0"
    },
    "5195": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5196": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6988,
        7022
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5197": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7054,
        7068
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5198": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7054,
        7068
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5199": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6880,
        6908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5201": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7078,
        7442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5202": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7102,
        7113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5203": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7098,
        7099
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5204": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7098,
        7113
      ],
      "op": "LT",
      "path": "0"
    },
    "5205": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7078,
        7442
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5206": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7078,
        7442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AD"
    },
    "5209": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7078,
        7442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5210": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7151
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0xA"
    },
    "5212": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5214": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7159
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5215": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7160,
        7161
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5216": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5217": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5218": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5219": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "LT",
      "path": "0"
    },
    "5220": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146F"
    },
    "5223": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5224": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146F"
    },
    "5227": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "5230": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7152,
        7162
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5231": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5232": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5234": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5235": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5236": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "MUL",
      "path": "0"
    },
    "5237": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5238": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5239": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5240": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "ADD",
      "path": "0"
    },
    "5241": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5242": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "ADD",
      "path": "0"
    },
    "5243": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7152,
        7162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5250": {
      "op": "SHL"
    },
    "5251": {
      "op": "SUB"
    },
    "5252": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "AND",
      "path": "0"
    },
    "5253": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5254": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5255": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5256": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "ADD",
      "path": "0"
    },
    "5257": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5258": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5259": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5260": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5261": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5263": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "ADD",
      "path": "0"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5266": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7163
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5267": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5269": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7169
      ],
      "op": "ADD",
      "path": "0"
    },
    "5270": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7169
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5277": {
      "op": "SHL"
    },
    "5278": {
      "op": "SUB"
    },
    "5279": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7169
      ],
      "op": "AND",
      "path": "0"
    },
    "5280": {
      "branch": 107,
      "fn": "BuidlCollective.initialize",
      "offset": [
        7142,
        7174
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5281": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F6"
    },
    "5284": {
      "branch": 107,
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5285": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5287": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5294": {
      "op": "SHL"
    },
    "5295": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5296": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5299": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5301": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5302": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5303": {
      "op": "MSTORE"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5308": {
      "op": "DUP3"
    },
    "5309": {
      "op": "ADD"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH32",
      "value": "0x544F4B454E204144445245535320414C524541445920494E495449414C495A45"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5346": {
      "op": "DUP3"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "MSTORE"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "5353": {
      "op": "SHL"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5356": {
      "op": "DUP3"
    },
    "5357": {
      "op": "ADD"
    },
    "5358": {
      "op": "MSTORE"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5361": {
      "op": "ADD"
    },
    "5362": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5E"
    },
    "5365": {
      "op": "JUMP"
    },
    "5366": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7134,
        7212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5367": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x7"
    },
    "5369": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7271
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5370": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7272,
        7273
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5371": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5372": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5373": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5374": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "LT",
      "path": "0"
    },
    "5375": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x150A"
    },
    "5378": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5379": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x150A"
    },
    "5382": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "5385": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7251,
        7274
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5386": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5387": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5389": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5390": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5391": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "MUL",
      "path": "0"
    },
    "5392": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5393": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5394": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5395": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "ADD",
      "path": "0"
    },
    "5396": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5397": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "ADD",
      "path": "0"
    },
    "5398": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7251,
        7274
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5399": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5400": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5401": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5403": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5404": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "ADD",
      "path": "0"
    },
    "5405": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5406": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5409": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5410": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5411": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5412": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5413": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5414": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5415": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5416": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5417": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5418": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153C"
    },
    "5421": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5422": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5423": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5424": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5425": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "ADD",
      "path": "0"
    },
    "5426": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5427": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5428": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5429": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5430": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "ADD",
      "path": "0"
    },
    "5431": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5432": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25AC"
    },
    "5435": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7226,
        7275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5436": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5437": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7226,
        7275
      ],
      "op": "POP",
      "path": "0"
    },
    "5438": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7289,
        7307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5440": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5442": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5443": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5444": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "5446": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "ADD",
      "path": "0"
    },
    "5447": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5449": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5450": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5451": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7328
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5452": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7329,
        7330
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5453": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5454": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5455": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5456": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "LT",
      "path": "0"
    },
    "5457": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155C"
    },
    "5460": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5461": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155C"
    },
    "5464": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "5467": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7320,
        7331
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5468": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5469": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5471": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "MUL",
      "path": "0"
    },
    "5472": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5474": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "ADD",
      "path": "0"
    },
    "5475": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "ADD",
      "path": "0"
    },
    "5476": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7320,
        7331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5477": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5478": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5479": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5481": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "ADD",
      "path": "0"
    },
    "5482": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7340
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5483": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7341,
        7342
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5484": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5485": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5486": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5487": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "LT",
      "path": "0"
    },
    "5488": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157B"
    },
    "5491": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5492": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157B"
    },
    "5495": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "5498": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7333,
        7343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5499": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5500": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5502": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "MUL",
      "path": "0"
    },
    "5503": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5505": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "ADD",
      "path": "0"
    },
    "5506": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "ADD",
      "path": "0"
    },
    "5507": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7333,
        7343
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5514": {
      "op": "SHL"
    },
    "5515": {
      "op": "SUB"
    },
    "5516": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "AND",
      "path": "0"
    },
    "5517": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5518": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5519": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5521": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "ADD",
      "path": "0"
    },
    "5522": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7351
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5523": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7352,
        7353
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5524": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5525": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5526": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5527": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "LT",
      "path": "0"
    },
    "5528": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A3"
    },
    "5531": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5532": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A3"
    },
    "5535": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "5538": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7345,
        7354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5539": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5540": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5542": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "MUL",
      "path": "0"
    },
    "5543": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5545": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "ADD",
      "path": "0"
    },
    "5546": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "ADD",
      "path": "0"
    },
    "5547": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7345,
        7354
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5554": {
      "op": "SHL"
    },
    "5555": {
      "op": "SUB"
    },
    "5556": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "AND",
      "path": "0"
    },
    "5557": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5558": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5559": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7310,
        7355
      ],
      "op": "POP",
      "path": "0"
    },
    "5560": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7289,
        7355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5561": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7289,
        7355
      ],
      "op": "POP",
      "path": "0"
    },
    "5562": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7393,
        7394
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 43
    },
    "5563": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5565": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5567": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7386
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5568": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7387,
        7388
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5569": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5570": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5571": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5572": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "LT",
      "path": "0"
    },
    "5573": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D0"
    },
    "5576": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5577": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D0"
    },
    "5580": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "5583": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7379,
        7389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5584": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5585": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5587": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5588": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5589": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "MUL",
      "path": "0"
    },
    "5590": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5591": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5592": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5593": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "ADD",
      "path": "0"
    },
    "5594": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5595": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "ADD",
      "path": "0"
    },
    "5596": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7379,
        7389
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5603": {
      "op": "SHL"
    },
    "5604": {
      "op": "SUB"
    },
    "5605": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5606": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5607": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "AND",
      "path": "0"
    },
    "5608": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5609": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5610": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5611": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5612": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "ADD",
      "path": "0"
    },
    "5613": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5614": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5615": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5616": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5617": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5619": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5620": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5621": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "ADD",
      "path": "0"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5624": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7390
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5625": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5626": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5627": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5628": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5629": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5630": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5631": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "ADD",
      "path": "0"
    },
    "5632": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5633": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5635": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5636": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "ADD",
      "path": "0"
    },
    "5637": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5638": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5639": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5656": {
      "op": "NOT"
    },
    "5657": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "AND",
      "path": "0"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5664": {
      "op": "SHL"
    },
    "5665": {
      "op": "SUB"
    },
    "5666": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5667": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5668": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "AND",
      "path": "0"
    },
    "5669": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5670": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5671": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5672": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "OR",
      "path": "0"
    },
    "5673": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5674": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5675": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5676": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "ADD",
      "path": "0"
    },
    "5677": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5678": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5680": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5681": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5682": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "ADD",
      "path": "0"
    },
    "5683": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5684": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5691": {
      "op": "SHL"
    },
    "5692": {
      "op": "SUB"
    },
    "5693": {
      "op": "NOT"
    },
    "5694": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "AND",
      "path": "0"
    },
    "5695": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5696": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5697": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5698": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "AND",
      "path": "0"
    },
    "5699": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5700": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5701": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5702": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "OR",
      "path": "0"
    },
    "5703": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5704": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7369,
        7394
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5705": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 44
    },
    "5706": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5707": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "5709": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5710": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5711": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5712": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7428,
        7429
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5713": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7428,
        7429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5714": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5715": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "LT",
      "path": "0"
    },
    "5716": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x165F"
    },
    "5719": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5720": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x165F"
    },
    "5723": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "5726": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7420,
        7430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5727": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5728": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5730": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5731": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5732": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "MUL",
      "path": "0"
    },
    "5733": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5734": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5735": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5736": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "ADD",
      "path": "0"
    },
    "5737": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5738": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "ADD",
      "path": "0"
    },
    "5739": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7420,
        7430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5740": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5741": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5742": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5744": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5745": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "ADD",
      "path": "0"
    },
    "5746": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5747": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5750": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5751": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5752": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5753": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5754": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5755": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5756": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5757": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "ADD",
      "path": "0"
    },
    "5758": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5759": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5766": {
      "op": "SHL"
    },
    "5767": {
      "op": "SUB"
    },
    "5768": {
      "op": "NOT"
    },
    "5769": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "AND",
      "path": "0"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5776": {
      "op": "SHL"
    },
    "5777": {
      "op": "SUB"
    },
    "5778": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5779": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5780": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "AND",
      "path": "0"
    },
    "5781": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5782": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5783": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5784": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "OR",
      "path": "0"
    },
    "5785": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5786": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7408,
        7431
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5787": {
      "op": "POP"
    },
    "5788": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 45
    },
    "5789": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A5"
    },
    "5792": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5793": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED5"
    },
    "5796": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7115,
        7118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5797": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5798": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5799": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "POP",
      "path": "0"
    },
    "5800": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7115,
        7118
      ],
      "op": "POP",
      "path": "0"
    },
    "5801": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7078,
        7442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1451"
    },
    "5804": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7078,
        7442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5805": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7078,
        7442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5806": {
      "op": "POP"
    },
    "5807": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7464,
        7470
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x9"
    },
    "5809": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7464,
        7477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5810": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7451,
        7461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "5812": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7451,
        7477
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5813": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7665
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0xC"
    },
    "5815": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7671
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5816": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5818": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5819": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x489170CFE0F7FCDD8410D20D8A81DF8F038624BBCD9814CCA42D477E9D1BB469"
    },
    "5852": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5853": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1701"
    },
    "5856": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5857": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7533,
        7553
      ],
      "op": "DUP11",
      "path": "0"
    },
    "5858": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7533,
        7553
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5859": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7567,
        7574
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5860": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7567,
        7574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5861": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7588,
        7595
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5862": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7588,
        7595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5863": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7609,
        7615
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5864": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7609,
        7615
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5865": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7629,
        7637
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5866": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7629,
        7637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5867": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7671
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5876": {
      "op": "SHL"
    },
    "5877": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7671
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5878": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7671
      ],
      "op": "DIV",
      "path": "0"
    },
    "5879": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7671
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5880": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7671
      ],
      "op": "AND",
      "path": "0"
    },
    "5881": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7651,
        7671
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5882": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7685,
        7711
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5883": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7685,
        7711
      ],
      "op": "AND",
      "path": "0"
    },
    "5884": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7685,
        7711
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5885": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F62"
    },
    "5888": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        7492,
        7721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5889": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5890": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5892": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5893": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5894": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5895": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "SUB",
      "path": "0"
    },
    "5896": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5897": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        7492,
        7721
      ],
      "op": "LOG1",
      "path": "0"
    },
    "5898": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6821,
        7728
      ],
      "op": "POP",
      "path": "0"
    },
    "5899": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "POP",
      "path": "0"
    },
    "5900": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "POP",
      "path": "0"
    },
    "5901": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "POP",
      "path": "0"
    },
    "5902": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "POP",
      "path": "0"
    },
    "5903": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "POP",
      "path": "0"
    },
    "5904": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        6561,
        7728
      ],
      "op": "POP",
      "path": "0"
    },
    "5905": {
      "fn": "BuidlCollective.initialize",
      "jump": "o",
      "offset": [
        6561,
        7728
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5906": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13892,
        14433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5907": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13980,
        13994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5909": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13980,
        14010
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5910": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13942,
        13949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5912": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13942,
        13949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5917": {
      "op": "SHL"
    },
    "5918": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13980,
        14010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5919": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13980,
        14010
      ],
      "op": "DIV",
      "path": "0"
    },
    "5920": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13980,
        14010
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5925": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13980,
        14010
      ],
      "op": "AND",
      "path": "0"
    },
    "5926": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13980,
        14010
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5927": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14020,
        14048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1732"
    },
    "5930": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14020,
        14048
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5931": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14047,
        14048
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x0"
    },
    "5933": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14040,
        14048
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5934": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14040,
        14048
      ],
      "op": "POP",
      "path": "0"
    },
    "5935": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14040,
        14048
      ],
      "op": "POP",
      "path": "0"
    },
    "5936": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13892,
        14433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5937": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        13892,
        14433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5938": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14020,
        14048
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5939": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14079,
        14093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5941": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14079,
        14105
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5942": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5947": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14079,
        14105
      ],
      "op": "AND",
      "path": "0"
    },
    "5948": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14058,
        14076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5950": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14135,
        14170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1747"
    },
    "5953": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14161,
        14170
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5954": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14142,
        14157
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5955": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14135,
        14170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3030"
    },
    "5958": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        14135,
        14170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5959": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14135,
        14170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5960": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14199,
        14213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5962": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14199,
        14219
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5963": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14115,
        14170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5964": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14115,
        14170
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5965": {
      "op": "POP"
    },
    "5966": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5971": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5972": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5973": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "AND",
      "path": "0"
    },
    "5974": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5975": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14185,
        14219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1769"
    },
    "5978": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14185,
        14219
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14199,
        14219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5985": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14199,
        14219
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5986": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14199,
        14219
      ],
      "op": "DIV",
      "path": "0"
    },
    "5987": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14199,
        14219
      ],
      "op": "AND",
      "path": "0"
    },
    "5988": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14185,
        14196
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5989": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14185,
        14219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CBA"
    },
    "5992": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        14185,
        14219
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5993": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14185,
        14219
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5994": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5999": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "AND",
      "path": "0"
    },
    "6000": {
      "branch": 108,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14184,
        14234
      ],
      "op": "GT",
      "path": "0"
    },
    "6001": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14180,
        14263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1790"
    },
    "6004": {
      "branch": 108,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14180,
        14263
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6005": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14243,
        14263
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x1788"
    },
    "6008": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "6017": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "6020": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14243,
        14263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "6023": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        14243,
        14263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6024": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14243,
        14263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6025": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14236,
        14263
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6026": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14236,
        14263
      ],
      "op": "POP",
      "path": "0"
    },
    "6027": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14236,
        14263
      ],
      "op": "POP",
      "path": "0"
    },
    "6028": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14236,
        14263
      ],
      "op": "POP",
      "path": "0"
    },
    "6029": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14236,
        14263
      ],
      "op": "POP",
      "path": "0"
    },
    "6030": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13892,
        14433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6031": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        13892,
        14433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6032": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14180,
        14263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6033": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "6035": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14311
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6036": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14311
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6045": {
      "op": "SHL"
    },
    "6046": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6047": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14311
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6048": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14311
      ],
      "op": "DIV",
      "path": "0"
    },
    "6049": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14311
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6050": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14291,
        14311
      ],
      "op": "AND",
      "path": "0"
    },
    "6051": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14277,
        14311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6052": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14277,
        14311
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6053": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14277,
        14311
      ],
      "op": "AND",
      "path": "0"
    },
    "6054": {
      "branch": 109,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14277,
        14311
      ],
      "op": "GT",
      "path": "0"
    },
    "6055": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14273,
        14321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B4"
    },
    "6058": {
      "branch": 109,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14273,
        14321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6059": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14320,
        14321
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x0"
    },
    "6061": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14313,
        14321
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6062": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14313,
        14321
      ],
      "op": "POP",
      "path": "0"
    },
    "6063": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14313,
        14321
      ],
      "op": "POP",
      "path": "0"
    },
    "6064": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14313,
        14321
      ],
      "op": "POP",
      "path": "0"
    },
    "6065": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14313,
        14321
      ],
      "op": "POP",
      "path": "0"
    },
    "6066": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        13892,
        14433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6067": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        13892,
        14433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6068": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14273,
        14321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6069": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14377,
        14391
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0xC"
    },
    "6071": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14377,
        14397
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6072": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14406,
        14426
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6077": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14406,
        14426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6078": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14406,
        14426
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6079": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14406,
        14426
      ],
      "op": "AND",
      "path": "0"
    },
    "6080": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14406,
        14426
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6081": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "6084": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6085": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14364,
        14397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D6"
    },
    "6088": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14364,
        14397
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6093": {
      "op": "SHL"
    },
    "6094": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14377,
        14397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6095": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14377,
        14397
      ],
      "op": "DIV",
      "path": "0"
    },
    "6096": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14377,
        14397
      ],
      "op": "AND",
      "path": "0"
    },
    "6097": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14364,
        14374
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6098": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14364,
        14397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3030"
    },
    "6101": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        14364,
        14397
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6102": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14364,
        14397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6103": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17EE"
    },
    "6106": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6107": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14356,
        14398
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6112": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14356,
        14398
      ],
      "op": "AND",
      "path": "0"
    },
    "6113": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "6122": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "6125": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        14338,
        14398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6126": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6127": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F8"
    },
    "6130": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14403
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6131": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14403
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6132": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "6135": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        14338,
        14403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6136": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6137": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1788"
    },
    "6140": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14426
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6141": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6142": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        14338,
        14426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "6145": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        14338,
        14426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6146": {
      "offset": [
        1087,
        1107
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6147": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6149": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6150": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6151": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9EA"
    },
    "6154": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6155": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D52"
    },
    "6158": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        1087,
        1107
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6159": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6160": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10474,
        10480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "6162": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10474,
        10487
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6163": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10412,
        10425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "6165": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10412,
        10425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6166": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10437,
        10460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6168": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10437,
        10460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6169": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6178": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6179": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "GT",
      "path": "0"
    },
    "6180": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6181": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1830"
    },
    "6184": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6185": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1830"
    },
    "6188": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275D"
    },
    "6191": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10463,
        10488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6192": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6193": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6195": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6196": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6197": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6198": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6199": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6200": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6201": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6203": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "MUL",
      "path": "0"
    },
    "6204": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6206": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "ADD",
      "path": "0"
    },
    "6207": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6208": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "ADD",
      "path": "0"
    },
    "6209": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6211": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6212": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6213": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6214": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1859"
    },
    "6217": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6218": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6219": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6221": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "ADD",
      "path": "0"
    },
    "6222": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6224": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6225": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "MUL",
      "path": "0"
    },
    "6226": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6227": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "6228": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6229": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "6230": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "ADD",
      "path": "0"
    },
    "6231": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6232": {
      "op": "POP"
    },
    "6233": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6234": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10463,
        10488
      ],
      "op": "POP",
      "path": "0"
    },
    "6235": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10437,
        10488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6236": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10437,
        10488
      ],
      "op": "POP",
      "path": "0"
    },
    "6237": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10498,
        10517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6239": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10527,
        10544
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6240": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10559,
        10568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6242": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10554,
        10908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6243": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10574,
        10580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "6245": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10574,
        10587
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6246": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10570,
        10587
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6247": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10570,
        10587
      ],
      "op": "LT",
      "path": "0"
    },
    "6248": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10554,
        10908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6249": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10554,
        10908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19EB"
    },
    "6252": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10554,
        10908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6253": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10631
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0xA"
    },
    "6255": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6257": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "6259": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10639,
        10640
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6260": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6261": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6262": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6263": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "LT",
      "path": "0"
    },
    "6264": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1883"
    },
    "6267": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6268": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1883"
    },
    "6271": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "6274": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10632,
        10641
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6275": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6276": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6278": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6279": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6280": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6281": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6283": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6284": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6285": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6286": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6287": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6288": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "ADD",
      "path": "0"
    },
    "6289": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6296": {
      "op": "SHL"
    },
    "6297": {
      "op": "SUB"
    },
    "6298": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6299": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6300": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10632,
        10641
      ],
      "op": "AND",
      "path": "0"
    },
    "6301": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6302": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6303": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6304": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6305": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "ADD",
      "path": "0"
    },
    "6306": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6307": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6308": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6309": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6310": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6312": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6313": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6314": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "ADD",
      "path": "0"
    },
    "6315": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6316": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10642
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6317": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6319": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "ADD",
      "path": "0"
    },
    "6320": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6321": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10685
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0x9"
    },
    "6323": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6324": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6325": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6326": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6327": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6328": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "AND",
      "path": "0"
    },
    "6329": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10622,
        10647
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "6330": {
      "op": "POP"
    },
    "6331": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10686,
        10687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6332": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10686,
        10687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6333": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6334": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "LT",
      "path": "0"
    },
    "6335": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18CA"
    },
    "6338": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6339": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18CA"
    },
    "6342": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "6345": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10679,
        10688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6346": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6347": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6349": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6350": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6351": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6352": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6354": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6355": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6356": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6357": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "ADD",
      "path": "0"
    },
    "6358": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6359": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6361": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6362": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6369": {
      "op": "SHL"
    },
    "6370": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6371": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6378": {
      "op": "SHL"
    },
    "6379": {
      "op": "SUB"
    },
    "6380": {
      "op": "DUP6"
    },
    "6381": {
      "op": "DUP2"
    },
    "6382": {
      "op": "AND"
    },
    "6383": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6385": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6386": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "ADD",
      "path": "0"
    },
    "6387": {
      "op": "MSTORE"
    },
    "6388": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10721,
        10725
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6391": {
      "op": "DUP4"
    },
    "6392": {
      "op": "ADD"
    },
    "6393": {
      "op": "MSTORE"
    },
    "6394": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6395": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6396": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "AND",
      "path": "0"
    },
    "6397": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10679,
        10688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6398": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10699
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "6403": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10699
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6406": {
      "op": "ADD"
    },
    "6407": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6409": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6411": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6412": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6413": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6414": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "SUB",
      "path": "0"
    },
    "6415": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6416": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6417": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "GAS",
      "path": "0"
    },
    "6418": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6419": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6420": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6421": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6422": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1923"
    },
    "6425": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6426": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6427": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6429": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6430": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6431": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6432": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6434": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6435": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6436": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "POP",
      "path": "0"
    },
    "6437": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "POP",
      "path": "0"
    },
    "6438": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "POP",
      "path": "0"
    },
    "6439": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "POP",
      "path": "0"
    },
    "6440": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6442": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6443": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6444": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6446": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "NOT",
      "path": "0"
    },
    "6447": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6449": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6450": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "ADD",
      "path": "0"
    },
    "6451": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "AND",
      "path": "0"
    },
    "6452": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6453": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "ADD",
      "path": "0"
    },
    "6454": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6455": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6457": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6458": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "POP",
      "path": "0"
    },
    "6459": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6460": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "ADD",
      "path": "0"
    },
    "6461": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6462": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1947"
    },
    "6465": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6466": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6467": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3055"
    },
    "6470": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10673,
        10727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6471": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10673,
        10727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6472": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10661,
        10727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6473": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10661,
        10727
      ],
      "op": "POP",
      "path": "0"
    },
    "6474": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6476": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6478": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "6480": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10775,
        10776
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6481": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6482": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6483": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6484": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "LT",
      "path": "0"
    },
    "6485": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1960"
    },
    "6488": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6489": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1960"
    },
    "6492": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "6495": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10768,
        10777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6496": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6497": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6499": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6500": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6501": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6502": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6504": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6505": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6506": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6507": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6508": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6509": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "ADD",
      "path": "0"
    },
    "6510": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6517": {
      "op": "SHL"
    },
    "6518": {
      "op": "SUB"
    },
    "6519": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10768,
        10777
      ],
      "op": "AND",
      "path": "0"
    },
    "6520": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6521": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6522": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6523": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "ADD",
      "path": "0"
    },
    "6524": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6525": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6526": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6527": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6528": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6530": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "ADD",
      "path": "0"
    },
    "6531": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6532": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10778
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6533": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10758,
        10785
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6534": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10745,
        10785
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6535": {
      "branch": 110,
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10745,
        10785
      ],
      "op": "LT",
      "path": "0"
    },
    "6536": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10741,
        10898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B4"
    },
    "6539": {
      "branch": 110,
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10741,
        10898
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6540": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10820,
        10824
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x1"
    },
    "6542": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10814
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6543": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10815,
        10816
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6544": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6545": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6546": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6547": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "LT",
      "path": "0"
    },
    "6548": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199F"
    },
    "6551": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6552": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199F"
    },
    "6555": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "6558": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10805,
        10817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6559": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6560": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6561": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6562": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6563": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6565": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6566": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6567": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "MUL",
      "path": "0"
    },
    "6568": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6569": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6570": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6571": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "ADD",
      "path": "0"
    },
    "6572": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6573": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6574": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10817
      ],
      "op": "ADD",
      "path": "0"
    },
    "6575": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10805,
        10824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6576": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10741,
        10898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D9"
    },
    "6579": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10741,
        10898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6580": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10741,
        10898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6581": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10878,
        10883
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x0"
    },
    "6583": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10872
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6584": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10873,
        10874
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6585": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6586": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6587": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6588": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "LT",
      "path": "0"
    },
    "6589": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C8"
    },
    "6592": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6593": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C8"
    },
    "6596": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "6599": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10863,
        10875
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6600": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6601": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10883
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6602": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10883
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6603": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10883
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6604": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6606": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6607": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6608": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "MUL",
      "path": "0"
    },
    "6609": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6610": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6611": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6612": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "ADD",
      "path": "0"
    },
    "6613": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6614": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6615": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10875
      ],
      "op": "ADD",
      "path": "0"
    },
    "6616": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10863,
        10883
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6617": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10741,
        10898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6618": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 56
    },
    "6619": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E3"
    },
    "6622": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6623": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED5"
    },
    "6626": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        10589,
        10592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6627": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6628": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6629": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "POP",
      "path": "0"
    },
    "6630": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10589,
        10592
      ],
      "op": "POP",
      "path": "0"
    },
    "6631": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10554,
        10908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1862"
    },
    "6634": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10554,
        10908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6635": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10554,
        10908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6636": {
      "op": "POP"
    },
    "6637": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10924,
        10933
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 57
    },
    "6638": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10924,
        10933
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6639": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        10367,
        10940
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6640": {
      "op": "POP"
    },
    "6641": {
      "op": "POP"
    },
    "6642": {
      "op": "POP"
    },
    "6643": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "o",
      "offset": [
        10367,
        10940
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6644": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6645": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11151,
        11167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "6647": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11179,
        11192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6649": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11195,
        11225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A01"
    },
    "6652": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11217,
        11224
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6653": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11195,
        11216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B7"
    },
    "6656": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11195,
        11225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6657": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11195,
        11225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6658": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11280,
        11286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "6660": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11280,
        11293
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6661": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11179,
        11225
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6662": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11179,
        11225
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6663": {
      "op": "POP"
    },
    "6664": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11235,
        11263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6666": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11235,
        11263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6667": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6676": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6677": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "GT",
      "path": "0"
    },
    "6678": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6679": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A22"
    },
    "6682": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6683": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A22"
    },
    "6686": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275D"
    },
    "6689": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11266,
        11294
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6690": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6691": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6693": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6694": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6695": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6696": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6697": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6698": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6699": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6701": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "MUL",
      "path": "0"
    },
    "6702": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6704": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "ADD",
      "path": "0"
    },
    "6705": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6706": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "ADD",
      "path": "0"
    },
    "6707": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6709": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6710": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6711": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6712": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4B"
    },
    "6715": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6716": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6717": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6719": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "ADD",
      "path": "0"
    },
    "6720": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6722": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6723": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "MUL",
      "path": "0"
    },
    "6724": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6725": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "6726": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6727": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "6728": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "ADD",
      "path": "0"
    },
    "6729": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6730": {
      "op": "POP"
    },
    "6731": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6732": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11266,
        11294
      ],
      "op": "POP",
      "path": "0"
    },
    "6733": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11235,
        11294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6734": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11235,
        11294
      ],
      "op": "POP",
      "path": "0"
    },
    "6735": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11309,
        11318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6737": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11304,
        11419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6738": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11328,
        11334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "6740": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11328,
        11341
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6741": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11324,
        11341
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6742": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11324,
        11341
      ],
      "op": "LT",
      "path": "0"
    },
    "6743": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11304,
        11419
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6744": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11304,
        11419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A94"
    },
    "6747": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11304,
        11419
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6748": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11379,
        11408
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 58,
      "value": "0x1A65"
    },
    "6751": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11399,
        11404
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6752": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11406,
        11407
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6753": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11379,
        11398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248B"
    },
    "6756": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11379,
        11408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6757": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11379,
        11408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6758": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11373
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6759": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11374,
        11375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6760": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6761": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6762": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6763": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "LT",
      "path": "0"
    },
    "6764": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A77"
    },
    "6767": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6768": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A77"
    },
    "6771": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "6774": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11362,
        11376
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6775": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6776": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6778": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6779": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6780": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "MUL",
      "path": "0"
    },
    "6781": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6782": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6783": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6784": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "ADD",
      "path": "0"
    },
    "6785": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11376
      ],
      "op": "ADD",
      "path": "0"
    },
    "6786": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11362,
        11408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6787": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 59
    },
    "6788": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8C"
    },
    "6791": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6792": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED5"
    },
    "6795": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        11343,
        11346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6796": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6797": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6798": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "POP",
      "path": "0"
    },
    "6799": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11343,
        11346
      ],
      "op": "POP",
      "path": "0"
    },
    "6800": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11304,
        11419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A51"
    },
    "6803": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11304,
        11419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6804": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11304,
        11419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6805": {
      "op": "POP"
    },
    "6806": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11436,
        11447
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 60
    },
    "6807": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        11091,
        11454
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6808": {
      "op": "POP"
    },
    "6809": {
      "op": "POP"
    },
    "6810": {
      "op": "POP"
    },
    "6811": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "o",
      "offset": [
        11091,
        11454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6812": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15452,
        16728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6813": {
      "offset": [
        5293,
        5307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "6815": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5293,
        5307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6816": {
      "offset": [
        5275,
        5290
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "6817": {
      "offset": [
        5275,
        5307
      ],
      "op": "GT",
      "path": "0"
    },
    "6818": {
      "offset": [
        5271,
        5540
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6819": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5271,
        5540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC0"
    },
    "6822": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6823": {
      "offset": [
        5425,
        5436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6825": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5425,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6826": {
      "offset": [
        5390,
        5404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "6828": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5390,
        5404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6829": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB6"
    },
    "6832": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5372,
        5404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6833": {
      "offset": [
        5372,
        5387
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "6834": {
      "offset": [
        5372,
        5404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "6837": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6838": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5372,
        5404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6839": {
      "offset": [
        5352,
        5363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "6841": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5352,
        5363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6842": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC6"
    },
    "6845": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5352,
        5368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6846": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "6849": {
      "fn": "BuidlCollective.stake",
      "offset": [
        2604,
        2609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6850": {
      "offset": [
        5352,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "6853": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6854": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5352,
        5368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6855": {
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD0"
    },
    "6858": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6859": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5352,
        5405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6860": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5352,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "6863": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6864": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5352,
        5405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6865": {
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ADA"
    },
    "6868": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6869": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5351,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6870": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5351,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "6873": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6874": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5351,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6875": {
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "6877": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6879": {
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6880": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6881": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6882": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AEB"
    },
    "6885": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6886": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6887": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "6890": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6891": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6892": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6893": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6894": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5323,
        5436
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6895": {
      "op": "POP"
    },
    "6896": {
      "op": "POP"
    },
    "6897": {
      "offset": [
        5467,
        5482
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "6898": {
      "offset": [
        5450,
        5464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "6900": {
      "offset": [
        5450,
        5482
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6901": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15539,
        15549
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6902": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15524,
        15536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6904": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 61
    },
    "6905": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6906": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6907": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "6909": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6911": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6912": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6914": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6915": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6916": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6917": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15580,
        15584
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "6918": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15580,
        15584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6919": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15634
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6920": {
      "op": "GT"
    },
    "6921": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15634
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6922": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4F"
    },
    "6925": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6926": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6928": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6935": {
      "op": "SHL"
    },
    "6936": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6937": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6940": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6942": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6943": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "ADD",
      "path": "0"
    },
    "6944": {
      "op": "MSTORE"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6949": {
      "op": "DUP3"
    },
    "6950": {
      "op": "ADD"
    },
    "6951": {
      "op": "MSTORE"
    },
    "6952": {
      "op": "PUSH23",
      "value": "0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "6978": {
      "op": "SHL"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6981": {
      "op": "DUP3"
    },
    "6982": {
      "op": "ADD"
    },
    "6983": {
      "op": "MSTORE"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6986": {
      "op": "ADD"
    },
    "6987": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5E"
    },
    "6990": {
      "op": "JUMP"
    },
    "6991": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6998": {
      "op": "SHL"
    },
    "6999": {
      "op": "SUB"
    },
    "7000": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 62
    },
    "7001": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7002": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "AND",
      "path": "0"
    },
    "7003": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7005": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7006": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7007": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7008": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7010": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7012": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7013": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7015": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7016": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7017": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15822
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7018": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7019": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15837
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7020": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15837
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7021": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7022": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15837
      ],
      "op": "SUB",
      "path": "0"
    },
    "7023": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7024": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15807,
        15837
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7025": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 63
    },
    "7026": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7027": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "AND",
      "path": "0"
    },
    "7028": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7029": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7030": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7031": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7032": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15864
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7033": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15879
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7034": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15879
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7035": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15879
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7036": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15879
      ],
      "op": "ADD",
      "path": "0"
    },
    "7037": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7038": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15851,
        15879
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7039": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15977,
        15988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7041": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15977,
        15988
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7042": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "7051": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15943
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B96"
    },
    "7054": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "7057": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15826,
        15837
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7058": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15943
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "7061": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        15927,
        15943
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7062": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15943
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7063": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA0"
    },
    "7066": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15961
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7067": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15961
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7068": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "7071": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        15927,
        15961
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7072": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15927,
        15961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7073": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15926,
        15988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BAA"
    },
    "7076": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15926,
        15988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7077": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15926,
        15988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7078": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15926,
        15988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "7081": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        15926,
        15988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7082": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15926,
        15988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7083": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16028,
        16036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "7085": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16028,
        16036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7086": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15900,
        15988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7087": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15900,
        15988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7088": {
      "op": "POP"
    },
    "7089": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16076,
        16091
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "7090": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15998,
        16025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7092": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16143,
        16162
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BBB"
    },
    "7095": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16143,
        16160
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1712"
    },
    "7098": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        16143,
        16162
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7099": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16143,
        16162
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7100": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7102": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7103": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7104": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "7106": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7107": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "ADD",
      "path": "0"
    },
    "7108": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7109": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7110": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7111": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7112": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7113": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7115": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7116": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7117": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "ADD",
      "path": "0"
    },
    "7118": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7119": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7120": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7121": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7122": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7123": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "ADD",
      "path": "0"
    },
    "7124": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7125": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7126": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7127": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "7129": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7130": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "ADD",
      "path": "0"
    },
    "7131": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7132": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7133": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7134": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16382,
        16392
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 64
    },
    "7135": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16172,
        16202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7137": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7138": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7139": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7140": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "7142": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7143": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7144": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7145": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7146": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7147": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16393
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7148": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7149": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7150": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7151": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7152": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7153": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7154": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7156": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7157": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "ADD",
      "path": "0"
    },
    "7158": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7159": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7160": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7162": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7163": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "ADD",
      "path": "0"
    },
    "7164": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7165": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7166": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7167": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7169": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7170": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7171": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "ADD",
      "path": "0"
    },
    "7172": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7173": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7174": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7175": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16373,
        16410
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7176": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16431
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0x11"
    },
    "7178": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7179": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7180": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16101,
        16162
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7181": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16101,
        16162
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7182": {
      "op": "POP"
    },
    "7183": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7184": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16205,
        16363
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7185": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16435,
        16446
      ],
      "op": "DUP11",
      "path": "0"
    },
    "7186": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16435,
        16446
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7187": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16172,
        16202
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7188": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1E"
    },
    "7191": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7192": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16435,
        16446
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7193": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16435,
        16446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7194": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3A"
    },
    "7197": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        16420,
        16446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7198": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7199": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7200": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "POP",
      "path": "0"
    },
    "7201": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "POP",
      "path": "0"
    },
    "7202": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7203": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7204": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7205": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16420,
        16446
      ],
      "op": "POP",
      "path": "0"
    },
    "7206": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16476,
        16478
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 66
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7213": {
      "op": "SHL"
    },
    "7214": {
      "op": "SUB"
    },
    "7215": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "AND",
      "path": "0"
    },
    "7216": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16470,
        16474
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7223": {
      "op": "SHL"
    },
    "7224": {
      "op": "SUB"
    },
    "7225": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "AND",
      "path": "0"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7228": {
      "op": "DUP1"
    },
    "7229": {
      "op": "MLOAD"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7232": {
      "op": "PUSH2",
      "value": "0x314F"
    },
    "7235": {
      "op": "DUP4"
    },
    "7236": {
      "op": "CODECOPY"
    },
    "7237": {
      "op": "DUP2"
    },
    "7238": {
      "op": "MLOAD"
    },
    "7239": {
      "op": "SWAP2"
    },
    "7240": {
      "op": "MSTORE"
    },
    "7241": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16480,
        16491
      ],
      "op": "DUP11",
      "path": "0"
    },
    "7242": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7244": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7245": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C58"
    },
    "7248": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7249": {
      "op": "DUP2"
    },
    "7250": {
      "op": "MSTORE"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7253": {
      "op": "ADD"
    },
    "7254": {
      "op": "SWAP1"
    },
    "7255": {
      "op": "JUMP"
    },
    "7256": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7257": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7259": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7260": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7261": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7262": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "SUB",
      "path": "0"
    },
    "7263": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7264": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16461,
        16492
      ],
      "op": "LOG3",
      "path": "0"
    },
    "7265": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 67,
      "value": "0x40"
    },
    "7267": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7268": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7269": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16536,
        16546
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7270": {
      "op": "DUP2"
    },
    "7271": {
      "op": "MSTORE"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7274": {
      "op": "DUP2"
    },
    "7275": {
      "op": "ADD"
    },
    "7276": {
      "op": "DUP11"
    },
    "7277": {
      "op": "SWAP1"
    },
    "7278": {
      "op": "MSTORE"
    },
    "7279": {
      "op": "SWAP1"
    },
    "7280": {
      "op": "DUP2"
    },
    "7281": {
      "op": "ADD"
    },
    "7282": {
      "op": "DUP7"
    },
    "7283": {
      "op": "SWAP1"
    },
    "7284": {
      "op": "MSTORE"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7287": {
      "op": "DUP2"
    },
    "7288": {
      "op": "ADD"
    },
    "7289": {
      "op": "DUP6"
    },
    "7290": {
      "op": "SWAP1"
    },
    "7291": {
      "op": "MSTORE"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7294": {
      "op": "DUP2"
    },
    "7295": {
      "op": "ADD"
    },
    "7296": {
      "op": "DUP5"
    },
    "7297": {
      "op": "SWAP1"
    },
    "7298": {
      "op": "MSTORE"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7301": {
      "op": "DUP2"
    },
    "7302": {
      "op": "ADD"
    },
    "7303": {
      "op": "DUP4"
    },
    "7304": {
      "op": "SWAP1"
    },
    "7305": {
      "op": "MSTORE"
    },
    "7306": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x9DFA08ABAE6C607453D7EF936FD3D42C4AFC359DCFA226A49BE696604A246845"
    },
    "7339": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7342": {
      "op": "ADD"
    },
    "7343": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7345": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7346": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7347": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7348": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "SUB",
      "path": "0"
    },
    "7349": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7350": {
      "fn": "BuidlCollective.stake",
      "offset": [
        16507,
        16721
      ],
      "op": "LOG1",
      "path": "0"
    },
    "7351": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15514,
        16728
      ],
      "op": "POP",
      "path": "0"
    },
    "7352": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15514,
        16728
      ],
      "op": "POP",
      "path": "0"
    },
    "7353": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15514,
        16728
      ],
      "op": "POP",
      "path": "0"
    },
    "7354": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15514,
        16728
      ],
      "op": "POP",
      "path": "0"
    },
    "7355": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15514,
        16728
      ],
      "op": "POP",
      "path": "0"
    },
    "7356": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15514,
        16728
      ],
      "op": "POP",
      "path": "0"
    },
    "7357": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15514,
        16728
      ],
      "op": "POP",
      "path": "0"
    },
    "7358": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        17969,
        18545
      ],
      "op": "POP",
      "path": "0"
    },
    "7359": {
      "fn": "BuidlCollective.unstake",
      "jump": "o",
      "offset": [
        17969,
        18545
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7360": {
      "offset": [
        5271,
        5540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7361": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15539,
        15549
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7362": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15524,
        15536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7364": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7365": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7366": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7367": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7369": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7371": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7372": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7374": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7375": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7376": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15619
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7377": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15580,
        15584
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "7378": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15580,
        15584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7379": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15634
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7380": {
      "op": "GT"
    },
    "7381": {
      "branch": 111,
      "fn": "BuidlCollective.stake",
      "offset": [
        15604,
        15634
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7382": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4F"
    },
    "7385": {
      "branch": 111,
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7386": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7388": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7395": {
      "op": "SHL"
    },
    "7396": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7397": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7400": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7402": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7403": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "ADD",
      "path": "0"
    },
    "7404": {
      "op": "MSTORE"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7409": {
      "op": "DUP3"
    },
    "7410": {
      "op": "ADD"
    },
    "7411": {
      "op": "MSTORE"
    },
    "7412": {
      "op": "PUSH23",
      "value": "0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "7438": {
      "op": "SHL"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7441": {
      "op": "DUP3"
    },
    "7442": {
      "op": "ADD"
    },
    "7443": {
      "op": "MSTORE"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7446": {
      "op": "ADD"
    },
    "7447": {
      "fn": "BuidlCollective.stake",
      "offset": [
        15596,
        15662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5E"
    },
    "7450": {
      "op": "JUMP"
    },
    "7451": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7452": {
      "fn": "ERC20.transfer",
      "offset": [
        3039,
        3049
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 68
    },
    "7453": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7455": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7456": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7457": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7458": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "7460": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7462": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7463": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7465": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7466": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7467": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7468": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7469": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7470": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7471": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7472": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7473": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7474": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D3C"
    },
    "7477": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7478": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7479": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7480": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CE2"
    },
    "7483": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3029,
        3060
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7484": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7485": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7486": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7487": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7488": {
      "op": "POP"
    },
    "7489": {
      "op": "POP"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7496": {
      "op": "SHL"
    },
    "7497": {
      "op": "SUB"
    },
    "7498": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 69
    },
    "7499": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "AND",
      "path": "1"
    },
    "7500": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7502": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7503": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7504": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7505": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3215
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "7507": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7509": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7510": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7512": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7513": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7514": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7515": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7516": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7517": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7518": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7519": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "ADD",
      "path": "1"
    },
    "7520": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7521": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7522": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 70
    },
    "7523": {
      "fn": "ERC20.transfer",
      "offset": [
        3264,
        3274
      ],
      "op": "CALLER",
      "path": "1"
    },
    "7524": {
      "fn": "ERC20.transfer",
      "offset": [
        3264,
        3274
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7527": {
      "op": "DUP1"
    },
    "7528": {
      "op": "MLOAD"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7531": {
      "op": "PUSH2",
      "value": "0x314F"
    },
    "7534": {
      "op": "DUP4"
    },
    "7535": {
      "op": "CODECOPY"
    },
    "7536": {
      "op": "DUP2"
    },
    "7537": {
      "op": "MLOAD"
    },
    "7538": {
      "op": "SWAP2"
    },
    "7539": {
      "op": "MSTORE"
    },
    "7540": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7541": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC6"
    },
    "7544": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7545": {
      "fn": "ERC20.transfer",
      "offset": [
        3223,
        3229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7546": {
      "op": "DUP2"
    },
    "7547": {
      "op": "MSTORE"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7550": {
      "op": "ADD"
    },
    "7551": {
      "op": "SWAP1"
    },
    "7552": {
      "op": "JUMP"
    },
    "7553": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7556": {
      "op": "DUP1"
    },
    "7557": {
      "op": "MLOAD"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7560": {
      "op": "DUP2"
    },
    "7561": {
      "op": "ADD"
    },
    "7562": {
      "op": "DUP3"
    },
    "7563": {
      "op": "MSTORE"
    },
    "7564": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10057,
        10064
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7566": {
      "op": "DUP1"
    },
    "7567": {
      "op": "DUP3"
    },
    "7568": {
      "op": "MSTORE"
    },
    "7569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7571": {
      "op": "DUP3"
    },
    "7572": {
      "op": "ADD"
    },
    "7573": {
      "op": "DUP2"
    },
    "7574": {
      "op": "SWAP1"
    },
    "7575": {
      "op": "MSTORE"
    },
    "7576": {
      "op": "SWAP2"
    },
    "7577": {
      "op": "DUP2"
    },
    "7578": {
      "op": "ADD"
    },
    "7579": {
      "op": "DUP3"
    },
    "7580": {
      "op": "SWAP1"
    },
    "7581": {
      "op": "MSTORE"
    },
    "7582": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10094,
        10111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7584": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "7586": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10121,
        10129
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7587": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7588": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7589": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7590": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "LT",
      "path": "0"
    },
    "7591": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB2"
    },
    "7594": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7595": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB2"
    },
    "7598": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "7601": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        10114,
        10130
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7602": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7603": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7605": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7606": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7607": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7608": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7610": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7611": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7612": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7613": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7614": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7615": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "ADD",
      "path": "0"
    },
    "7616": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7623": {
      "op": "SHL"
    },
    "7624": {
      "op": "SUB"
    },
    "7625": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7626": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7627": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "AND",
      "path": "0"
    },
    "7628": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 71
    },
    "7629": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7630": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7631": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7633": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7634": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7635": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7637": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7638": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7639": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7640": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10159,
        10179
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7641": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7642": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7643": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "7645": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7646": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "ADD",
      "path": "0"
    },
    "7647": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7648": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7649": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7650": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7651": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7652": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7653": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7655": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7656": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "ADD",
      "path": "0"
    },
    "7657": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7664": {
      "op": "SHL"
    },
    "7665": {
      "op": "SUB"
    },
    "7666": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "AND",
      "path": "0"
    },
    "7667": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7668": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7669": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "ADD",
      "path": "0"
    },
    "7670": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7671": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7672": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7673": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7674": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7676": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "ADD",
      "path": "0"
    },
    "7677": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7678": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7679": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7680": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "AND",
      "path": "0"
    },
    "7681": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7682": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7683": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "ADD",
      "path": "0"
    },
    "7684": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7685": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7686": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7687": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7688": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7689": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10114,
        10130
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "7690": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7691": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        10140,
        10180
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7692": {
      "op": "POP"
    },
    "7693": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        9985,
        10187
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7694": {
      "op": "POP"
    },
    "7695": {
      "op": "POP"
    },
    "7696": {
      "op": "POP"
    },
    "7697": {
      "fn": "BuidlCollective.readToken",
      "jump": "o",
      "offset": [
        9985,
        10187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7698": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7699": {
      "fn": "ERC20.permit",
      "offset": [
        4336,
        4351
      ],
      "op": "TIMESTAMP",
      "path": "1",
      "statement": 72
    },
    "7700": {
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4332
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7701": {
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4351
      ],
      "op": "LT",
      "path": "1"
    },
    "7702": {
      "branch": 116,
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4351
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7703": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E62"
    },
    "7706": {
      "branch": 116,
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7707": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7709": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7718": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7721": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7723": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7724": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "ADD",
      "path": "1"
    },
    "7725": {
      "op": "MSTORE"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7730": {
      "op": "DUP3"
    },
    "7731": {
      "op": "ADD"
    },
    "7732": {
      "op": "MSTORE"
    },
    "7733": {
      "op": "PUSH32",
      "value": "0x5045524D49545F444541444C494E455F45585049524544000000000000000000"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7768": {
      "op": "DUP3"
    },
    "7769": {
      "op": "ADD"
    },
    "7770": {
      "op": "MSTORE"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7773": {
      "op": "ADD"
    },
    "7774": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5E"
    },
    "7777": {
      "op": "JUMP"
    },
    "7778": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7779": {
      "fn": "ERC20.permit",
      "offset": [
        4544,
        4558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7781": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4676
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E6C"
    },
    "7784": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF4A"
    },
    "7787": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4658,
        4676
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7788": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4676
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7795": {
      "op": "SHL"
    },
    "7796": {
      "op": "SUB"
    },
    "7797": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP10",
      "path": "1"
    },
    "7798": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7799": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "AND",
      "path": "1"
    },
    "7800": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7802": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7803": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7804": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7805": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "7807": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7809": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7810": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7811": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7812": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7814": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7815": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7816": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7817": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7818": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7819": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7820": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7822": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7823": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "ADD",
      "path": "1"
    },
    "7824": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7825": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7826": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7827": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7828": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7829": {
      "offset": [
        1727,
        1844
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "7862": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7863": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7864": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "ADD",
      "path": "1"
    },
    "7865": {
      "op": "MSTORE"
    },
    "7866": {
      "op": "DUP1"
    },
    "7867": {
      "op": "DUP5"
    },
    "7868": {
      "op": "ADD"
    },
    "7869": {
      "op": "SWAP5"
    },
    "7870": {
      "op": "SWAP1"
    },
    "7871": {
      "op": "SWAP5"
    },
    "7872": {
      "op": "MSTORE"
    },
    "7873": {
      "op": "SWAP4"
    },
    "7874": {
      "op": "DUP13"
    },
    "7875": {
      "op": "AND"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7878": {
      "op": "DUP5"
    },
    "7879": {
      "op": "ADD"
    },
    "7880": {
      "op": "MSTORE"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7883": {
      "op": "DUP4"
    },
    "7884": {
      "op": "ADD"
    },
    "7885": {
      "op": "DUP12"
    },
    "7886": {
      "op": "SWAP1"
    },
    "7887": {
      "op": "MSTORE"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7890": {
      "op": "DUP4"
    },
    "7891": {
      "op": "ADD"
    },
    "7892": {
      "op": "SWAP4"
    },
    "7893": {
      "op": "SWAP1"
    },
    "7894": {
      "op": "SWAP4"
    },
    "7895": {
      "op": "MSTORE"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7898": {
      "op": "DUP1"
    },
    "7899": {
      "op": "DUP4"
    },
    "7900": {
      "op": "ADD"
    },
    "7901": {
      "op": "DUP11"
    },
    "7902": {
      "op": "SWAP1"
    },
    "7903": {
      "op": "MSTORE"
    },
    "7904": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7905": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7906": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7907": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7908": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SUB",
      "path": "1"
    },
    "7909": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7910": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7911": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "ADD",
      "path": "1"
    },
    "7912": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7913": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7916": {
      "op": "DUP4"
    },
    "7917": {
      "op": "ADD"
    },
    "7918": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7919": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7920": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7921": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7922": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7923": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7924": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "ADD",
      "path": "1"
    },
    "7925": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7926": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7927": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7928": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7929": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7934": {
      "op": "SHL"
    },
    "7935": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7938": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7939": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "ADD",
      "path": "1"
    },
    "7940": {
      "op": "MSTORE"
    },
    "7941": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "7944": {
      "op": "DUP3"
    },
    "7945": {
      "op": "ADD"
    },
    "7946": {
      "op": "SWAP3"
    },
    "7947": {
      "op": "SWAP1"
    },
    "7948": {
      "op": "SWAP3"
    },
    "7949": {
      "op": "MSTORE"
    },
    "7950": {
      "op": "PUSH2",
      "value": "0x122"
    },
    "7953": {
      "op": "DUP2"
    },
    "7954": {
      "op": "ADD"
    },
    "7955": {
      "op": "SWAP2"
    },
    "7956": {
      "op": "SWAP1"
    },
    "7957": {
      "op": "SWAP2"
    },
    "7958": {
      "op": "MSTORE"
    },
    "7959": {
      "op": "PUSH2",
      "value": "0x142"
    },
    "7962": {
      "op": "ADD"
    },
    "7963": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7965": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7966": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7969": {
      "op": "NOT"
    },
    "7970": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7971": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7972": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "SUB",
      "path": "1"
    },
    "7973": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "ADD",
      "path": "1"
    },
    "7974": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7975": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7976": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7977": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7978": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7979": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7980": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7981": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7983": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7984": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7985": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "ADD",
      "path": "1"
    },
    "7986": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7987": {
      "fn": "ERC20.permit",
      "offset": [
        5073,
        5097
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7989": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7990": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7991": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7992": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7993": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7994": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ADD",
      "path": "1"
    },
    "7995": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7996": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7997": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7998": {
      "op": "DUP2"
    },
    "7999": {
      "op": "SWAP1"
    },
    "8000": {
      "op": "MSTORE"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8003": {
      "op": "DUP9"
    },
    "8004": {
      "op": "AND"
    },
    "8005": {
      "op": "SWAP3"
    },
    "8006": {
      "op": "DUP5"
    },
    "8007": {
      "op": "ADD"
    },
    "8008": {
      "op": "SWAP3"
    },
    "8009": {
      "op": "SWAP1"
    },
    "8010": {
      "op": "SWAP3"
    },
    "8011": {
      "op": "MSTORE"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8014": {
      "op": "DUP4"
    },
    "8015": {
      "op": "ADD"
    },
    "8016": {
      "op": "DUP7"
    },
    "8017": {
      "op": "SWAP1"
    },
    "8018": {
      "op": "MSTORE"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8021": {
      "op": "DUP4"
    },
    "8022": {
      "op": "ADD"
    },
    "8023": {
      "op": "DUP6"
    },
    "8024": {
      "op": "SWAP1"
    },
    "8025": {
      "op": "MSTORE"
    },
    "8026": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8027": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8028": {
      "op": "POP"
    },
    "8029": {
      "fn": "ERC20.permit",
      "offset": [
        5073,
        5097
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8030": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8032": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8035": {
      "op": "ADD"
    },
    "8036": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8038": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8040": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8041": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8043": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8044": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SUB",
      "path": "1"
    },
    "8045": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8046": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8047": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8048": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SUB",
      "path": "1"
    },
    "8049": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8050": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8051": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "GAS",
      "path": "1"
    },
    "8052": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "8053": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8054": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8055": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8056": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F85"
    },
    "8059": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8060": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8061": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8063": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8064": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8065": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8066": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8068": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8069": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8070": {
      "op": "POP"
    },
    "8071": {
      "op": "POP"
    },
    "8072": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8074": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8075": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8077": {
      "op": "NOT"
    },
    "8078": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ADD",
      "path": "1"
    },
    "8079": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8080": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8081": {
      "op": "POP"
    },
    "8082": {
      "op": "POP"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8089": {
      "op": "SHL"
    },
    "8090": {
      "op": "SUB"
    },
    "8091": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 73
    },
    "8092": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "AND",
      "path": "1"
    },
    "8093": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8094": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8095": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8096": {
      "branch": 117,
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8097": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FBB"
    },
    "8100": {
      "branch": 117,
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8101": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "POP",
      "path": "1"
    },
    "8102": {
      "fn": "ERC20.permit",
      "offset": [
        5220,
        5225
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8109": {
      "op": "SHL"
    },
    "8110": {
      "op": "SUB"
    },
    "8111": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "AND",
      "path": "1"
    },
    "8112": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5216
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8119": {
      "op": "SHL"
    },
    "8120": {
      "op": "SUB"
    },
    "8121": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "AND",
      "path": "1"
    },
    "8122": {
      "branch": 118,
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "EQ",
      "path": "1"
    },
    "8123": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8124": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FF8"
    },
    "8127": {
      "branch": 118,
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8128": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8130": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8137": {
      "op": "SHL"
    },
    "8138": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8139": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8142": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8144": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8145": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "8146": {
      "op": "MSTORE"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8151": {
      "op": "DUP3"
    },
    "8152": {
      "op": "ADD"
    },
    "8153": {
      "op": "MSTORE"
    },
    "8154": {
      "op": "PUSH14",
      "value": "0x24A72B20A624A22FA9A4A3A722A9"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "8171": {
      "op": "SHL"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8174": {
      "op": "DUP3"
    },
    "8175": {
      "op": "ADD"
    },
    "8176": {
      "op": "MSTORE"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5E"
    },
    "8183": {
      "op": "JUMP"
    },
    "8184": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8191": {
      "op": "SHL"
    },
    "8192": {
      "op": "SUB"
    },
    "8193": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 74
    },
    "8194": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8195": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "AND",
      "path": "1"
    },
    "8196": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8198": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8199": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8200": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8201": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5297
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8203": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8205": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8206": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8207": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8208": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8210": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8211": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8212": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8213": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP12",
      "path": "1"
    },
    "8214": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8215": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "AND",
      "path": "1"
    },
    "8216": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8217": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8218": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8219": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8220": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8221": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8222": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8223": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8224": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8225": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8226": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "DUP11",
      "path": "1"
    },
    "8227": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8228": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8229": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 75
    },
    "8230": {
      "op": "DUP10"
    },
    "8231": {
      "op": "DUP2"
    },
    "8232": {
      "op": "MSTORE"
    },
    "8233": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8234": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8235": {
      "op": "POP"
    },
    "8236": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8237": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "DUP11",
      "path": "1"
    },
    "8238": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "AND",
      "path": "1"
    },
    "8239": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8240": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8273": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8274": {
      "op": "ADD"
    },
    "8275": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8277": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8278": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8279": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8280": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SUB",
      "path": "1"
    },
    "8281": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8282": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8283": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "1"
    },
    "8284": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "1"
    },
    "8285": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "1"
    },
    "8286": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "1"
    },
    "8287": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "1"
    },
    "8288": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "1"
    },
    "8289": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "1"
    },
    "8290": {
      "fn": "ERC20.permit",
      "jump": "o",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8291": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8292": {
      "offset": [
        5088,
        5093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8294": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5088,
        5093
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8295": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5088,
        5093
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "8299": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5088,
        5093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8300": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5088,
        5093
      ],
      "op": "DIV",
      "path": "0"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8307": {
      "op": "SHL"
    },
    "8308": {
      "op": "SUB"
    },
    "8309": {
      "offset": [
        5088,
        5093
      ],
      "op": "AND",
      "path": "0"
    },
    "8310": {
      "offset": [
        5074,
        5084
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8311": {
      "offset": [
        5074,
        5093
      ],
      "op": "EQ",
      "path": "0"
    },
    "8312": {
      "offset": [
        5066,
        5094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2080"
    },
    "8315": {
      "offset": [
        5066,
        5094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8316": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5066,
        5094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8318": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5066,
        5094
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8319": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5066,
        5094
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8320": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        5066,
        5094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8321": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8217
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x6"
    },
    "8323": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8324": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8325": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "8329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8333": {
      "op": "SHL"
    },
    "8334": {
      "op": "SUB"
    },
    "8335": {
      "op": "NOT"
    },
    "8336": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "AND",
      "path": "0"
    },
    "8337": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8347": {
      "op": "SHL"
    },
    "8348": {
      "op": "SUB"
    },
    "8349": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8350": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "AND",
      "path": "0"
    },
    "8351": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8352": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8353": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "MUL",
      "path": "0"
    },
    "8354": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8355": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8356": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8357": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "OR",
      "path": "0"
    },
    "8358": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8359": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8360": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8212,
        8229
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8361": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 77,
      "value": "0x40"
    },
    "8363": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8364": {
      "op": "SWAP1"
    },
    "8365": {
      "op": "DUP2"
    },
    "8366": {
      "op": "MSTORE"
    },
    "8367": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x39E7D4B9BA48F55A740A5192809DBC498FA12724C030B37DAB126A3F6774C0F3"
    },
    "8400": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8403": {
      "op": "ADD"
    },
    "8404": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8406": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8407": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8408": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8409": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "SUB",
      "path": "0"
    },
    "8410": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8411": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8244,
        8266
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8412": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        8143,
        8273
      ],
      "op": "POP",
      "path": "0"
    },
    "8413": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "o",
      "offset": [
        8143,
        8273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8414": {
      "offset": [
        4192,
        4227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8415": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8417": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8418": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8419": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8420": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8421": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "LT",
      "path": "0"
    },
    "8422": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20EE"
    },
    "8425": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8426": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8428": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8429": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8430": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8431": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8432": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8434": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8435": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8437": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8439": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8440": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "ADD",
      "path": "0"
    },
    "8441": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8443": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8444": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "POP",
      "path": "0"
    },
    "8445": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8446": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "POP",
      "path": "0"
    },
    "8447": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8448": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8449": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EA"
    },
    "8452": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8453": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        4192,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D52"
    },
    "8456": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        4192,
        4227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8457": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19634,
        20717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8458": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19685,
        19698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8460": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19750,
        19763
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8461": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19766,
        19796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2115"
    },
    "8464": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19788,
        19795
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8465": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19766,
        19787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B7"
    },
    "8468": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        19766,
        19796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8469": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19766,
        19796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8470": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19750,
        19796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8471": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19750,
        19796
      ],
      "op": "POP",
      "path": "0"
    },
    "8472": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8474": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19833,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "8476": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8477": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8478": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8479": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8481": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "MUL",
      "path": "0"
    },
    "8482": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8484": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "ADD",
      "path": "0"
    },
    "8485": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8487": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8488": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8489": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8490": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "ADD",
      "path": "0"
    },
    "8491": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8493": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8494": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8495": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8496": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8497": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8498": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8499": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8500": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8501": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8503": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "ADD",
      "path": "0"
    },
    "8504": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8505": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8506": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8507": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8508": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8509": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216F"
    },
    "8512": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8513": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8515": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "MUL",
      "path": "0"
    },
    "8516": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8517": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "ADD",
      "path": "0"
    },
    "8518": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8519": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8520": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8522": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8523": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8525": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8527": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8528": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8529": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8530": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8531": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8538": {
      "op": "SHL"
    },
    "8539": {
      "op": "SUB"
    },
    "8540": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "AND",
      "path": "0"
    },
    "8541": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8542": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8543": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8545": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8546": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8547": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "ADD",
      "path": "0"
    },
    "8548": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8549": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8551": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "ADD",
      "path": "0"
    },
    "8552": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8553": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8554": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "GT",
      "path": "0"
    },
    "8555": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2151"
    },
    "8558": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8559": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8560": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "POP",
      "path": "0"
    },
    "8561": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "POP",
      "path": "0"
    },
    "8562": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "POP",
      "path": "0"
    },
    "8563": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "POP",
      "path": "0"
    },
    "8564": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "POP",
      "path": "0"
    },
    "8565": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8566": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19806,
        19839
      ],
      "op": "POP",
      "path": "0"
    },
    "8567": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19849,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8569": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19890,
        19897
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8570": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19890,
        19904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8571": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8580": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8581": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "GT",
      "path": "0"
    },
    "8582": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8583": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2192"
    },
    "8586": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8587": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2192"
    },
    "8590": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275D"
    },
    "8593": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        19876,
        19905
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8594": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8595": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8597": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8598": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8599": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8600": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8601": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8602": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8603": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8605": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "MUL",
      "path": "0"
    },
    "8606": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8608": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "ADD",
      "path": "0"
    },
    "8609": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8610": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "ADD",
      "path": "0"
    },
    "8611": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8613": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8614": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8615": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8616": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21BB"
    },
    "8619": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8620": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8621": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8623": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "ADD",
      "path": "0"
    },
    "8624": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8626": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8627": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "MUL",
      "path": "0"
    },
    "8628": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8629": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8630": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8631": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "8632": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "ADD",
      "path": "0"
    },
    "8633": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8634": {
      "op": "POP"
    },
    "8635": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19876,
        19905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8636": {
      "op": "POP"
    },
    "8637": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19849,
        19905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8638": {
      "op": "POP"
    },
    "8639": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19919,
        19928
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8640": {
      "branch": 112,
      "fn": "BuidlCollective._claim",
      "offset": [
        19919,
        19928
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8641": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19915,
        20711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238F"
    },
    "8644": {
      "branch": 112,
      "fn": "BuidlCollective._claim",
      "offset": [
        19915,
        20711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8645": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19983,
        19991
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 78,
      "value": "0x10"
    },
    "8647": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19983,
        19991
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8654": {
      "op": "SHL"
    },
    "8655": {
      "op": "SUB"
    },
    "8656": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8657": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "AND",
      "path": "0"
    },
    "8658": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8660": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8661": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8662": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8663": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "8665": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8667": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8668": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8670": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8671": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19961
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8672": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19980
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8674": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19980
      ],
      "op": "ADD",
      "path": "0"
    },
    "8675": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19944,
        19991
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8676": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20056,
        20075
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 79,
      "value": "0x21EB"
    },
    "8679": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20056,
        20073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1712"
    },
    "8682": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20056,
        20075
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8683": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20056,
        20075
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8690": {
      "op": "SHL"
    },
    "8691": {
      "op": "SUB"
    },
    "8692": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8693": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "AND",
      "path": "0"
    },
    "8694": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8696": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8697": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8698": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8699": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "8701": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8703": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8704": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8706": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8707": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8708": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "8710": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8711": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20053
      ],
      "op": "ADD",
      "path": "0"
    },
    "8712": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20075
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8713": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8714": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20075
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8715": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20075
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8716": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20128,
        20143
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 80
    },
    "8717": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20089,
        20125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8719": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20089,
        20125
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8720": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20089,
        20125
      ],
      "op": "ADD",
      "path": "0"
    },
    "8721": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20089,
        20143
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8722": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 81
    },
    "8723": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8724": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20193,
        20198
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8725": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20193,
        20198
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8726": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8727": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20005,
        20022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8728": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2222"
    },
    "8731": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8732": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20193,
        20198
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8733": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20193,
        20198
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8734": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE2"
    },
    "8737": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20157,
        20198
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8738": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8739": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8740": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8741": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20157,
        20198
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8742": {
      "op": "POP"
    },
    "8743": {
      "op": "POP"
    },
    "8744": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20243,
        20254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "8746": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20243,
        20254
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8747": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20212,
        20231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8749": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20212,
        20231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8750": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "8759": {
      "fn": "BuidlCollective._claim",
      "offset": [
        2657,
        2665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8760": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20235,
        20254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2241"
    },
    "8763": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20235,
        20254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8764": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20235,
        20240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8765": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20235,
        20254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "8768": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20235,
        20254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8769": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20235,
        20254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8770": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20234,
        20273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224B"
    },
    "8773": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20234,
        20273
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8774": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20234,
        20273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8775": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20234,
        20273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "8778": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20234,
        20273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8779": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20234,
        20273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8780": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20212,
        20273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8781": {
      "op": "POP"
    },
    "8782": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20287,
        20305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8784": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20308,
        20324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225B"
    },
    "8787": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "8790": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20212,
        20273
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8791": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20308,
        20324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "8794": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20308,
        20324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8795": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20308,
        20324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8796": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20287,
        20324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8797": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20287,
        20324
      ],
      "op": "POP",
      "path": "0"
    },
    "8798": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20338,
        20370
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 82,
      "value": "0x2267"
    },
    "8801": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20352,
        20356
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8802": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20359,
        20369
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8803": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20338,
        20343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x254A"
    },
    "8806": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20338,
        20370
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8807": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20338,
        20370
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8808": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20389,
        20398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8810": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8811": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20408,
        20415
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8812": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20408,
        20422
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8813": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20404,
        20405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8814": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20404,
        20422
      ],
      "op": "LT",
      "path": "0"
    },
    "8815": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8816": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2346"
    },
    "8819": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8820": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20447,
        20461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8822": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20464,
        20493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227F"
    },
    "8825": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20484,
        20489
      ],
      "op": "DUP8",
      "path": "0"
    },
    "8826": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20491,
        20492
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8827": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20464,
        20483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248B"
    },
    "8830": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20464,
        20493
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8831": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20464,
        20493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8832": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20447,
        20493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8833": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20447,
        20493
      ],
      "op": "POP",
      "path": "0"
    },
    "8834": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20524,
        20530
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 83
    },
    "8835": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20518
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8836": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20519,
        20520
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8837": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8838": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8839": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8840": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "LT",
      "path": "0"
    },
    "8841": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2294"
    },
    "8844": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8845": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2294"
    },
    "8848": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "8851": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20511,
        20521
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8852": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8853": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8855": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "MUL",
      "path": "0"
    },
    "8856": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8858": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "ADD",
      "path": "0"
    },
    "8859": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20521
      ],
      "op": "ADD",
      "path": "0"
    },
    "8860": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8861": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8862": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8863": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20530
      ],
      "op": "POP",
      "path": "0"
    },
    "8864": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20511,
        20530
      ],
      "op": "POP",
      "path": "0"
    },
    "8865": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20561
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 84
    },
    "8866": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20562,
        20563
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8867": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8868": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8869": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8870": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "LT",
      "path": "0"
    },
    "8871": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B2"
    },
    "8874": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8875": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B2"
    },
    "8878": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "8881": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20554,
        20564
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8882": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8883": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8885": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8886": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8887": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "MUL",
      "path": "0"
    },
    "8888": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8889": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8890": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8891": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "ADD",
      "path": "0"
    },
    "8892": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "ADD",
      "path": "0"
    },
    "8893": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20554,
        20564
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8894": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8896": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8897": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8904": {
      "op": "SHL"
    },
    "8905": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8906": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8913": {
      "op": "SHL"
    },
    "8914": {
      "op": "SUB"
    },
    "8915": {
      "op": "DUP12"
    },
    "8916": {
      "op": "DUP2"
    },
    "8917": {
      "op": "AND"
    },
    "8918": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8920": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8921": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "ADD",
      "path": "0"
    },
    "8922": {
      "op": "MSTORE"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8925": {
      "op": "DUP3"
    },
    "8926": {
      "op": "ADD"
    },
    "8927": {
      "op": "DUP5"
    },
    "8928": {
      "op": "SWAP1"
    },
    "8929": {
      "op": "MSTORE"
    },
    "8930": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8931": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8932": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20574
      ],
      "op": "AND",
      "path": "0"
    },
    "8933": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8934": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "8939": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8942": {
      "op": "ADD"
    },
    "8943": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8945": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8947": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8948": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8949": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8950": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "SUB",
      "path": "0"
    },
    "8951": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8952": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8954": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP8",
      "path": "0"
    },
    "8955": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "GAS",
      "path": "0"
    },
    "8956": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "CALL",
      "path": "0"
    },
    "8957": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8958": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8959": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8960": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230D"
    },
    "8963": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8964": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8965": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8967": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8968": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8969": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8970": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8972": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8973": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8974": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "POP",
      "path": "0"
    },
    "8975": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "POP",
      "path": "0"
    },
    "8976": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "POP",
      "path": "0"
    },
    "8977": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "POP",
      "path": "0"
    },
    "8978": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8980": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8981": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8982": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8984": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "NOT",
      "path": "0"
    },
    "8985": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8987": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8988": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "ADD",
      "path": "0"
    },
    "8989": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "AND",
      "path": "0"
    },
    "8990": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8991": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "ADD",
      "path": "0"
    },
    "8992": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8993": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8995": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8996": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "POP",
      "path": "0"
    },
    "8997": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8998": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "ADD",
      "path": "0"
    },
    "8999": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9000": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2331"
    },
    "9003": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9004": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9005": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8D"
    },
    "9008": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20548,
        20591
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9009": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9010": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20548,
        20591
      ],
      "op": "POP",
      "path": "0"
    },
    "9011": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20429,
        20606
      ],
      "op": "POP",
      "path": "0"
    },
    "9012": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 85
    },
    "9013": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9014": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x233E"
    },
    "9017": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9018": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED5"
    },
    "9021": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20424,
        20427
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9022": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9023": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9024": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "POP",
      "path": "0"
    },
    "9025": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20424,
        20427
      ],
      "op": "POP",
      "path": "0"
    },
    "9026": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x226A"
    },
    "9029": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9030": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9031": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20384,
        20606
      ],
      "op": "POP",
      "path": "0"
    },
    "9032": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 86,
      "value": "0xBBFAF902CEC9107D8131A7888C2B89C5E5820FF6319B992657E8EAA9A36FECED"
    },
    "9065": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20641,
        20648
      ],
      "op": "DUP8",
      "path": "0"
    },
    "9066": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20650,
        20655
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9067": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20657,
        20664
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9068": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20666,
        20673
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9069": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9071": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9072": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x237C"
    },
    "9075": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9076": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9077": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9078": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9079": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9080": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306E"
    },
    "9083": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        20624,
        20674
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9084": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9085": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9087": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9088": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9089": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9090": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SUB",
      "path": "0"
    },
    "9091": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9092": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20624,
        20674
      ],
      "op": "LOG1",
      "path": "0"
    },
    "9093": {
      "op": "POP"
    },
    "9094": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20695,
        20700
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 87
    },
    "9095": {
      "fn": "BuidlCollective._claim",
      "offset": [
        20695,
        20700
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "9096": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19634,
        20717
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9097": {
      "op": "POP"
    },
    "9098": {
      "op": "POP"
    },
    "9099": {
      "op": "POP"
    },
    "9100": {
      "op": "POP"
    },
    "9101": {
      "op": "POP"
    },
    "9102": {
      "fn": "BuidlCollective._claim",
      "jump": "o",
      "offset": [
        19634,
        20717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9103": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19915,
        20711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9104": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19700,
        20717
      ],
      "op": "POP",
      "path": "0"
    },
    "9105": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19700,
        20717
      ],
      "op": "POP",
      "path": "0"
    },
    "9106": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19700,
        20717
      ],
      "op": "POP",
      "path": "0"
    },
    "9107": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19634,
        20717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9108": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19634,
        20717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9109": {
      "fn": "BuidlCollective._claim",
      "offset": [
        19634,
        20717
      ],
      "op": "POP",
      "path": "0"
    },
    "9110": {
      "fn": "BuidlCollective._claim",
      "jump": "o",
      "offset": [
        19634,
        20717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9111": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5629,
        6121
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9112": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5694,
        5701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9114": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5791,
        5932
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 88,
      "value": "0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
    },
    "9147": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5970,
        5974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9149": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9151": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9152": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23C9"
    },
    "9155": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9156": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9157": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30B2"
    },
    "9160": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "i",
      "offset": [
        5954,
        5976
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9161": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9162": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9164": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9165": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9166": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9167": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9168": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9169": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SUB",
      "path": "1"
    },
    "9170": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9171": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9172": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9174": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9175": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "ADD",
      "path": "1"
    },
    "9176": {
      "op": "SWAP4"
    },
    "9177": {
      "op": "SWAP1"
    },
    "9178": {
      "op": "SWAP4"
    },
    "9179": {
      "op": "MSTORE"
    },
    "9180": {
      "op": "DUP2"
    },
    "9181": {
      "op": "ADD"
    },
    "9182": {
      "op": "SWAP2"
    },
    "9183": {
      "op": "SWAP1"
    },
    "9184": {
      "op": "SWAP2"
    },
    "9185": {
      "op": "MSTORE"
    },
    "9186": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5998,
        6012
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9221": {
      "op": "DUP3"
    },
    "9222": {
      "op": "ADD"
    },
    "9223": {
      "op": "MSTORE"
    },
    "9224": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        6034,
        6047
      ],
      "op": "CHAINID",
      "path": "1"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9227": {
      "op": "DUP3"
    },
    "9228": {
      "op": "ADD"
    },
    "9229": {
      "op": "MSTORE"
    },
    "9230": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        6077,
        6081
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9233": {
      "op": "DUP3"
    },
    "9234": {
      "op": "ADD"
    },
    "9235": {
      "op": "MSTORE"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9238": {
      "op": "ADD"
    },
    "9239": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9241": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9242": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9244": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9245": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9246": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SUB",
      "path": "1"
    },
    "9247": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SUB",
      "path": "1"
    },
    "9248": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9249": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9250": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9251": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9253": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9254": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9255": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9256": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9257": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9259": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "ADD",
      "path": "1"
    },
    "9260": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9261": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5713,
        6114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9262": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5713,
        6114
      ],
      "op": "POP",
      "path": "1"
    },
    "9263": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5629,
        6121
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9264": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "o",
      "offset": [
        5629,
        6121
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9265": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9266": {
      "fn": "ERC20._mint",
      "offset": [
        6400,
        6406
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 89
    },
    "9267": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "9269": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9271": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9272": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9273": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9274": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2443"
    },
    "9277": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9278": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9279": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D3A"
    },
    "9282": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6385,
        6406
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9283": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9284": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9285": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9286": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9287": {
      "op": "POP"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9295": {
      "op": "SHL"
    },
    "9296": {
      "op": "SUB"
    },
    "9297": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 90
    },
    "9298": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "AND",
      "path": "1"
    },
    "9299": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9301": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9302": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9303": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9304": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "9306": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9308": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9309": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9310": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9311": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9313": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9314": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9315": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9316": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9317": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9318": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9319": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "ADD",
      "path": "1"
    },
    "9320": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9321": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9322": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 91
    },
    "9323": {
      "op": "DUP5"
    },
    "9324": {
      "op": "DUP2"
    },
    "9325": {
      "op": "MSTORE"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9328": {
      "op": "DUP1"
    },
    "9329": {
      "op": "MLOAD"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9332": {
      "op": "PUSH2",
      "value": "0x314F"
    },
    "9335": {
      "op": "DUP4"
    },
    "9336": {
      "op": "CODECOPY"
    },
    "9337": {
      "op": "DUP2"
    },
    "9338": {
      "op": "MLOAD"
    },
    "9339": {
      "op": "SWAP2"
    },
    "9340": {
      "op": "MSTORE"
    },
    "9341": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9342": {
      "op": "ADD"
    },
    "9343": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9344": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9346": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9347": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9348": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9349": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SUB",
      "path": "1"
    },
    "9350": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9351": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "LOG3",
      "path": "1"
    },
    "9352": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "POP",
      "path": "1"
    },
    "9353": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "POP",
      "path": "1"
    },
    "9354": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        6315,
        6640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9355": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14708,
        14996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9356": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14854,
        14860
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x9"
    },
    "9358": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14854,
        14867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9359": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14816,
        14823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9361": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14816,
        14823
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9362": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14843,
        14867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9363": {
      "branch": 113,
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14843,
        14867
      ],
      "op": "LT",
      "path": "0"
    },
    "9364": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24D6"
    },
    "9367": {
      "branch": 113,
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9368": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9370": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9377": {
      "op": "SHL"
    },
    "9378": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9379": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9382": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9384": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9385": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "ADD",
      "path": "0"
    },
    "9386": {
      "op": "MSTORE"
    },
    "9387": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9391": {
      "op": "DUP3"
    },
    "9392": {
      "op": "ADD"
    },
    "9393": {
      "op": "MSTORE"
    },
    "9394": {
      "op": "PUSH20",
      "value": "0x1D1BDAD95B92590813D5550813D1881093D55391"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9417": {
      "op": "SHL"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9420": {
      "op": "DUP3"
    },
    "9421": {
      "op": "ADD"
    },
    "9422": {
      "op": "MSTORE"
    },
    "9423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9425": {
      "op": "ADD"
    },
    "9426": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5E"
    },
    "9429": {
      "op": "JUMP"
    },
    "9430": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14835,
        14892
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9431": {
      "offset": [
        2604,
        2609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "9434": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14989
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 93,
      "value": "0xFFFFFFFF"
    },
    "9439": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14989
      ],
      "op": "AND",
      "path": "0"
    },
    "9440": {
      "offset": [
        2657,
        2665
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "9449": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14959,
        14965
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9450": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9452": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9454": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "9456": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14939,
        14947
      ],
      "op": "DUP8",
      "path": "0"
    },
    "9457": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9458": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9459": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9460": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "LT",
      "path": "0"
    },
    "9461": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2500"
    },
    "9464": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9465": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2500"
    },
    "9468": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DAF"
    },
    "9471": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        14932,
        14948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9472": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9473": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9475": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9476": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9477": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9478": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9480": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9481": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9482": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9483": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9484": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9485": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "ADD",
      "path": "0"
    },
    "9486": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9493": {
      "op": "SHL"
    },
    "9494": {
      "op": "SUB"
    },
    "9495": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14932,
        14948
      ],
      "op": "AND",
      "path": "0"
    },
    "9496": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9497": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9498": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9499": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "ADD",
      "path": "0"
    },
    "9500": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9501": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9502": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9503": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9504": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9506": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "ADD",
      "path": "0"
    },
    "9507": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9508": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14949
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9509": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14956
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9510": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252F"
    },
    "9513": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14965
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9514": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9515": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF9"
    },
    "9518": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        14922,
        14965
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9519": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14922,
        14965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9520": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2539"
    },
    "9523": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14984
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9524": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9525": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "9528": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        14921,
        14984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9529": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9530": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2543"
    },
    "9533": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9534": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9535": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D18"
    },
    "9538": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        14921,
        14989
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9539": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14921,
        14989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9540": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14902,
        14989
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9541": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        14708,
        14996
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9542": {
      "op": "POP"
    },
    "9543": {
      "op": "POP"
    },
    "9544": {
      "op": "POP"
    },
    "9545": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "o",
      "offset": [
        14708,
        14996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9546": {
      "fn": "ERC20._burn",
      "offset": [
        6646,
        6974
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9553": {
      "op": "SHL"
    },
    "9554": {
      "op": "SUB"
    },
    "9555": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 94
    },
    "9556": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "AND",
      "path": "1"
    },
    "9557": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9559": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9560": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9561": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9562": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "9564": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9566": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9567": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9569": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9570": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9571": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9572": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9573": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9574": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9575": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9576": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2572"
    },
    "9579": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9580": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9581": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9582": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CE2"
    },
    "9585": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6718,
        6743
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9586": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9587": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9588": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9589": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9590": {
      "op": "POP"
    },
    "9591": {
      "op": "POP"
    },
    "9592": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6897
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 95,
      "value": "0x2"
    },
    "9594": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9595": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9596": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9597": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9598": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SUB",
      "path": "1"
    },
    "9599": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9600": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9601": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 96,
      "value": "0x40"
    },
    "9603": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9604": {
      "op": "DUP2"
    },
    "9605": {
      "op": "DUP2"
    },
    "9606": {
      "op": "MSTORE"
    },
    "9607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9609": {
      "op": "SWAP1"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9616": {
      "op": "SHL"
    },
    "9617": {
      "op": "SUB"
    },
    "9618": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9619": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "AND",
      "path": "1"
    },
    "9620": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9623": {
      "op": "DUP1"
    },
    "9624": {
      "op": "MLOAD"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9627": {
      "op": "PUSH2",
      "value": "0x314F"
    },
    "9630": {
      "op": "DUP4"
    },
    "9631": {
      "op": "CODECOPY"
    },
    "9632": {
      "op": "DUP2"
    },
    "9633": {
      "op": "MLOAD"
    },
    "9634": {
      "op": "SWAP2"
    },
    "9635": {
      "op": "MSTORE"
    },
    "9636": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9639": {
      "op": "ADD"
    },
    "9640": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x247F"
    },
    "9643": {
      "op": "JUMP"
    },
    "9644": {
      "op": "JUMPDEST"
    },
    "9645": {
      "op": "DUP3"
    },
    "9646": {
      "op": "DUP1"
    },
    "9647": {
      "op": "SLOAD"
    },
    "9648": {
      "op": "PUSH2",
      "value": "0x25B8"
    },
    "9651": {
      "op": "SWAP1"
    },
    "9652": {
      "op": "PUSH2",
      "value": "0x2D52"
    },
    "9655": {
      "jump": "i",
      "op": "JUMP"
    },
    "9656": {
      "op": "JUMPDEST"
    },
    "9657": {
      "op": "SWAP1"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9660": {
      "op": "MSTORE"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9665": {
      "op": "KECCAK256"
    },
    "9666": {
      "op": "SWAP1"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9669": {
      "op": "ADD"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9672": {
      "op": "SWAP1"
    },
    "9673": {
      "op": "DIV"
    },
    "9674": {
      "op": "DUP2"
    },
    "9675": {
      "op": "ADD"
    },
    "9676": {
      "op": "SWAP3"
    },
    "9677": {
      "op": "DUP3"
    },
    "9678": {
      "op": "PUSH2",
      "value": "0x25DA"
    },
    "9681": {
      "op": "JUMPI"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9684": {
      "op": "DUP6"
    },
    "9685": {
      "op": "SSTORE"
    },
    "9686": {
      "op": "PUSH2",
      "value": "0x2620"
    },
    "9689": {
      "op": "JUMP"
    },
    "9690": {
      "op": "JUMPDEST"
    },
    "9691": {
      "op": "DUP3"
    },
    "9692": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9694": {
      "op": "LT"
    },
    "9695": {
      "op": "PUSH2",
      "value": "0x25F3"
    },
    "9698": {
      "op": "JUMPI"
    },
    "9699": {
      "op": "DUP1"
    },
    "9700": {
      "op": "MLOAD"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9703": {
      "op": "NOT"
    },
    "9704": {
      "op": "AND"
    },
    "9705": {
      "op": "DUP4"
    },
    "9706": {
      "op": "DUP1"
    },
    "9707": {
      "op": "ADD"
    },
    "9708": {
      "op": "OR"
    },
    "9709": {
      "op": "DUP6"
    },
    "9710": {
      "op": "SSTORE"
    },
    "9711": {
      "op": "PUSH2",
      "value": "0x2620"
    },
    "9714": {
      "op": "JUMP"
    },
    "9715": {
      "op": "JUMPDEST"
    },
    "9716": {
      "op": "DUP3"
    },
    "9717": {
      "op": "DUP1"
    },
    "9718": {
      "op": "ADD"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9721": {
      "op": "ADD"
    },
    "9722": {
      "op": "DUP6"
    },
    "9723": {
      "op": "SSTORE"
    },
    "9724": {
      "op": "DUP3"
    },
    "9725": {
      "op": "ISZERO"
    },
    "9726": {
      "op": "PUSH2",
      "value": "0x2620"
    },
    "9729": {
      "op": "JUMPI"
    },
    "9730": {
      "op": "SWAP2"
    },
    "9731": {
      "op": "DUP3"
    },
    "9732": {
      "op": "ADD"
    },
    "9733": {
      "op": "JUMPDEST"
    },
    "9734": {
      "op": "DUP3"
    },
    "9735": {
      "op": "DUP2"
    },
    "9736": {
      "op": "GT"
    },
    "9737": {
      "op": "ISZERO"
    },
    "9738": {
      "op": "PUSH2",
      "value": "0x2620"
    },
    "9741": {
      "op": "JUMPI"
    },
    "9742": {
      "op": "DUP3"
    },
    "9743": {
      "op": "MLOAD"
    },
    "9744": {
      "op": "DUP3"
    },
    "9745": {
      "op": "SSTORE"
    },
    "9746": {
      "op": "SWAP2"
    },
    "9747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9749": {
      "op": "ADD"
    },
    "9750": {
      "op": "SWAP2"
    },
    "9751": {
      "op": "SWAP1"
    },
    "9752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9754": {
      "op": "ADD"
    },
    "9755": {
      "op": "SWAP1"
    },
    "9756": {
      "op": "PUSH2",
      "value": "0x2605"
    },
    "9759": {
      "op": "JUMP"
    },
    "9760": {
      "op": "JUMPDEST"
    },
    "9761": {
      "op": "POP"
    },
    "9762": {
      "op": "PUSH2",
      "value": "0x262C"
    },
    "9765": {
      "op": "SWAP3"
    },
    "9766": {
      "op": "SWAP2"
    },
    "9767": {
      "op": "POP"
    },
    "9768": {
      "op": "PUSH2",
      "value": "0x2630"
    },
    "9771": {
      "jump": "i",
      "op": "JUMP"
    },
    "9772": {
      "op": "JUMPDEST"
    },
    "9773": {
      "op": "POP"
    },
    "9774": {
      "op": "SWAP1"
    },
    "9775": {
      "jump": "o",
      "op": "JUMP"
    },
    "9776": {
      "op": "JUMPDEST"
    },
    "9777": {
      "op": "JUMPDEST"
    },
    "9778": {
      "op": "DUP1"
    },
    "9779": {
      "op": "DUP3"
    },
    "9780": {
      "op": "GT"
    },
    "9781": {
      "op": "ISZERO"
    },
    "9782": {
      "op": "PUSH2",
      "value": "0x262C"
    },
    "9785": {
      "op": "JUMPI"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9788": {
      "op": "DUP2"
    },
    "9789": {
      "op": "SSTORE"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "PUSH2",
      "value": "0x2631"
    },
    "9796": {
      "op": "JUMP"
    },
    "9797": {
      "op": "JUMPDEST"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9804": {
      "op": "SHL"
    },
    "9805": {
      "op": "SUB"
    },
    "9806": {
      "op": "DUP2"
    },
    "9807": {
      "op": "AND"
    },
    "9808": {
      "op": "DUP2"
    },
    "9809": {
      "op": "EQ"
    },
    "9810": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "9813": {
      "op": "JUMPI"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9816": {
      "op": "DUP1"
    },
    "9817": {
      "op": "REVERT"
    },
    "9818": {
      "op": "JUMPDEST"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9823": {
      "op": "DUP3"
    },
    "9824": {
      "op": "DUP5"
    },
    "9825": {
      "op": "SUB"
    },
    "9826": {
      "op": "SLT"
    },
    "9827": {
      "op": "ISZERO"
    },
    "9828": {
      "op": "PUSH2",
      "value": "0x266C"
    },
    "9831": {
      "op": "JUMPI"
    },
    "9832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9834": {
      "op": "DUP1"
    },
    "9835": {
      "op": "REVERT"
    },
    "9836": {
      "op": "JUMPDEST"
    },
    "9837": {
      "op": "DUP2"
    },
    "9838": {
      "op": "CALLDATALOAD"
    },
    "9839": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "9842": {
      "op": "DUP2"
    },
    "9843": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "9846": {
      "jump": "i",
      "op": "JUMP"
    },
    "9847": {
      "op": "JUMPDEST"
    },
    "9848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9850": {
      "op": "DUP2"
    },
    "9851": {
      "op": "MLOAD"
    },
    "9852": {
      "op": "DUP1"
    },
    "9853": {
      "op": "DUP5"
    },
    "9854": {
      "op": "MSTORE"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9857": {
      "op": "JUMPDEST"
    },
    "9858": {
      "op": "DUP2"
    },
    "9859": {
      "op": "DUP2"
    },
    "9860": {
      "op": "LT"
    },
    "9861": {
      "op": "ISZERO"
    },
    "9862": {
      "op": "PUSH2",
      "value": "0x269D"
    },
    "9865": {
      "op": "JUMPI"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9868": {
      "op": "DUP2"
    },
    "9869": {
      "op": "DUP6"
    },
    "9870": {
      "op": "ADD"
    },
    "9871": {
      "op": "DUP2"
    },
    "9872": {
      "op": "ADD"
    },
    "9873": {
      "op": "MLOAD"
    },
    "9874": {
      "op": "DUP7"
    },
    "9875": {
      "op": "DUP4"
    },
    "9876": {
      "op": "ADD"
    },
    "9877": {
      "op": "DUP3"
    },
    "9878": {
      "op": "ADD"
    },
    "9879": {
      "op": "MSTORE"
    },
    "9880": {
      "op": "ADD"
    },
    "9881": {
      "op": "PUSH2",
      "value": "0x2681"
    },
    "9884": {
      "op": "JUMP"
    },
    "9885": {
      "op": "JUMPDEST"
    },
    "9886": {
      "op": "DUP2"
    },
    "9887": {
      "op": "DUP2"
    },
    "9888": {
      "op": "GT"
    },
    "9889": {
      "op": "ISZERO"
    },
    "9890": {
      "op": "PUSH2",
      "value": "0x26AF"
    },
    "9893": {
      "op": "JUMPI"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9898": {
      "op": "DUP4"
    },
    "9899": {
      "op": "DUP8"
    },
    "9900": {
      "op": "ADD"
    },
    "9901": {
      "op": "ADD"
    },
    "9902": {
      "op": "MSTORE"
    },
    "9903": {
      "op": "JUMPDEST"
    },
    "9904": {
      "op": "POP"
    },
    "9905": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9907": {
      "op": "ADD"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9910": {
      "op": "NOT"
    },
    "9911": {
      "op": "AND"
    },
    "9912": {
      "op": "SWAP3"
    },
    "9913": {
      "op": "SWAP1"
    },
    "9914": {
      "op": "SWAP3"
    },
    "9915": {
      "op": "ADD"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9918": {
      "op": "ADD"
    },
    "9919": {
      "op": "SWAP3"
    },
    "9920": {
      "op": "SWAP2"
    },
    "9921": {
      "op": "POP"
    },
    "9922": {
      "op": "POP"
    },
    "9923": {
      "jump": "o",
      "op": "JUMP"
    },
    "9924": {
      "op": "JUMPDEST"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9927": {
      "op": "DUP2"
    },
    "9928": {
      "op": "MSTORE"
    },
    "9929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9931": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9936": {
      "op": "DUP4"
    },
    "9937": {
      "op": "ADD"
    },
    "9938": {
      "op": "DUP5"
    },
    "9939": {
      "op": "PUSH2",
      "value": "0x2677"
    },
    "9942": {
      "jump": "i",
      "op": "JUMP"
    },
    "9943": {
      "op": "JUMPDEST"
    },
    "9944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9946": {
      "op": "DUP1"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9949": {
      "op": "DUP4"
    },
    "9950": {
      "op": "DUP6"
    },
    "9951": {
      "op": "SUB"
    },
    "9952": {
      "op": "SLT"
    },
    "9953": {
      "op": "ISZERO"
    },
    "9954": {
      "op": "PUSH2",
      "value": "0x26EA"
    },
    "9957": {
      "op": "JUMPI"
    },
    "9958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9960": {
      "op": "DUP1"
    },
    "9961": {
      "op": "REVERT"
    },
    "9962": {
      "op": "JUMPDEST"
    },
    "9963": {
      "op": "DUP3"
    },
    "9964": {
      "op": "CALLDATALOAD"
    },
    "9965": {
      "op": "PUSH2",
      "value": "0x26F5"
    },
    "9968": {
      "op": "DUP2"
    },
    "9969": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "9972": {
      "jump": "i",
      "op": "JUMP"
    },
    "9973": {
      "op": "JUMPDEST"
    },
    "9974": {
      "op": "SWAP5"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9977": {
      "op": "SWAP4"
    },
    "9978": {
      "op": "SWAP1"
    },
    "9979": {
      "op": "SWAP4"
    },
    "9980": {
      "op": "ADD"
    },
    "9981": {
      "op": "CALLDATALOAD"
    },
    "9982": {
      "op": "SWAP4"
    },
    "9983": {
      "op": "POP"
    },
    "9984": {
      "op": "POP"
    },
    "9985": {
      "op": "POP"
    },
    "9986": {
      "jump": "o",
      "op": "JUMP"
    },
    "9987": {
      "op": "JUMPDEST"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9992": {
      "op": "DUP3"
    },
    "9993": {
      "op": "DUP5"
    },
    "9994": {
      "op": "SUB"
    },
    "9995": {
      "op": "SLT"
    },
    "9996": {
      "op": "ISZERO"
    },
    "9997": {
      "op": "PUSH2",
      "value": "0x2715"
    },
    "10000": {
      "op": "JUMPI"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10003": {
      "op": "DUP1"
    },
    "10004": {
      "op": "REVERT"
    },
    "10005": {
      "op": "JUMPDEST"
    },
    "10006": {
      "op": "POP"
    },
    "10007": {
      "op": "CALLDATALOAD"
    },
    "10008": {
      "op": "SWAP2"
    },
    "10009": {
      "op": "SWAP1"
    },
    "10010": {
      "op": "POP"
    },
    "10011": {
      "jump": "o",
      "op": "JUMP"
    },
    "10012": {
      "op": "JUMPDEST"
    },
    "10013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10015": {
      "op": "DUP1"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10020": {
      "op": "DUP5"
    },
    "10021": {
      "op": "DUP7"
    },
    "10022": {
      "op": "SUB"
    },
    "10023": {
      "op": "SLT"
    },
    "10024": {
      "op": "ISZERO"
    },
    "10025": {
      "op": "PUSH2",
      "value": "0x2731"
    },
    "10028": {
      "op": "JUMPI"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10031": {
      "op": "DUP1"
    },
    "10032": {
      "op": "REVERT"
    },
    "10033": {
      "op": "JUMPDEST"
    },
    "10034": {
      "op": "DUP4"
    },
    "10035": {
      "op": "CALLDATALOAD"
    },
    "10036": {
      "op": "PUSH2",
      "value": "0x273C"
    },
    "10039": {
      "op": "DUP2"
    },
    "10040": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "10043": {
      "jump": "i",
      "op": "JUMP"
    },
    "10044": {
      "op": "JUMPDEST"
    },
    "10045": {
      "op": "SWAP3"
    },
    "10046": {
      "op": "POP"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10049": {
      "op": "DUP5"
    },
    "10050": {
      "op": "ADD"
    },
    "10051": {
      "op": "CALLDATALOAD"
    },
    "10052": {
      "op": "PUSH2",
      "value": "0x274C"
    },
    "10055": {
      "op": "DUP2"
    },
    "10056": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "10059": {
      "jump": "i",
      "op": "JUMP"
    },
    "10060": {
      "op": "JUMPDEST"
    },
    "10061": {
      "op": "SWAP3"
    },
    "10062": {
      "op": "SWAP6"
    },
    "10063": {
      "op": "SWAP3"
    },
    "10064": {
      "op": "SWAP5"
    },
    "10065": {
      "op": "POP"
    },
    "10066": {
      "op": "POP"
    },
    "10067": {
      "op": "POP"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10070": {
      "op": "SWAP2"
    },
    "10071": {
      "op": "SWAP1"
    },
    "10072": {
      "op": "SWAP2"
    },
    "10073": {
      "op": "ADD"
    },
    "10074": {
      "op": "CALLDATALOAD"
    },
    "10075": {
      "op": "SWAP1"
    },
    "10076": {
      "jump": "o",
      "op": "JUMP"
    },
    "10077": {
      "op": "JUMPDEST"
    },
    "10078": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10085": {
      "op": "SHL"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10088": {
      "op": "MSTORE"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10093": {
      "op": "MSTORE"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10098": {
      "op": "REVERT"
    },
    "10099": {
      "op": "JUMPDEST"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10102": {
      "op": "MLOAD"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10105": {
      "op": "DUP3"
    },
    "10106": {
      "op": "ADD"
    },
    "10107": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10109": {
      "op": "NOT"
    },
    "10110": {
      "op": "AND"
    },
    "10111": {
      "op": "DUP2"
    },
    "10112": {
      "op": "ADD"
    },
    "10113": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10122": {
      "op": "DUP2"
    },
    "10123": {
      "op": "GT"
    },
    "10124": {
      "op": "DUP3"
    },
    "10125": {
      "op": "DUP3"
    },
    "10126": {
      "op": "LT"
    },
    "10127": {
      "op": "OR"
    },
    "10128": {
      "op": "ISZERO"
    },
    "10129": {
      "op": "PUSH2",
      "value": "0x279C"
    },
    "10132": {
      "op": "JUMPI"
    },
    "10133": {
      "op": "PUSH2",
      "value": "0x279C"
    },
    "10136": {
      "op": "PUSH2",
      "value": "0x275D"
    },
    "10139": {
      "jump": "i",
      "op": "JUMP"
    },
    "10140": {
      "op": "JUMPDEST"
    },
    "10141": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10143": {
      "op": "MSTORE"
    },
    "10144": {
      "op": "SWAP2"
    },
    "10145": {
      "op": "SWAP1"
    },
    "10146": {
      "op": "POP"
    },
    "10147": {
      "jump": "o",
      "op": "JUMP"
    },
    "10148": {
      "op": "JUMPDEST"
    },
    "10149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10151": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10160": {
      "op": "DUP3"
    },
    "10161": {
      "op": "GT"
    },
    "10162": {
      "op": "ISZERO"
    },
    "10163": {
      "op": "PUSH2",
      "value": "0x27BE"
    },
    "10166": {
      "op": "JUMPI"
    },
    "10167": {
      "op": "PUSH2",
      "value": "0x27BE"
    },
    "10170": {
      "op": "PUSH2",
      "value": "0x275D"
    },
    "10173": {
      "jump": "i",
      "op": "JUMP"
    },
    "10174": {
      "op": "JUMPDEST"
    },
    "10175": {
      "op": "POP"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10178": {
      "op": "SHL"
    },
    "10179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10181": {
      "op": "ADD"
    },
    "10182": {
      "op": "SWAP1"
    },
    "10183": {
      "jump": "o",
      "op": "JUMP"
    },
    "10184": {
      "op": "JUMPDEST"
    },
    "10185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10187": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10189": {
      "op": "DUP4"
    },
    "10190": {
      "op": "DUP2"
    },
    "10191": {
      "op": "DUP5"
    },
    "10192": {
      "op": "ADD"
    },
    "10193": {
      "op": "SLT"
    },
    "10194": {
      "op": "PUSH2",
      "value": "0x27DA"
    },
    "10197": {
      "op": "JUMPI"
    },
    "10198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10200": {
      "op": "DUP1"
    },
    "10201": {
      "op": "REVERT"
    },
    "10202": {
      "op": "JUMPDEST"
    },
    "10203": {
      "op": "DUP3"
    },
    "10204": {
      "op": "CALLDATALOAD"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10207": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "10210": {
      "op": "PUSH2",
      "value": "0x27EA"
    },
    "10213": {
      "op": "DUP4"
    },
    "10214": {
      "op": "PUSH2",
      "value": "0x27A4"
    },
    "10217": {
      "jump": "i",
      "op": "JUMP"
    },
    "10218": {
      "op": "JUMPDEST"
    },
    "10219": {
      "op": "PUSH2",
      "value": "0x2773"
    },
    "10222": {
      "jump": "i",
      "op": "JUMP"
    },
    "10223": {
      "op": "JUMPDEST"
    },
    "10224": {
      "op": "DUP3"
    },
    "10225": {
      "op": "DUP2"
    },
    "10226": {
      "op": "MSTORE"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10229": {
      "op": "SWAP3"
    },
    "10230": {
      "op": "SWAP1"
    },
    "10231": {
      "op": "SWAP3"
    },
    "10232": {
      "op": "SHL"
    },
    "10233": {
      "op": "DUP6"
    },
    "10234": {
      "op": "ADD"
    },
    "10235": {
      "op": "DUP2"
    },
    "10236": {
      "op": "ADD"
    },
    "10237": {
      "op": "SWAP2"
    },
    "10238": {
      "op": "DUP2"
    },
    "10239": {
      "op": "DUP2"
    },
    "10240": {
      "op": "ADD"
    },
    "10241": {
      "op": "SWAP1"
    },
    "10242": {
      "op": "DUP8"
    },
    "10243": {
      "op": "DUP5"
    },
    "10244": {
      "op": "GT"
    },
    "10245": {
      "op": "ISZERO"
    },
    "10246": {
      "op": "PUSH2",
      "value": "0x280E"
    },
    "10249": {
      "op": "JUMPI"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10252": {
      "op": "DUP1"
    },
    "10253": {
      "op": "REVERT"
    },
    "10254": {
      "op": "JUMPDEST"
    },
    "10255": {
      "op": "DUP3"
    },
    "10256": {
      "op": "DUP8"
    },
    "10257": {
      "op": "ADD"
    },
    "10258": {
      "op": "JUMPDEST"
    },
    "10259": {
      "op": "DUP5"
    },
    "10260": {
      "op": "DUP2"
    },
    "10261": {
      "op": "LT"
    },
    "10262": {
      "op": "ISZERO"
    },
    "10263": {
      "op": "PUSH2",
      "value": "0x28A5"
    },
    "10266": {
      "op": "JUMPI"
    },
    "10267": {
      "op": "DUP1"
    },
    "10268": {
      "op": "CALLDATALOAD"
    },
    "10269": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10278": {
      "op": "DUP1"
    },
    "10279": {
      "op": "DUP3"
    },
    "10280": {
      "op": "GT"
    },
    "10281": {
      "op": "ISZERO"
    },
    "10282": {
      "op": "PUSH2",
      "value": "0x2833"
    },
    "10285": {
      "op": "JUMPI"
    },
    "10286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10288": {
      "op": "DUP1"
    },
    "10289": {
      "op": "DUP2"
    },
    "10290": {
      "op": "REVERT"
    },
    "10291": {
      "op": "JUMPDEST"
    },
    "10292": {
      "op": "DUP2"
    },
    "10293": {
      "op": "DUP11"
    },
    "10294": {
      "op": "ADD"
    },
    "10295": {
      "op": "SWAP2"
    },
    "10296": {
      "op": "POP"
    },
    "10297": {
      "op": "DUP11"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10300": {
      "op": "DUP4"
    },
    "10301": {
      "op": "ADD"
    },
    "10302": {
      "op": "SLT"
    },
    "10303": {
      "op": "PUSH2",
      "value": "0x2848"
    },
    "10306": {
      "op": "JUMPI"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10309": {
      "op": "DUP1"
    },
    "10310": {
      "op": "DUP2"
    },
    "10311": {
      "op": "REVERT"
    },
    "10312": {
      "op": "JUMPDEST"
    },
    "10313": {
      "op": "DUP6"
    },
    "10314": {
      "op": "DUP3"
    },
    "10315": {
      "op": "ADD"
    },
    "10316": {
      "op": "CALLDATALOAD"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10319": {
      "op": "DUP3"
    },
    "10320": {
      "op": "DUP3"
    },
    "10321": {
      "op": "GT"
    },
    "10322": {
      "op": "ISZERO"
    },
    "10323": {
      "op": "PUSH2",
      "value": "0x285E"
    },
    "10326": {
      "op": "JUMPI"
    },
    "10327": {
      "op": "PUSH2",
      "value": "0x285E"
    },
    "10330": {
      "op": "PUSH2",
      "value": "0x275D"
    },
    "10333": {
      "jump": "i",
      "op": "JUMP"
    },
    "10334": {
      "op": "JUMPDEST"
    },
    "10335": {
      "op": "PUSH2",
      "value": "0x286F"
    },
    "10338": {
      "op": "DUP3"
    },
    "10339": {
      "op": "DUP12"
    },
    "10340": {
      "op": "ADD"
    },
    "10341": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10343": {
      "op": "NOT"
    },
    "10344": {
      "op": "AND"
    },
    "10345": {
      "op": "DUP10"
    },
    "10346": {
      "op": "ADD"
    },
    "10347": {
      "op": "PUSH2",
      "value": "0x2773"
    },
    "10350": {
      "jump": "i",
      "op": "JUMP"
    },
    "10351": {
      "op": "JUMPDEST"
    },
    "10352": {
      "op": "SWAP3"
    },
    "10353": {
      "op": "POP"
    },
    "10354": {
      "op": "DUP2"
    },
    "10355": {
      "op": "DUP4"
    },
    "10356": {
      "op": "MSTORE"
    },
    "10357": {
      "op": "DUP13"
    },
    "10358": {
      "op": "DUP2"
    },
    "10359": {
      "op": "DUP4"
    },
    "10360": {
      "op": "DUP7"
    },
    "10361": {
      "op": "ADD"
    },
    "10362": {
      "op": "ADD"
    },
    "10363": {
      "op": "GT"
    },
    "10364": {
      "op": "ISZERO"
    },
    "10365": {
      "op": "PUSH2",
      "value": "0x2886"
    },
    "10368": {
      "op": "JUMPI"
    },
    "10369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10371": {
      "op": "DUP1"
    },
    "10372": {
      "op": "DUP2"
    },
    "10373": {
      "op": "REVERT"
    },
    "10374": {
      "op": "JUMPDEST"
    },
    "10375": {
      "op": "DUP2"
    },
    "10376": {
      "op": "DUP2"
    },
    "10377": {
      "op": "DUP6"
    },
    "10378": {
      "op": "ADD"
    },
    "10379": {
      "op": "DUP10"
    },
    "10380": {
      "op": "DUP6"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "CALLDATACOPY"
    },
    "10383": {
      "op": "POP"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10386": {
      "op": "SWAP1"
    },
    "10387": {
      "op": "DUP3"
    },
    "10388": {
      "op": "ADD"
    },
    "10389": {
      "op": "DUP8"
    },
    "10390": {
      "op": "ADD"
    },
    "10391": {
      "op": "MSTORE"
    },
    "10392": {
      "op": "DUP5"
    },
    "10393": {
      "op": "MSTORE"
    },
    "10394": {
      "op": "POP"
    },
    "10395": {
      "op": "SWAP2"
    },
    "10396": {
      "op": "DUP4"
    },
    "10397": {
      "op": "ADD"
    },
    "10398": {
      "op": "SWAP2"
    },
    "10399": {
      "op": "DUP4"
    },
    "10400": {
      "op": "ADD"
    },
    "10401": {
      "op": "PUSH2",
      "value": "0x2812"
    },
    "10404": {
      "op": "JUMP"
    },
    "10405": {
      "op": "JUMPDEST"
    },
    "10406": {
      "op": "POP"
    },
    "10407": {
      "op": "SWAP8"
    },
    "10408": {
      "op": "SWAP7"
    },
    "10409": {
      "op": "POP"
    },
    "10410": {
      "op": "POP"
    },
    "10411": {
      "op": "POP"
    },
    "10412": {
      "op": "POP"
    },
    "10413": {
      "op": "POP"
    },
    "10414": {
      "op": "POP"
    },
    "10415": {
      "op": "POP"
    },
    "10416": {
      "jump": "o",
      "op": "JUMP"
    },
    "10417": {
      "op": "JUMPDEST"
    },
    "10418": {
      "op": "DUP1"
    },
    "10419": {
      "op": "CALLDATALOAD"
    },
    "10420": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10425": {
      "op": "DUP2"
    },
    "10426": {
      "op": "AND"
    },
    "10427": {
      "op": "DUP2"
    },
    "10428": {
      "op": "EQ"
    },
    "10429": {
      "op": "PUSH2",
      "value": "0x28C5"
    },
    "10432": {
      "op": "JUMPI"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10435": {
      "op": "DUP1"
    },
    "10436": {
      "op": "REVERT"
    },
    "10437": {
      "op": "JUMPDEST"
    },
    "10438": {
      "op": "SWAP2"
    },
    "10439": {
      "op": "SWAP1"
    },
    "10440": {
      "op": "POP"
    },
    "10441": {
      "jump": "o",
      "op": "JUMP"
    },
    "10442": {
      "op": "JUMPDEST"
    },
    "10443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10447": {
      "op": "DUP3"
    },
    "10448": {
      "op": "DUP5"
    },
    "10449": {
      "op": "SUB"
    },
    "10450": {
      "op": "SLT"
    },
    "10451": {
      "op": "ISZERO"
    },
    "10452": {
      "op": "PUSH2",
      "value": "0x28DC"
    },
    "10455": {
      "op": "JUMPI"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10458": {
      "op": "DUP1"
    },
    "10459": {
      "op": "REVERT"
    },
    "10460": {
      "op": "JUMPDEST"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10463": {
      "op": "MLOAD"
    },
    "10464": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10466": {
      "op": "DUP2"
    },
    "10467": {
      "op": "ADD"
    },
    "10468": {
      "op": "DUP2"
    },
    "10469": {
      "op": "DUP2"
    },
    "10470": {
      "op": "LT"
    },
    "10471": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10480": {
      "op": "DUP3"
    },
    "10481": {
      "op": "GT"
    },
    "10482": {
      "op": "OR"
    },
    "10483": {
      "op": "ISZERO"
    },
    "10484": {
      "op": "PUSH2",
      "value": "0x28FF"
    },
    "10487": {
      "op": "JUMPI"
    },
    "10488": {
      "op": "PUSH2",
      "value": "0x28FF"
    },
    "10491": {
      "op": "PUSH2",
      "value": "0x275D"
    },
    "10494": {
      "jump": "i",
      "op": "JUMP"
    },
    "10495": {
      "op": "JUMPDEST"
    },
    "10496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10498": {
      "op": "MSTORE"
    },
    "10499": {
      "op": "SWAP1"
    },
    "10500": {
      "op": "POP"
    },
    "10501": {
      "op": "DUP1"
    },
    "10502": {
      "op": "PUSH2",
      "value": "0x290E"
    },
    "10505": {
      "op": "DUP4"
    },
    "10506": {
      "op": "PUSH2",
      "value": "0x28B1"
    },
    "10509": {
      "jump": "i",
      "op": "JUMP"
    },
    "10510": {
      "op": "JUMPDEST"
    },
    "10511": {
      "op": "DUP2"
    },
    "10512": {
      "op": "MSTORE"
    },
    "10513": {
      "op": "PUSH2",
      "value": "0x291C"
    },
    "10516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10518": {
      "op": "DUP5"
    },
    "10519": {
      "op": "ADD"
    },
    "10520": {
      "op": "PUSH2",
      "value": "0x28B1"
    },
    "10523": {
      "jump": "i",
      "op": "JUMP"
    },
    "10524": {
      "op": "JUMPDEST"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10527": {
      "op": "DUP3"
    },
    "10528": {
      "op": "ADD"
    },
    "10529": {
      "op": "MSTORE"
    },
    "10530": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10535": {
      "op": "DUP5"
    },
    "10536": {
      "op": "ADD"
    },
    "10537": {
      "op": "PUSH2",
      "value": "0x28B1"
    },
    "10540": {
      "jump": "i",
      "op": "JUMP"
    },
    "10541": {
      "op": "JUMPDEST"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10544": {
      "op": "DUP3"
    },
    "10545": {
      "op": "ADD"
    },
    "10546": {
      "op": "MSTORE"
    },
    "10547": {
      "op": "POP"
    },
    "10548": {
      "op": "SWAP3"
    },
    "10549": {
      "op": "SWAP2"
    },
    "10550": {
      "op": "POP"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "jump": "o",
      "op": "JUMP"
    },
    "10553": {
      "op": "JUMPDEST"
    },
    "10554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10556": {
      "op": "DUP3"
    },
    "10557": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10559": {
      "op": "DUP4"
    },
    "10560": {
      "op": "ADD"
    },
    "10561": {
      "op": "SLT"
    },
    "10562": {
      "op": "PUSH2",
      "value": "0x294A"
    },
    "10565": {
      "op": "JUMPI"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10568": {
      "op": "DUP1"
    },
    "10569": {
      "op": "REVERT"
    },
    "10570": {
      "op": "JUMPDEST"
    },
    "10571": {
      "op": "DUP2"
    },
    "10572": {
      "op": "CALLDATALOAD"
    },
    "10573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10575": {
      "op": "PUSH2",
      "value": "0x295A"
    },
    "10578": {
      "op": "PUSH2",
      "value": "0x27EA"
    },
    "10581": {
      "op": "DUP4"
    },
    "10582": {
      "op": "PUSH2",
      "value": "0x27A4"
    },
    "10585": {
      "jump": "i",
      "op": "JUMP"
    },
    "10586": {
      "op": "JUMPDEST"
    },
    "10587": {
      "op": "DUP3"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "MSTORE"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10592": {
      "op": "SWAP3"
    },
    "10593": {
      "op": "SWAP1"
    },
    "10594": {
      "op": "SWAP3"
    },
    "10595": {
      "op": "SHL"
    },
    "10596": {
      "op": "DUP5"
    },
    "10597": {
      "op": "ADD"
    },
    "10598": {
      "op": "DUP2"
    },
    "10599": {
      "op": "ADD"
    },
    "10600": {
      "op": "SWAP2"
    },
    "10601": {
      "op": "DUP2"
    },
    "10602": {
      "op": "DUP2"
    },
    "10603": {
      "op": "ADD"
    },
    "10604": {
      "op": "SWAP1"
    },
    "10605": {
      "op": "DUP7"
    },
    "10606": {
      "op": "DUP5"
    },
    "10607": {
      "op": "GT"
    },
    "10608": {
      "op": "ISZERO"
    },
    "10609": {
      "op": "PUSH2",
      "value": "0x2979"
    },
    "10612": {
      "op": "JUMPI"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10615": {
      "op": "DUP1"
    },
    "10616": {
      "op": "REVERT"
    },
    "10617": {
      "op": "JUMPDEST"
    },
    "10618": {
      "op": "DUP3"
    },
    "10619": {
      "op": "DUP7"
    },
    "10620": {
      "op": "ADD"
    },
    "10621": {
      "op": "JUMPDEST"
    },
    "10622": {
      "op": "DUP5"
    },
    "10623": {
      "op": "DUP2"
    },
    "10624": {
      "op": "LT"
    },
    "10625": {
      "op": "ISZERO"
    },
    "10626": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "10629": {
      "op": "JUMPI"
    },
    "10630": {
      "op": "DUP1"
    },
    "10631": {
      "op": "CALLDATALOAD"
    },
    "10632": {
      "op": "PUSH2",
      "value": "0x2990"
    },
    "10635": {
      "op": "DUP2"
    },
    "10636": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "10639": {
      "jump": "i",
      "op": "JUMP"
    },
    "10640": {
      "op": "JUMPDEST"
    },
    "10641": {
      "op": "DUP4"
    },
    "10642": {
      "op": "MSTORE"
    },
    "10643": {
      "op": "SWAP2"
    },
    "10644": {
      "op": "DUP4"
    },
    "10645": {
      "op": "ADD"
    },
    "10646": {
      "op": "SWAP2"
    },
    "10647": {
      "op": "DUP4"
    },
    "10648": {
      "op": "ADD"
    },
    "10649": {
      "op": "PUSH2",
      "value": "0x297D"
    },
    "10652": {
      "op": "JUMP"
    },
    "10653": {
      "op": "JUMPDEST"
    },
    "10654": {
      "op": "POP"
    },
    "10655": {
      "op": "SWAP7"
    },
    "10656": {
      "op": "SWAP6"
    },
    "10657": {
      "op": "POP"
    },
    "10658": {
      "op": "POP"
    },
    "10659": {
      "op": "POP"
    },
    "10660": {
      "op": "POP"
    },
    "10661": {
      "op": "POP"
    },
    "10662": {
      "op": "POP"
    },
    "10663": {
      "jump": "o",
      "op": "JUMP"
    },
    "10664": {
      "op": "JUMPDEST"
    },
    "10665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10667": {
      "op": "DUP3"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10670": {
      "op": "DUP4"
    },
    "10671": {
      "op": "ADD"
    },
    "10672": {
      "op": "SLT"
    },
    "10673": {
      "op": "PUSH2",
      "value": "0x29B9"
    },
    "10676": {
      "op": "JUMPI"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10679": {
      "op": "DUP1"
    },
    "10680": {
      "op": "REVERT"
    },
    "10681": {
      "op": "JUMPDEST"
    },
    "10682": {
      "op": "DUP2"
    },
    "10683": {
      "op": "CALLDATALOAD"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10686": {
      "op": "PUSH2",
      "value": "0x29C9"
    },
    "10689": {
      "op": "PUSH2",
      "value": "0x27EA"
    },
    "10692": {
      "op": "DUP4"
    },
    "10693": {
      "op": "PUSH2",
      "value": "0x27A4"
    },
    "10696": {
      "jump": "i",
      "op": "JUMP"
    },
    "10697": {
      "op": "JUMPDEST"
    },
    "10698": {
      "op": "DUP3"
    },
    "10699": {
      "op": "DUP2"
    },
    "10700": {
      "op": "MSTORE"
    },
    "10701": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10703": {
      "op": "SWAP3"
    },
    "10704": {
      "op": "SWAP1"
    },
    "10705": {
      "op": "SWAP3"
    },
    "10706": {
      "op": "SHL"
    },
    "10707": {
      "op": "DUP5"
    },
    "10708": {
      "op": "ADD"
    },
    "10709": {
      "op": "DUP2"
    },
    "10710": {
      "op": "ADD"
    },
    "10711": {
      "op": "SWAP2"
    },
    "10712": {
      "op": "DUP2"
    },
    "10713": {
      "op": "DUP2"
    },
    "10714": {
      "op": "ADD"
    },
    "10715": {
      "op": "SWAP1"
    },
    "10716": {
      "op": "DUP7"
    },
    "10717": {
      "op": "DUP5"
    },
    "10718": {
      "op": "GT"
    },
    "10719": {
      "op": "ISZERO"
    },
    "10720": {
      "op": "PUSH2",
      "value": "0x29E8"
    },
    "10723": {
      "op": "JUMPI"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10726": {
      "op": "DUP1"
    },
    "10727": {
      "op": "REVERT"
    },
    "10728": {
      "op": "JUMPDEST"
    },
    "10729": {
      "op": "DUP3"
    },
    "10730": {
      "op": "DUP7"
    },
    "10731": {
      "op": "ADD"
    },
    "10732": {
      "op": "JUMPDEST"
    },
    "10733": {
      "op": "DUP5"
    },
    "10734": {
      "op": "DUP2"
    },
    "10735": {
      "op": "LT"
    },
    "10736": {
      "op": "ISZERO"
    },
    "10737": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "10740": {
      "op": "JUMPI"
    },
    "10741": {
      "op": "DUP1"
    },
    "10742": {
      "op": "CALLDATALOAD"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10749": {
      "op": "SHL"
    },
    "10750": {
      "op": "SUB"
    },
    "10751": {
      "op": "DUP2"
    },
    "10752": {
      "op": "AND"
    },
    "10753": {
      "op": "DUP2"
    },
    "10754": {
      "op": "EQ"
    },
    "10755": {
      "op": "PUSH2",
      "value": "0x2A0C"
    },
    "10758": {
      "op": "JUMPI"
    },
    "10759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10761": {
      "op": "DUP1"
    },
    "10762": {
      "op": "DUP2"
    },
    "10763": {
      "op": "REVERT"
    },
    "10764": {
      "op": "JUMPDEST"
    },
    "10765": {
      "op": "DUP4"
    },
    "10766": {
      "op": "MSTORE"
    },
    "10767": {
      "op": "SWAP2"
    },
    "10768": {
      "op": "DUP4"
    },
    "10769": {
      "op": "ADD"
    },
    "10770": {
      "op": "SWAP2"
    },
    "10771": {
      "op": "DUP4"
    },
    "10772": {
      "op": "ADD"
    },
    "10773": {
      "op": "PUSH2",
      "value": "0x29EC"
    },
    "10776": {
      "op": "JUMP"
    },
    "10777": {
      "op": "JUMPDEST"
    },
    "10778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10780": {
      "op": "DUP3"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10783": {
      "op": "DUP4"
    },
    "10784": {
      "op": "ADD"
    },
    "10785": {
      "op": "SLT"
    },
    "10786": {
      "op": "PUSH2",
      "value": "0x2A2A"
    },
    "10789": {
      "op": "JUMPI"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10792": {
      "op": "DUP1"
    },
    "10793": {
      "op": "REVERT"
    },
    "10794": {
      "op": "JUMPDEST"
    },
    "10795": {
      "op": "DUP2"
    },
    "10796": {
      "op": "CALLDATALOAD"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10799": {
      "op": "PUSH2",
      "value": "0x2A3A"
    },
    "10802": {
      "op": "PUSH2",
      "value": "0x27EA"
    },
    "10805": {
      "op": "DUP4"
    },
    "10806": {
      "op": "PUSH2",
      "value": "0x27A4"
    },
    "10809": {
      "jump": "i",
      "op": "JUMP"
    },
    "10810": {
      "op": "JUMPDEST"
    },
    "10811": {
      "op": "DUP3"
    },
    "10812": {
      "op": "DUP2"
    },
    "10813": {
      "op": "MSTORE"
    },
    "10814": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10816": {
      "op": "SWAP3"
    },
    "10817": {
      "op": "SWAP1"
    },
    "10818": {
      "op": "SWAP3"
    },
    "10819": {
      "op": "SHL"
    },
    "10820": {
      "op": "DUP5"
    },
    "10821": {
      "op": "ADD"
    },
    "10822": {
      "op": "DUP2"
    },
    "10823": {
      "op": "ADD"
    },
    "10824": {
      "op": "SWAP2"
    },
    "10825": {
      "op": "DUP2"
    },
    "10826": {
      "op": "DUP2"
    },
    "10827": {
      "op": "ADD"
    },
    "10828": {
      "op": "SWAP1"
    },
    "10829": {
      "op": "DUP7"
    },
    "10830": {
      "op": "DUP5"
    },
    "10831": {
      "op": "GT"
    },
    "10832": {
      "op": "ISZERO"
    },
    "10833": {
      "op": "PUSH2",
      "value": "0x2A59"
    },
    "10836": {
      "op": "JUMPI"
    },
    "10837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10839": {
      "op": "DUP1"
    },
    "10840": {
      "op": "REVERT"
    },
    "10841": {
      "op": "JUMPDEST"
    },
    "10842": {
      "op": "DUP3"
    },
    "10843": {
      "op": "DUP7"
    },
    "10844": {
      "op": "ADD"
    },
    "10845": {
      "op": "JUMPDEST"
    },
    "10846": {
      "op": "DUP5"
    },
    "10847": {
      "op": "DUP2"
    },
    "10848": {
      "op": "LT"
    },
    "10849": {
      "op": "ISZERO"
    },
    "10850": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "10853": {
      "op": "JUMPI"
    },
    "10854": {
      "op": "DUP1"
    },
    "10855": {
      "op": "CALLDATALOAD"
    },
    "10856": {
      "op": "DUP4"
    },
    "10857": {
      "op": "MSTORE"
    },
    "10858": {
      "op": "SWAP2"
    },
    "10859": {
      "op": "DUP4"
    },
    "10860": {
      "op": "ADD"
    },
    "10861": {
      "op": "SWAP2"
    },
    "10862": {
      "op": "DUP4"
    },
    "10863": {
      "op": "ADD"
    },
    "10864": {
      "op": "PUSH2",
      "value": "0x2A5D"
    },
    "10867": {
      "op": "JUMP"
    },
    "10868": {
      "op": "JUMPDEST"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10871": {
      "op": "DUP1"
    },
    "10872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10874": {
      "op": "DUP1"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10877": {
      "op": "DUP1"
    },
    "10878": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10881": {
      "op": "DUP8"
    },
    "10882": {
      "op": "DUP10"
    },
    "10883": {
      "op": "SUB"
    },
    "10884": {
      "op": "SLT"
    },
    "10885": {
      "op": "ISZERO"
    },
    "10886": {
      "op": "PUSH2",
      "value": "0x2A8E"
    },
    "10889": {
      "op": "JUMPI"
    },
    "10890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10892": {
      "op": "DUP1"
    },
    "10893": {
      "op": "REVERT"
    },
    "10894": {
      "op": "JUMPDEST"
    },
    "10895": {
      "op": "DUP7"
    },
    "10896": {
      "op": "CALLDATALOAD"
    },
    "10897": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10906": {
      "op": "DUP1"
    },
    "10907": {
      "op": "DUP3"
    },
    "10908": {
      "op": "GT"
    },
    "10909": {
      "op": "ISZERO"
    },
    "10910": {
      "op": "PUSH2",
      "value": "0x2AA6"
    },
    "10913": {
      "op": "JUMPI"
    },
    "10914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10916": {
      "op": "DUP1"
    },
    "10917": {
      "op": "REVERT"
    },
    "10918": {
      "op": "JUMPDEST"
    },
    "10919": {
      "op": "PUSH2",
      "value": "0x2AB2"
    },
    "10922": {
      "op": "DUP11"
    },
    "10923": {
      "op": "DUP4"
    },
    "10924": {
      "op": "DUP12"
    },
    "10925": {
      "op": "ADD"
    },
    "10926": {
      "op": "PUSH2",
      "value": "0x27C8"
    },
    "10929": {
      "jump": "i",
      "op": "JUMP"
    },
    "10930": {
      "op": "JUMPDEST"
    },
    "10931": {
      "op": "SWAP8"
    },
    "10932": {
      "op": "POP"
    },
    "10933": {
      "op": "PUSH2",
      "value": "0x2AC1"
    },
    "10936": {
      "op": "DUP11"
    },
    "10937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10939": {
      "op": "DUP12"
    },
    "10940": {
      "op": "ADD"
    },
    "10941": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10944": {
      "jump": "i",
      "op": "JUMP"
    },
    "10945": {
      "op": "JUMPDEST"
    },
    "10946": {
      "op": "SWAP7"
    },
    "10947": {
      "op": "POP"
    },
    "10948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10950": {
      "op": "DUP10"
    },
    "10951": {
      "op": "ADD"
    },
    "10952": {
      "op": "CALLDATALOAD"
    },
    "10953": {
      "op": "SWAP2"
    },
    "10954": {
      "op": "POP"
    },
    "10955": {
      "op": "DUP1"
    },
    "10956": {
      "op": "DUP3"
    },
    "10957": {
      "op": "GT"
    },
    "10958": {
      "op": "ISZERO"
    },
    "10959": {
      "op": "PUSH2",
      "value": "0x2AD7"
    },
    "10962": {
      "op": "JUMPI"
    },
    "10963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10965": {
      "op": "DUP1"
    },
    "10966": {
      "op": "REVERT"
    },
    "10967": {
      "op": "JUMPDEST"
    },
    "10968": {
      "op": "PUSH2",
      "value": "0x2AE3"
    },
    "10971": {
      "op": "DUP11"
    },
    "10972": {
      "op": "DUP4"
    },
    "10973": {
      "op": "DUP12"
    },
    "10974": {
      "op": "ADD"
    },
    "10975": {
      "op": "PUSH2",
      "value": "0x2939"
    },
    "10978": {
      "jump": "i",
      "op": "JUMP"
    },
    "10979": {
      "op": "JUMPDEST"
    },
    "10980": {
      "op": "SWAP6"
    },
    "10981": {
      "op": "POP"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10984": {
      "op": "DUP10"
    },
    "10985": {
      "op": "ADD"
    },
    "10986": {
      "op": "CALLDATALOAD"
    },
    "10987": {
      "op": "SWAP2"
    },
    "10988": {
      "op": "POP"
    },
    "10989": {
      "op": "DUP1"
    },
    "10990": {
      "op": "DUP3"
    },
    "10991": {
      "op": "GT"
    },
    "10992": {
      "op": "ISZERO"
    },
    "10993": {
      "op": "PUSH2",
      "value": "0x2AF9"
    },
    "10996": {
      "op": "JUMPI"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10999": {
      "op": "DUP1"
    },
    "11000": {
      "op": "REVERT"
    },
    "11001": {
      "op": "JUMPDEST"
    },
    "11002": {
      "op": "PUSH2",
      "value": "0x2B05"
    },
    "11005": {
      "op": "DUP11"
    },
    "11006": {
      "op": "DUP4"
    },
    "11007": {
      "op": "DUP12"
    },
    "11008": {
      "op": "ADD"
    },
    "11009": {
      "op": "PUSH2",
      "value": "0x29A8"
    },
    "11012": {
      "jump": "i",
      "op": "JUMP"
    },
    "11013": {
      "op": "JUMPDEST"
    },
    "11014": {
      "op": "SWAP5"
    },
    "11015": {
      "op": "POP"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11018": {
      "op": "DUP10"
    },
    "11019": {
      "op": "ADD"
    },
    "11020": {
      "op": "CALLDATALOAD"
    },
    "11021": {
      "op": "SWAP2"
    },
    "11022": {
      "op": "POP"
    },
    "11023": {
      "op": "DUP1"
    },
    "11024": {
      "op": "DUP3"
    },
    "11025": {
      "op": "GT"
    },
    "11026": {
      "op": "ISZERO"
    },
    "11027": {
      "op": "PUSH2",
      "value": "0x2B1B"
    },
    "11030": {
      "op": "JUMPI"
    },
    "11031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11033": {
      "op": "DUP1"
    },
    "11034": {
      "op": "REVERT"
    },
    "11035": {
      "op": "JUMPDEST"
    },
    "11036": {
      "op": "PUSH2",
      "value": "0x2B27"
    },
    "11039": {
      "op": "DUP11"
    },
    "11040": {
      "op": "DUP4"
    },
    "11041": {
      "op": "DUP12"
    },
    "11042": {
      "op": "ADD"
    },
    "11043": {
      "op": "PUSH2",
      "value": "0x2939"
    },
    "11046": {
      "jump": "i",
      "op": "JUMP"
    },
    "11047": {
      "op": "JUMPDEST"
    },
    "11048": {
      "op": "SWAP4"
    },
    "11049": {
      "op": "POP"
    },
    "11050": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11052": {
      "op": "DUP10"
    },
    "11053": {
      "op": "ADD"
    },
    "11054": {
      "op": "CALLDATALOAD"
    },
    "11055": {
      "op": "SWAP2"
    },
    "11056": {
      "op": "POP"
    },
    "11057": {
      "op": "DUP1"
    },
    "11058": {
      "op": "DUP3"
    },
    "11059": {
      "op": "GT"
    },
    "11060": {
      "op": "ISZERO"
    },
    "11061": {
      "op": "PUSH2",
      "value": "0x2B3D"
    },
    "11064": {
      "op": "JUMPI"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11067": {
      "op": "DUP1"
    },
    "11068": {
      "op": "REVERT"
    },
    "11069": {
      "op": "JUMPDEST"
    },
    "11070": {
      "op": "POP"
    },
    "11071": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "11074": {
      "op": "DUP10"
    },
    "11075": {
      "op": "DUP3"
    },
    "11076": {
      "op": "DUP11"
    },
    "11077": {
      "op": "ADD"
    },
    "11078": {
      "op": "PUSH2",
      "value": "0x2A19"
    },
    "11081": {
      "jump": "i",
      "op": "JUMP"
    },
    "11082": {
      "op": "JUMPDEST"
    },
    "11083": {
      "op": "SWAP2"
    },
    "11084": {
      "op": "POP"
    },
    "11085": {
      "op": "POP"
    },
    "11086": {
      "op": "SWAP3"
    },
    "11087": {
      "op": "SWAP6"
    },
    "11088": {
      "op": "POP"
    },
    "11089": {
      "op": "SWAP3"
    },
    "11090": {
      "op": "SWAP6"
    },
    "11091": {
      "op": "POP"
    },
    "11092": {
      "op": "SWAP3"
    },
    "11093": {
      "op": "SWAP6"
    },
    "11094": {
      "jump": "o",
      "op": "JUMP"
    },
    "11095": {
      "op": "JUMPDEST"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11098": {
      "op": "DUP1"
    },
    "11099": {
      "op": "DUP3"
    },
    "11100": {
      "op": "MSTORE"
    },
    "11101": {
      "op": "DUP3"
    },
    "11102": {
      "op": "MLOAD"
    },
    "11103": {
      "op": "DUP3"
    },
    "11104": {
      "op": "DUP3"
    },
    "11105": {
      "op": "ADD"
    },
    "11106": {
      "op": "DUP2"
    },
    "11107": {
      "op": "SWAP1"
    },
    "11108": {
      "op": "MSTORE"
    },
    "11109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11111": {
      "op": "SWAP2"
    },
    "11112": {
      "op": "SWAP1"
    },
    "11113": {
      "op": "DUP5"
    },
    "11114": {
      "op": "DUP3"
    },
    "11115": {
      "op": "ADD"
    },
    "11116": {
      "op": "SWAP1"
    },
    "11117": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11119": {
      "op": "DUP6"
    },
    "11120": {
      "op": "ADD"
    },
    "11121": {
      "op": "SWAP1"
    },
    "11122": {
      "op": "DUP5"
    },
    "11123": {
      "op": "JUMPDEST"
    },
    "11124": {
      "op": "DUP2"
    },
    "11125": {
      "op": "DUP2"
    },
    "11126": {
      "op": "LT"
    },
    "11127": {
      "op": "ISZERO"
    },
    "11128": {
      "op": "PUSH2",
      "value": "0x2B91"
    },
    "11131": {
      "op": "JUMPI"
    },
    "11132": {
      "op": "DUP4"
    },
    "11133": {
      "op": "MLOAD"
    },
    "11134": {
      "op": "ISZERO"
    },
    "11135": {
      "op": "ISZERO"
    },
    "11136": {
      "op": "DUP4"
    },
    "11137": {
      "op": "MSTORE"
    },
    "11138": {
      "op": "SWAP3"
    },
    "11139": {
      "op": "DUP5"
    },
    "11140": {
      "op": "ADD"
    },
    "11141": {
      "op": "SWAP3"
    },
    "11142": {
      "op": "SWAP2"
    },
    "11143": {
      "op": "DUP5"
    },
    "11144": {
      "op": "ADD"
    },
    "11145": {
      "op": "SWAP2"
    },
    "11146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11148": {
      "op": "ADD"
    },
    "11149": {
      "op": "PUSH2",
      "value": "0x2B73"
    },
    "11152": {
      "op": "JUMP"
    },
    "11153": {
      "op": "JUMPDEST"
    },
    "11154": {
      "op": "POP"
    },
    "11155": {
      "op": "SWAP1"
    },
    "11156": {
      "op": "SWAP7"
    },
    "11157": {
      "op": "SWAP6"
    },
    "11158": {
      "op": "POP"
    },
    "11159": {
      "op": "POP"
    },
    "11160": {
      "op": "POP"
    },
    "11161": {
      "op": "POP"
    },
    "11162": {
      "op": "POP"
    },
    "11163": {
      "op": "POP"
    },
    "11164": {
      "jump": "o",
      "op": "JUMP"
    },
    "11165": {
      "op": "JUMPDEST"
    },
    "11166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11168": {
      "op": "DUP2"
    },
    "11169": {
      "op": "MLOAD"
    },
    "11170": {
      "op": "DUP1"
    },
    "11171": {
      "op": "DUP5"
    },
    "11172": {
      "op": "MSTORE"
    },
    "11173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11175": {
      "op": "DUP1"
    },
    "11176": {
      "op": "DUP6"
    },
    "11177": {
      "op": "ADD"
    },
    "11178": {
      "op": "SWAP5"
    },
    "11179": {
      "op": "POP"
    },
    "11180": {
      "op": "DUP1"
    },
    "11181": {
      "op": "DUP5"
    },
    "11182": {
      "op": "ADD"
    },
    "11183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11185": {
      "op": "JUMPDEST"
    },
    "11186": {
      "op": "DUP4"
    },
    "11187": {
      "op": "DUP2"
    },
    "11188": {
      "op": "LT"
    },
    "11189": {
      "op": "ISZERO"
    },
    "11190": {
      "op": "PUSH2",
      "value": "0x2BCD"
    },
    "11193": {
      "op": "JUMPI"
    },
    "11194": {
      "op": "DUP2"
    },
    "11195": {
      "op": "MLOAD"
    },
    "11196": {
      "op": "DUP8"
    },
    "11197": {
      "op": "MSTORE"
    },
    "11198": {
      "op": "SWAP6"
    },
    "11199": {
      "op": "DUP3"
    },
    "11200": {
      "op": "ADD"
    },
    "11201": {
      "op": "SWAP6"
    },
    "11202": {
      "op": "SWAP1"
    },
    "11203": {
      "op": "DUP3"
    },
    "11204": {
      "op": "ADD"
    },
    "11205": {
      "op": "SWAP1"
    },
    "11206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11208": {
      "op": "ADD"
    },
    "11209": {
      "op": "PUSH2",
      "value": "0x2BB1"
    },
    "11212": {
      "op": "JUMP"
    },
    "11213": {
      "op": "JUMPDEST"
    },
    "11214": {
      "op": "POP"
    },
    "11215": {
      "op": "SWAP5"
    },
    "11216": {
      "op": "SWAP6"
    },
    "11217": {
      "op": "SWAP5"
    },
    "11218": {
      "op": "POP"
    },
    "11219": {
      "op": "POP"
    },
    "11220": {
      "op": "POP"
    },
    "11221": {
      "op": "POP"
    },
    "11222": {
      "op": "POP"
    },
    "11223": {
      "jump": "o",
      "op": "JUMP"
    },
    "11224": {
      "op": "JUMPDEST"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11227": {
      "op": "DUP2"
    },
    "11228": {
      "op": "MSTORE"
    },
    "11229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11231": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "11234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11236": {
      "op": "DUP4"
    },
    "11237": {
      "op": "ADD"
    },
    "11238": {
      "op": "DUP5"
    },
    "11239": {
      "op": "PUSH2",
      "value": "0x2B9D"
    },
    "11242": {
      "jump": "i",
      "op": "JUMP"
    },
    "11243": {
      "op": "JUMPDEST"
    },
    "11244": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11246": {
      "op": "DUP2"
    },
    "11247": {
      "op": "AND"
    },
    "11248": {
      "op": "DUP2"
    },
    "11249": {
      "op": "EQ"
    },
    "11250": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "11253": {
      "op": "JUMPI"
    },
    "11254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11256": {
      "op": "DUP1"
    },
    "11257": {
      "op": "REVERT"
    },
    "11258": {
      "op": "JUMPDEST"
    },
    "11259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11261": {
      "op": "DUP1"
    },
    "11262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11264": {
      "op": "DUP1"
    },
    "11265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11267": {
      "op": "DUP1"
    },
    "11268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11270": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11272": {
      "op": "DUP9"
    },
    "11273": {
      "op": "DUP11"
    },
    "11274": {
      "op": "SUB"
    },
    "11275": {
      "op": "SLT"
    },
    "11276": {
      "op": "ISZERO"
    },
    "11277": {
      "op": "PUSH2",
      "value": "0x2C15"
    },
    "11280": {
      "op": "JUMPI"
    },
    "11281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11283": {
      "op": "DUP1"
    },
    "11284": {
      "op": "REVERT"
    },
    "11285": {
      "op": "JUMPDEST"
    },
    "11286": {
      "op": "DUP8"
    },
    "11287": {
      "op": "CALLDATALOAD"
    },
    "11288": {
      "op": "PUSH2",
      "value": "0x2C20"
    },
    "11291": {
      "op": "DUP2"
    },
    "11292": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "11295": {
      "jump": "i",
      "op": "JUMP"
    },
    "11296": {
      "op": "JUMPDEST"
    },
    "11297": {
      "op": "SWAP7"
    },
    "11298": {
      "op": "POP"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11301": {
      "op": "DUP9"
    },
    "11302": {
      "op": "ADD"
    },
    "11303": {
      "op": "CALLDATALOAD"
    },
    "11304": {
      "op": "PUSH2",
      "value": "0x2C30"
    },
    "11307": {
      "op": "DUP2"
    },
    "11308": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "11311": {
      "jump": "i",
      "op": "JUMP"
    },
    "11312": {
      "op": "JUMPDEST"
    },
    "11313": {
      "op": "SWAP6"
    },
    "11314": {
      "op": "POP"
    },
    "11315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11317": {
      "op": "DUP9"
    },
    "11318": {
      "op": "ADD"
    },
    "11319": {
      "op": "CALLDATALOAD"
    },
    "11320": {
      "op": "SWAP5"
    },
    "11321": {
      "op": "POP"
    },
    "11322": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11324": {
      "op": "DUP9"
    },
    "11325": {
      "op": "ADD"
    },
    "11326": {
      "op": "CALLDATALOAD"
    },
    "11327": {
      "op": "SWAP4"
    },
    "11328": {
      "op": "POP"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11331": {
      "op": "DUP9"
    },
    "11332": {
      "op": "ADD"
    },
    "11333": {
      "op": "CALLDATALOAD"
    },
    "11334": {
      "op": "PUSH2",
      "value": "0x2C4E"
    },
    "11337": {
      "op": "DUP2"
    },
    "11338": {
      "op": "PUSH2",
      "value": "0x2BEB"
    },
    "11341": {
      "jump": "i",
      "op": "JUMP"
    },
    "11342": {
      "op": "JUMPDEST"
    },
    "11343": {
      "op": "SWAP7"
    },
    "11344": {
      "op": "SWAP10"
    },
    "11345": {
      "op": "SWAP6"
    },
    "11346": {
      "op": "SWAP9"
    },
    "11347": {
      "op": "POP"
    },
    "11348": {
      "op": "SWAP4"
    },
    "11349": {
      "op": "SWAP7"
    },
    "11350": {
      "op": "SWAP3"
    },
    "11351": {
      "op": "SWAP6"
    },
    "11352": {
      "op": "SWAP5"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11355": {
      "op": "DUP5"
    },
    "11356": {
      "op": "ADD"
    },
    "11357": {
      "op": "CALLDATALOAD"
    },
    "11358": {
      "op": "SWAP5"
    },
    "11359": {
      "op": "POP"
    },
    "11360": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11362": {
      "op": "SWAP1"
    },
    "11363": {
      "op": "SWAP4"
    },
    "11364": {
      "op": "ADD"
    },
    "11365": {
      "op": "CALLDATALOAD"
    },
    "11366": {
      "op": "SWAP3"
    },
    "11367": {
      "op": "SWAP2"
    },
    "11368": {
      "op": "POP"
    },
    "11369": {
      "op": "POP"
    },
    "11370": {
      "jump": "o",
      "op": "JUMP"
    },
    "11371": {
      "op": "JUMPDEST"
    },
    "11372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11374": {
      "op": "DUP1"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11377": {
      "op": "DUP4"
    },
    "11378": {
      "op": "DUP6"
    },
    "11379": {
      "op": "SUB"
    },
    "11380": {
      "op": "SLT"
    },
    "11381": {
      "op": "ISZERO"
    },
    "11382": {
      "op": "PUSH2",
      "value": "0x2C7E"
    },
    "11385": {
      "op": "JUMPI"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11388": {
      "op": "DUP1"
    },
    "11389": {
      "op": "REVERT"
    },
    "11390": {
      "op": "JUMPDEST"
    },
    "11391": {
      "op": "DUP3"
    },
    "11392": {
      "op": "CALLDATALOAD"
    },
    "11393": {
      "op": "PUSH2",
      "value": "0x2C89"
    },
    "11396": {
      "op": "DUP2"
    },
    "11397": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "11400": {
      "jump": "i",
      "op": "JUMP"
    },
    "11401": {
      "op": "JUMPDEST"
    },
    "11402": {
      "op": "SWAP2"
    },
    "11403": {
      "op": "POP"
    },
    "11404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11406": {
      "op": "DUP4"
    },
    "11407": {
      "op": "ADD"
    },
    "11408": {
      "op": "CALLDATALOAD"
    },
    "11409": {
      "op": "PUSH2",
      "value": "0x2C99"
    },
    "11412": {
      "op": "DUP2"
    },
    "11413": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "11416": {
      "jump": "i",
      "op": "JUMP"
    },
    "11417": {
      "op": "JUMPDEST"
    },
    "11418": {
      "op": "DUP1"
    },
    "11419": {
      "op": "SWAP2"
    },
    "11420": {
      "op": "POP"
    },
    "11421": {
      "op": "POP"
    },
    "11422": {
      "op": "SWAP3"
    },
    "11423": {
      "op": "POP"
    },
    "11424": {
      "op": "SWAP3"
    },
    "11425": {
      "op": "SWAP1"
    },
    "11426": {
      "op": "POP"
    },
    "11427": {
      "jump": "o",
      "op": "JUMP"
    },
    "11428": {
      "op": "JUMPDEST"
    },
    "11429": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11436": {
      "op": "SHL"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11439": {
      "op": "MSTORE"
    },
    "11440": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11442": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11444": {
      "op": "MSTORE"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11449": {
      "op": "REVERT"
    },
    "11450": {
      "op": "JUMPDEST"
    },
    "11451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11453": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11458": {
      "op": "DUP1"
    },
    "11459": {
      "op": "DUP4"
    },
    "11460": {
      "op": "AND"
    },
    "11461": {
      "op": "DUP2"
    },
    "11462": {
      "op": "DUP6"
    },
    "11463": {
      "op": "AND"
    },
    "11464": {
      "op": "DUP1"
    },
    "11465": {
      "op": "DUP4"
    },
    "11466": {
      "op": "SUB"
    },
    "11467": {
      "op": "DUP3"
    },
    "11468": {
      "op": "GT"
    },
    "11469": {
      "op": "ISZERO"
    },
    "11470": {
      "op": "PUSH2",
      "value": "0x2CD9"
    },
    "11473": {
      "op": "JUMPI"
    },
    "11474": {
      "op": "PUSH2",
      "value": "0x2CD9"
    },
    "11477": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11480": {
      "jump": "i",
      "op": "JUMP"
    },
    "11481": {
      "op": "JUMPDEST"
    },
    "11482": {
      "op": "ADD"
    },
    "11483": {
      "op": "SWAP5"
    },
    "11484": {
      "op": "SWAP4"
    },
    "11485": {
      "op": "POP"
    },
    "11486": {
      "op": "POP"
    },
    "11487": {
      "op": "POP"
    },
    "11488": {
      "op": "POP"
    },
    "11489": {
      "jump": "o",
      "op": "JUMP"
    },
    "11490": {
      "op": "JUMPDEST"
    },
    "11491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11493": {
      "op": "DUP3"
    },
    "11494": {
      "op": "DUP3"
    },
    "11495": {
      "op": "LT"
    },
    "11496": {
      "op": "ISZERO"
    },
    "11497": {
      "op": "PUSH2",
      "value": "0x2CF4"
    },
    "11500": {
      "op": "JUMPI"
    },
    "11501": {
      "op": "PUSH2",
      "value": "0x2CF4"
    },
    "11504": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11507": {
      "jump": "i",
      "op": "JUMP"
    },
    "11508": {
      "op": "JUMPDEST"
    },
    "11509": {
      "op": "POP"
    },
    "11510": {
      "op": "SUB"
    },
    "11511": {
      "op": "SWAP1"
    },
    "11512": {
      "jump": "o",
      "op": "JUMP"
    },
    "11513": {
      "op": "JUMPDEST"
    },
    "11514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11516": {
      "op": "DUP2"
    },
    "11517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11519": {
      "op": "NOT"
    },
    "11520": {
      "op": "DIV"
    },
    "11521": {
      "op": "DUP4"
    },
    "11522": {
      "op": "GT"
    },
    "11523": {
      "op": "DUP3"
    },
    "11524": {
      "op": "ISZERO"
    },
    "11525": {
      "op": "ISZERO"
    },
    "11526": {
      "op": "AND"
    },
    "11527": {
      "op": "ISZERO"
    },
    "11528": {
      "op": "PUSH2",
      "value": "0x2D13"
    },
    "11531": {
      "op": "JUMPI"
    },
    "11532": {
      "op": "PUSH2",
      "value": "0x2D13"
    },
    "11535": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11538": {
      "jump": "i",
      "op": "JUMP"
    },
    "11539": {
      "op": "JUMPDEST"
    },
    "11540": {
      "op": "POP"
    },
    "11541": {
      "op": "MUL"
    },
    "11542": {
      "op": "SWAP1"
    },
    "11543": {
      "jump": "o",
      "op": "JUMP"
    },
    "11544": {
      "op": "JUMPDEST"
    },
    "11545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11547": {
      "op": "DUP3"
    },
    "11548": {
      "op": "PUSH2",
      "value": "0x2D35"
    },
    "11551": {
      "op": "JUMPI"
    },
    "11552": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11559": {
      "op": "SHL"
    },
    "11560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11562": {
      "op": "MSTORE"
    },
    "11563": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11567": {
      "op": "MSTORE"
    },
    "11568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11572": {
      "op": "REVERT"
    },
    "11573": {
      "op": "JUMPDEST"
    },
    "11574": {
      "op": "POP"
    },
    "11575": {
      "op": "DIV"
    },
    "11576": {
      "op": "SWAP1"
    },
    "11577": {
      "jump": "o",
      "op": "JUMP"
    },
    "11578": {
      "op": "JUMPDEST"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11581": {
      "op": "DUP3"
    },
    "11582": {
      "op": "NOT"
    },
    "11583": {
      "op": "DUP3"
    },
    "11584": {
      "op": "GT"
    },
    "11585": {
      "op": "ISZERO"
    },
    "11586": {
      "op": "PUSH2",
      "value": "0x2D4D"
    },
    "11589": {
      "op": "JUMPI"
    },
    "11590": {
      "op": "PUSH2",
      "value": "0x2D4D"
    },
    "11593": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11596": {
      "jump": "i",
      "op": "JUMP"
    },
    "11597": {
      "op": "JUMPDEST"
    },
    "11598": {
      "op": "POP"
    },
    "11599": {
      "op": "ADD"
    },
    "11600": {
      "op": "SWAP1"
    },
    "11601": {
      "jump": "o",
      "op": "JUMP"
    },
    "11602": {
      "op": "JUMPDEST"
    },
    "11603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11605": {
      "op": "DUP2"
    },
    "11606": {
      "op": "DUP2"
    },
    "11607": {
      "op": "SHR"
    },
    "11608": {
      "op": "SWAP1"
    },
    "11609": {
      "op": "DUP3"
    },
    "11610": {
      "op": "AND"
    },
    "11611": {
      "op": "DUP1"
    },
    "11612": {
      "op": "PUSH2",
      "value": "0x2D66"
    },
    "11615": {
      "op": "JUMPI"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11618": {
      "op": "DUP3"
    },
    "11619": {
      "op": "AND"
    },
    "11620": {
      "op": "SWAP2"
    },
    "11621": {
      "op": "POP"
    },
    "11622": {
      "op": "JUMPDEST"
    },
    "11623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11625": {
      "op": "DUP3"
    },
    "11626": {
      "op": "LT"
    },
    "11627": {
      "op": "DUP2"
    },
    "11628": {
      "op": "EQ"
    },
    "11629": {
      "op": "ISZERO"
    },
    "11630": {
      "op": "PUSH2",
      "value": "0x2D87"
    },
    "11633": {
      "op": "JUMPI"
    },
    "11634": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11641": {
      "op": "SHL"
    },
    "11642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11644": {
      "op": "MSTORE"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11649": {
      "op": "MSTORE"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11654": {
      "op": "REVERT"
    },
    "11655": {
      "op": "JUMPDEST"
    },
    "11656": {
      "op": "POP"
    },
    "11657": {
      "op": "SWAP2"
    },
    "11658": {
      "op": "SWAP1"
    },
    "11659": {
      "op": "POP"
    },
    "11660": {
      "jump": "o",
      "op": "JUMP"
    },
    "11661": {
      "op": "JUMPDEST"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11666": {
      "op": "DUP3"
    },
    "11667": {
      "op": "DUP5"
    },
    "11668": {
      "op": "SUB"
    },
    "11669": {
      "op": "SLT"
    },
    "11670": {
      "op": "ISZERO"
    },
    "11671": {
      "op": "PUSH2",
      "value": "0x2D9F"
    },
    "11674": {
      "op": "JUMPI"
    },
    "11675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11677": {
      "op": "DUP1"
    },
    "11678": {
      "op": "REVERT"
    },
    "11679": {
      "op": "JUMPDEST"
    },
    "11680": {
      "op": "DUP2"
    },
    "11681": {
      "op": "MLOAD"
    },
    "11682": {
      "op": "DUP1"
    },
    "11683": {
      "op": "ISZERO"
    },
    "11684": {
      "op": "ISZERO"
    },
    "11685": {
      "op": "DUP2"
    },
    "11686": {
      "op": "EQ"
    },
    "11687": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "11690": {
      "op": "JUMPI"
    },
    "11691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11693": {
      "op": "DUP1"
    },
    "11694": {
      "op": "REVERT"
    },
    "11695": {
      "op": "JUMPDEST"
    },
    "11696": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11701": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11703": {
      "op": "SHL"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11706": {
      "op": "MSTORE"
    },
    "11707": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11709": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11711": {
      "op": "MSTORE"
    },
    "11712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11716": {
      "op": "REVERT"
    },
    "11717": {
      "op": "JUMPDEST"
    },
    "11718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11722": {
      "op": "DUP3"
    },
    "11723": {
      "op": "DUP5"
    },
    "11724": {
      "op": "SUB"
    },
    "11725": {
      "op": "SLT"
    },
    "11726": {
      "op": "ISZERO"
    },
    "11727": {
      "op": "PUSH2",
      "value": "0x2DD7"
    },
    "11730": {
      "op": "JUMPI"
    },
    "11731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11733": {
      "op": "DUP1"
    },
    "11734": {
      "op": "REVERT"
    },
    "11735": {
      "op": "JUMPDEST"
    },
    "11736": {
      "op": "DUP2"
    },
    "11737": {
      "op": "MLOAD"
    },
    "11738": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "11741": {
      "op": "DUP2"
    },
    "11742": {
      "op": "PUSH2",
      "value": "0x2BEB"
    },
    "11745": {
      "jump": "i",
      "op": "JUMP"
    },
    "11746": {
      "op": "JUMPDEST"
    },
    "11747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11749": {
      "op": "DUP2"
    },
    "11750": {
      "op": "DUP2"
    },
    "11751": {
      "op": "JUMPDEST"
    },
    "11752": {
      "op": "DUP1"
    },
    "11753": {
      "op": "DUP6"
    },
    "11754": {
      "op": "GT"
    },
    "11755": {
      "op": "ISZERO"
    },
    "11756": {
      "op": "PUSH2",
      "value": "0x2E1D"
    },
    "11759": {
      "op": "JUMPI"
    },
    "11760": {
      "op": "DUP2"
    },
    "11761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11763": {
      "op": "NOT"
    },
    "11764": {
      "op": "DIV"
    },
    "11765": {
      "op": "DUP3"
    },
    "11766": {
      "op": "GT"
    },
    "11767": {
      "op": "ISZERO"
    },
    "11768": {
      "op": "PUSH2",
      "value": "0x2E03"
    },
    "11771": {
      "op": "JUMPI"
    },
    "11772": {
      "op": "PUSH2",
      "value": "0x2E03"
    },
    "11775": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11778": {
      "jump": "i",
      "op": "JUMP"
    },
    "11779": {
      "op": "JUMPDEST"
    },
    "11780": {
      "op": "DUP1"
    },
    "11781": {
      "op": "DUP6"
    },
    "11782": {
      "op": "AND"
    },
    "11783": {
      "op": "ISZERO"
    },
    "11784": {
      "op": "PUSH2",
      "value": "0x2E10"
    },
    "11787": {
      "op": "JUMPI"
    },
    "11788": {
      "op": "SWAP2"
    },
    "11789": {
      "op": "DUP2"
    },
    "11790": {
      "op": "MUL"
    },
    "11791": {
      "op": "SWAP2"
    },
    "11792": {
      "op": "JUMPDEST"
    },
    "11793": {
      "op": "SWAP4"
    },
    "11794": {
      "op": "DUP5"
    },
    "11795": {
      "op": "SHR"
    },
    "11796": {
      "op": "SWAP4"
    },
    "11797": {
      "op": "SWAP1"
    },
    "11798": {
      "op": "DUP1"
    },
    "11799": {
      "op": "MUL"
    },
    "11800": {
      "op": "SWAP1"
    },
    "11801": {
      "op": "PUSH2",
      "value": "0x2DE7"
    },
    "11804": {
      "op": "JUMP"
    },
    "11805": {
      "op": "JUMPDEST"
    },
    "11806": {
      "op": "POP"
    },
    "11807": {
      "op": "SWAP3"
    },
    "11808": {
      "op": "POP"
    },
    "11809": {
      "op": "SWAP3"
    },
    "11810": {
      "op": "SWAP1"
    },
    "11811": {
      "op": "POP"
    },
    "11812": {
      "jump": "o",
      "op": "JUMP"
    },
    "11813": {
      "op": "JUMPDEST"
    },
    "11814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11816": {
      "op": "DUP3"
    },
    "11817": {
      "op": "PUSH2",
      "value": "0x2E34"
    },
    "11820": {
      "op": "JUMPI"
    },
    "11821": {
      "op": "POP"
    },
    "11822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11824": {
      "op": "PUSH2",
      "value": "0xAD2"
    },
    "11827": {
      "op": "JUMP"
    },
    "11828": {
      "op": "JUMPDEST"
    },
    "11829": {
      "op": "DUP2"
    },
    "11830": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "11833": {
      "op": "JUMPI"
    },
    "11834": {
      "op": "POP"
    },
    "11835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11837": {
      "op": "PUSH2",
      "value": "0xAD2"
    },
    "11840": {
      "op": "JUMP"
    },
    "11841": {
      "op": "JUMPDEST"
    },
    "11842": {
      "op": "DUP2"
    },
    "11843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11845": {
      "op": "DUP2"
    },
    "11846": {
      "op": "EQ"
    },
    "11847": {
      "op": "PUSH2",
      "value": "0x2E57"
    },
    "11850": {
      "op": "JUMPI"
    },
    "11851": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11853": {
      "op": "DUP2"
    },
    "11854": {
      "op": "EQ"
    },
    "11855": {
      "op": "PUSH2",
      "value": "0x2E61"
    },
    "11858": {
      "op": "JUMPI"
    },
    "11859": {
      "op": "PUSH2",
      "value": "0x2E7D"
    },
    "11862": {
      "op": "JUMP"
    },
    "11863": {
      "op": "JUMPDEST"
    },
    "11864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11866": {
      "op": "SWAP2"
    },
    "11867": {
      "op": "POP"
    },
    "11868": {
      "op": "POP"
    },
    "11869": {
      "op": "PUSH2",
      "value": "0xAD2"
    },
    "11872": {
      "op": "JUMP"
    },
    "11873": {
      "op": "JUMPDEST"
    },
    "11874": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11876": {
      "op": "DUP5"
    },
    "11877": {
      "op": "GT"
    },
    "11878": {
      "op": "ISZERO"
    },
    "11879": {
      "op": "PUSH2",
      "value": "0x2E72"
    },
    "11882": {
      "op": "JUMPI"
    },
    "11883": {
      "op": "PUSH2",
      "value": "0x2E72"
    },
    "11886": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11889": {
      "jump": "i",
      "op": "JUMP"
    },
    "11890": {
      "op": "JUMPDEST"
    },
    "11891": {
      "op": "POP"
    },
    "11892": {
      "op": "POP"
    },
    "11893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11895": {
      "op": "DUP3"
    },
    "11896": {
      "op": "SHL"
    },
    "11897": {
      "op": "PUSH2",
      "value": "0xAD2"
    },
    "11900": {
      "op": "JUMP"
    },
    "11901": {
      "op": "JUMPDEST"
    },
    "11902": {
      "op": "POP"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11905": {
      "op": "DUP4"
    },
    "11906": {
      "op": "LT"
    },
    "11907": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "11910": {
      "op": "DUP4"
    },
    "11911": {
      "op": "LT"
    },
    "11912": {
      "op": "AND"
    },
    "11913": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "11915": {
      "op": "DUP5"
    },
    "11916": {
      "op": "LT"
    },
    "11917": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "11919": {
      "op": "DUP5"
    },
    "11920": {
      "op": "LT"
    },
    "11921": {
      "op": "AND"
    },
    "11922": {
      "op": "OR"
    },
    "11923": {
      "op": "ISZERO"
    },
    "11924": {
      "op": "PUSH2",
      "value": "0x2EA0"
    },
    "11927": {
      "op": "JUMPI"
    },
    "11928": {
      "op": "POP"
    },
    "11929": {
      "op": "DUP2"
    },
    "11930": {
      "op": "DUP2"
    },
    "11931": {
      "op": "EXP"
    },
    "11932": {
      "op": "PUSH2",
      "value": "0xAD2"
    },
    "11935": {
      "op": "JUMP"
    },
    "11936": {
      "op": "JUMPDEST"
    },
    "11937": {
      "op": "PUSH2",
      "value": "0x2EAA"
    },
    "11940": {
      "op": "DUP4"
    },
    "11941": {
      "op": "DUP4"
    },
    "11942": {
      "op": "PUSH2",
      "value": "0x2DE2"
    },
    "11945": {
      "jump": "i",
      "op": "JUMP"
    },
    "11946": {
      "op": "JUMPDEST"
    },
    "11947": {
      "op": "DUP1"
    },
    "11948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11950": {
      "op": "NOT"
    },
    "11951": {
      "op": "DIV"
    },
    "11952": {
      "op": "DUP3"
    },
    "11953": {
      "op": "GT"
    },
    "11954": {
      "op": "ISZERO"
    },
    "11955": {
      "op": "PUSH2",
      "value": "0x2EBE"
    },
    "11958": {
      "op": "JUMPI"
    },
    "11959": {
      "op": "PUSH2",
      "value": "0x2EBE"
    },
    "11962": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "11965": {
      "jump": "i",
      "op": "JUMP"
    },
    "11966": {
      "op": "JUMPDEST"
    },
    "11967": {
      "op": "MUL"
    },
    "11968": {
      "op": "SWAP4"
    },
    "11969": {
      "op": "SWAP3"
    },
    "11970": {
      "op": "POP"
    },
    "11971": {
      "op": "POP"
    },
    "11972": {
      "op": "POP"
    },
    "11973": {
      "jump": "o",
      "op": "JUMP"
    },
    "11974": {
      "op": "JUMPDEST"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11977": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "11980": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11982": {
      "op": "DUP5"
    },
    "11983": {
      "op": "AND"
    },
    "11984": {
      "op": "DUP4"
    },
    "11985": {
      "op": "PUSH2",
      "value": "0x2E25"
    },
    "11988": {
      "jump": "i",
      "op": "JUMP"
    },
    "11989": {
      "op": "JUMPDEST"
    },
    "11990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11994": {
      "op": "NOT"
    },
    "11995": {
      "op": "DUP3"
    },
    "11996": {
      "op": "EQ"
    },
    "11997": {
      "op": "ISZERO"
    },
    "11998": {
      "op": "PUSH2",
      "value": "0x2EE9"
    },
    "12001": {
      "op": "JUMPI"
    },
    "12002": {
      "op": "PUSH2",
      "value": "0x2EE9"
    },
    "12005": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "12008": {
      "jump": "i",
      "op": "JUMP"
    },
    "12009": {
      "op": "JUMPDEST"
    },
    "12010": {
      "op": "POP"
    },
    "12011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12013": {
      "op": "ADD"
    },
    "12014": {
      "op": "SWAP1"
    },
    "12015": {
      "jump": "o",
      "op": "JUMP"
    },
    "12016": {
      "op": "JUMPDEST"
    },
    "12017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12019": {
      "op": "DUP2"
    },
    "12020": {
      "op": "MLOAD"
    },
    "12021": {
      "op": "DUP1"
    },
    "12022": {
      "op": "DUP5"
    },
    "12023": {
      "op": "MSTORE"
    },
    "12024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12026": {
      "op": "DUP1"
    },
    "12027": {
      "op": "DUP6"
    },
    "12028": {
      "op": "ADD"
    },
    "12029": {
      "op": "SWAP5"
    },
    "12030": {
      "op": "POP"
    },
    "12031": {
      "op": "DUP1"
    },
    "12032": {
      "op": "DUP5"
    },
    "12033": {
      "op": "ADD"
    },
    "12034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12036": {
      "op": "JUMPDEST"
    },
    "12037": {
      "op": "DUP4"
    },
    "12038": {
      "op": "DUP2"
    },
    "12039": {
      "op": "LT"
    },
    "12040": {
      "op": "ISZERO"
    },
    "12041": {
      "op": "PUSH2",
      "value": "0x2BCD"
    },
    "12044": {
      "op": "JUMPI"
    },
    "12045": {
      "op": "DUP2"
    },
    "12046": {
      "op": "MLOAD"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12053": {
      "op": "SHL"
    },
    "12054": {
      "op": "SUB"
    },
    "12055": {
      "op": "AND"
    },
    "12056": {
      "op": "DUP8"
    },
    "12057": {
      "op": "MSTORE"
    },
    "12058": {
      "op": "SWAP6"
    },
    "12059": {
      "op": "DUP3"
    },
    "12060": {
      "op": "ADD"
    },
    "12061": {
      "op": "SWAP6"
    },
    "12062": {
      "op": "SWAP1"
    },
    "12063": {
      "op": "DUP3"
    },
    "12064": {
      "op": "ADD"
    },
    "12065": {
      "op": "SWAP1"
    },
    "12066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12068": {
      "op": "ADD"
    },
    "12069": {
      "op": "PUSH2",
      "value": "0x2F04"
    },
    "12072": {
      "op": "JUMP"
    },
    "12073": {
      "op": "JUMPDEST"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12076": {
      "op": "DUP2"
    },
    "12077": {
      "op": "MLOAD"
    },
    "12078": {
      "op": "DUP1"
    },
    "12079": {
      "op": "DUP5"
    },
    "12080": {
      "op": "MSTORE"
    },
    "12081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12083": {
      "op": "DUP1"
    },
    "12084": {
      "op": "DUP6"
    },
    "12085": {
      "op": "ADD"
    },
    "12086": {
      "op": "SWAP5"
    },
    "12087": {
      "op": "POP"
    },
    "12088": {
      "op": "DUP1"
    },
    "12089": {
      "op": "DUP5"
    },
    "12090": {
      "op": "ADD"
    },
    "12091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12093": {
      "op": "JUMPDEST"
    },
    "12094": {
      "op": "DUP4"
    },
    "12095": {
      "op": "DUP2"
    },
    "12096": {
      "op": "LT"
    },
    "12097": {
      "op": "ISZERO"
    },
    "12098": {
      "op": "PUSH2",
      "value": "0x2BCD"
    },
    "12101": {
      "op": "JUMPI"
    },
    "12102": {
      "op": "DUP2"
    },
    "12103": {
      "op": "MLOAD"
    },
    "12104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12108": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12110": {
      "op": "SHL"
    },
    "12111": {
      "op": "SUB"
    },
    "12112": {
      "op": "AND"
    },
    "12113": {
      "op": "DUP8"
    },
    "12114": {
      "op": "MSTORE"
    },
    "12115": {
      "op": "SWAP6"
    },
    "12116": {
      "op": "DUP3"
    },
    "12117": {
      "op": "ADD"
    },
    "12118": {
      "op": "SWAP6"
    },
    "12119": {
      "op": "SWAP1"
    },
    "12120": {
      "op": "DUP3"
    },
    "12121": {
      "op": "ADD"
    },
    "12122": {
      "op": "SWAP1"
    },
    "12123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12125": {
      "op": "ADD"
    },
    "12126": {
      "op": "PUSH2",
      "value": "0x2F3D"
    },
    "12129": {
      "op": "JUMP"
    },
    "12130": {
      "op": "JUMPDEST"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12133": {
      "op": "DUP1"
    },
    "12134": {
      "op": "DUP3"
    },
    "12135": {
      "op": "MSTORE"
    },
    "12136": {
      "op": "DUP9"
    },
    "12137": {
      "op": "MLOAD"
    },
    "12138": {
      "op": "SWAP1"
    },
    "12139": {
      "op": "DUP3"
    },
    "12140": {
      "op": "ADD"
    },
    "12141": {
      "op": "DUP2"
    },
    "12142": {
      "op": "SWAP1"
    },
    "12143": {
      "op": "MSTORE"
    },
    "12144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12146": {
      "op": "SWAP1"
    },
    "12147": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12150": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12152": {
      "op": "DUP3"
    },
    "12153": {
      "op": "SWAP1"
    },
    "12154": {
      "op": "SHL"
    },
    "12155": {
      "op": "DUP5"
    },
    "12156": {
      "op": "ADD"
    },
    "12157": {
      "op": "DUP2"
    },
    "12158": {
      "op": "ADD"
    },
    "12159": {
      "op": "SWAP2"
    },
    "12160": {
      "op": "SWAP1"
    },
    "12161": {
      "op": "DUP5"
    },
    "12162": {
      "op": "ADD"
    },
    "12163": {
      "op": "SWAP1"
    },
    "12164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12166": {
      "op": "DUP1"
    },
    "12167": {
      "op": "DUP14"
    },
    "12168": {
      "op": "ADD"
    },
    "12169": {
      "op": "DUP6"
    },
    "12170": {
      "op": "JUMPDEST"
    },
    "12171": {
      "op": "DUP4"
    },
    "12172": {
      "op": "DUP2"
    },
    "12173": {
      "op": "LT"
    },
    "12174": {
      "op": "ISZERO"
    },
    "12175": {
      "op": "PUSH2",
      "value": "0x2FB8"
    },
    "12178": {
      "op": "JUMPI"
    },
    "12179": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12181": {
      "op": "NOT"
    },
    "12182": {
      "op": "DUP9"
    },
    "12183": {
      "op": "DUP8"
    },
    "12184": {
      "op": "SUB"
    },
    "12185": {
      "op": "ADD"
    },
    "12186": {
      "op": "DUP6"
    },
    "12187": {
      "op": "MSTORE"
    },
    "12188": {
      "op": "PUSH2",
      "value": "0x2FA6"
    },
    "12191": {
      "op": "DUP7"
    },
    "12192": {
      "op": "DUP4"
    },
    "12193": {
      "op": "MLOAD"
    },
    "12194": {
      "op": "PUSH2",
      "value": "0x2677"
    },
    "12197": {
      "jump": "i",
      "op": "JUMP"
    },
    "12198": {
      "op": "JUMPDEST"
    },
    "12199": {
      "op": "SWAP6"
    },
    "12200": {
      "op": "POP"
    },
    "12201": {
      "op": "SWAP4"
    },
    "12202": {
      "op": "DUP3"
    },
    "12203": {
      "op": "ADD"
    },
    "12204": {
      "op": "SWAP4"
    },
    "12205": {
      "op": "SWAP1"
    },
    "12206": {
      "op": "DUP3"
    },
    "12207": {
      "op": "ADD"
    },
    "12208": {
      "op": "SWAP1"
    },
    "12209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12211": {
      "op": "ADD"
    },
    "12212": {
      "op": "PUSH2",
      "value": "0x2F8A"
    },
    "12215": {
      "op": "JUMP"
    },
    "12216": {
      "op": "JUMPDEST"
    },
    "12217": {
      "op": "POP"
    },
    "12218": {
      "op": "POP"
    },
    "12219": {
      "op": "DUP6"
    },
    "12220": {
      "op": "DUP5"
    },
    "12221": {
      "op": "SUB"
    },
    "12222": {
      "op": "DUP2"
    },
    "12223": {
      "op": "DUP8"
    },
    "12224": {
      "op": "ADD"
    },
    "12225": {
      "op": "MSTORE"
    },
    "12226": {
      "op": "POP"
    },
    "12227": {
      "op": "POP"
    },
    "12228": {
      "op": "POP"
    },
    "12229": {
      "op": "PUSH2",
      "value": "0x2FCE"
    },
    "12232": {
      "op": "DUP2"
    },
    "12233": {
      "op": "DUP11"
    },
    "12234": {
      "op": "PUSH2",
      "value": "0x2EF0"
    },
    "12237": {
      "jump": "i",
      "op": "JUMP"
    },
    "12238": {
      "op": "JUMPDEST"
    },
    "12239": {
      "op": "SWAP1"
    },
    "12240": {
      "op": "POP"
    },
    "12241": {
      "op": "DUP3"
    },
    "12242": {
      "op": "DUP2"
    },
    "12243": {
      "op": "SUB"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12246": {
      "op": "DUP5"
    },
    "12247": {
      "op": "ADD"
    },
    "12248": {
      "op": "MSTORE"
    },
    "12249": {
      "op": "PUSH2",
      "value": "0x2FE2"
    },
    "12252": {
      "op": "DUP2"
    },
    "12253": {
      "op": "DUP10"
    },
    "12254": {
      "op": "PUSH2",
      "value": "0x2F29"
    },
    "12257": {
      "jump": "i",
      "op": "JUMP"
    },
    "12258": {
      "op": "JUMPDEST"
    },
    "12259": {
      "op": "SWAP1"
    },
    "12260": {
      "op": "POP"
    },
    "12261": {
      "op": "DUP3"
    },
    "12262": {
      "op": "DUP2"
    },
    "12263": {
      "op": "SUB"
    },
    "12264": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12266": {
      "op": "DUP5"
    },
    "12267": {
      "op": "ADD"
    },
    "12268": {
      "op": "MSTORE"
    },
    "12269": {
      "op": "PUSH2",
      "value": "0x2FF6"
    },
    "12272": {
      "op": "DUP2"
    },
    "12273": {
      "op": "DUP9"
    },
    "12274": {
      "op": "PUSH2",
      "value": "0x2EF0"
    },
    "12277": {
      "jump": "i",
      "op": "JUMP"
    },
    "12278": {
      "op": "JUMPDEST"
    },
    "12279": {
      "op": "SWAP1"
    },
    "12280": {
      "op": "POP"
    },
    "12281": {
      "op": "DUP3"
    },
    "12282": {
      "op": "DUP2"
    },
    "12283": {
      "op": "SUB"
    },
    "12284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12286": {
      "op": "DUP5"
    },
    "12287": {
      "op": "ADD"
    },
    "12288": {
      "op": "MSTORE"
    },
    "12289": {
      "op": "PUSH2",
      "value": "0x300A"
    },
    "12292": {
      "op": "DUP2"
    },
    "12293": {
      "op": "DUP8"
    },
    "12294": {
      "op": "PUSH2",
      "value": "0x2B9D"
    },
    "12297": {
      "jump": "i",
      "op": "JUMP"
    },
    "12298": {
      "op": "JUMPDEST"
    },
    "12299": {
      "op": "SWAP2"
    },
    "12300": {
      "op": "POP"
    },
    "12301": {
      "op": "POP"
    },
    "12302": {
      "op": "PUSH2",
      "value": "0x301F"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12307": {
      "op": "DUP4"
    },
    "12308": {
      "op": "ADD"
    },
    "12309": {
      "op": "DUP6"
    },
    "12310": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "12315": {
      "op": "AND"
    },
    "12316": {
      "op": "SWAP1"
    },
    "12317": {
      "op": "MSTORE"
    },
    "12318": {
      "op": "JUMP"
    },
    "12319": {
      "op": "JUMPDEST"
    },
    "12320": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "12325": {
      "op": "DUP4"
    },
    "12326": {
      "op": "AND"
    },
    "12327": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12329": {
      "op": "DUP4"
    },
    "12330": {
      "op": "ADD"
    },
    "12331": {
      "op": "MSTORE"
    },
    "12332": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "12335": {
      "op": "JUMP"
    },
    "12336": {
      "op": "JUMPDEST"
    },
    "12337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12339": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "12344": {
      "op": "DUP4"
    },
    "12345": {
      "op": "DUP2"
    },
    "12346": {
      "op": "AND"
    },
    "12347": {
      "op": "SWAP1"
    },
    "12348": {
      "op": "DUP4"
    },
    "12349": {
      "op": "AND"
    },
    "12350": {
      "op": "DUP2"
    },
    "12351": {
      "op": "DUP2"
    },
    "12352": {
      "op": "LT"
    },
    "12353": {
      "op": "ISZERO"
    },
    "12354": {
      "op": "PUSH2",
      "value": "0x304D"
    },
    "12357": {
      "op": "JUMPI"
    },
    "12358": {
      "op": "PUSH2",
      "value": "0x304D"
    },
    "12361": {
      "op": "PUSH2",
      "value": "0x2CA4"
    },
    "12364": {
      "jump": "i",
      "op": "JUMP"
    },
    "12365": {
      "op": "JUMPDEST"
    },
    "12366": {
      "op": "SUB"
    },
    "12367": {
      "op": "SWAP4"
    },
    "12368": {
      "op": "SWAP3"
    },
    "12369": {
      "op": "POP"
    },
    "12370": {
      "op": "POP"
    },
    "12371": {
      "op": "POP"
    },
    "12372": {
      "jump": "o",
      "op": "JUMP"
    },
    "12373": {
      "op": "JUMPDEST"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12378": {
      "op": "DUP3"
    },
    "12379": {
      "op": "DUP5"
    },
    "12380": {
      "op": "SUB"
    },
    "12381": {
      "op": "SLT"
    },
    "12382": {
      "op": "ISZERO"
    },
    "12383": {
      "op": "PUSH2",
      "value": "0x3067"
    },
    "12386": {
      "op": "JUMPI"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12389": {
      "op": "DUP1"
    },
    "12390": {
      "op": "REVERT"
    },
    "12391": {
      "op": "JUMPDEST"
    },
    "12392": {
      "op": "POP"
    },
    "12393": {
      "op": "MLOAD"
    },
    "12394": {
      "op": "SWAP2"
    },
    "12395": {
      "op": "SWAP1"
    },
    "12396": {
      "op": "POP"
    },
    "12397": {
      "jump": "o",
      "op": "JUMP"
    },
    "12398": {
      "op": "JUMPDEST"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12401": {
      "op": "DUP1"
    },
    "12402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12404": {
      "op": "SHL"
    },
    "12405": {
      "op": "SUB"
    },
    "12406": {
      "op": "DUP6"
    },
    "12407": {
      "op": "AND"
    },
    "12408": {
      "op": "DUP2"
    },
    "12409": {
      "op": "MSTORE"
    },
    "12410": {
      "op": "DUP4"
    },
    "12411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12413": {
      "op": "DUP3"
    },
    "12414": {
      "op": "ADD"
    },
    "12415": {
      "op": "MSTORE"
    },
    "12416": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12418": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12420": {
      "op": "DUP3"
    },
    "12421": {
      "op": "ADD"
    },
    "12422": {
      "op": "MSTORE"
    },
    "12423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12425": {
      "op": "PUSH2",
      "value": "0x3095"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12430": {
      "op": "DUP4"
    },
    "12431": {
      "op": "ADD"
    },
    "12432": {
      "op": "DUP6"
    },
    "12433": {
      "op": "PUSH2",
      "value": "0x2EF0"
    },
    "12436": {
      "jump": "i",
      "op": "JUMP"
    },
    "12437": {
      "op": "JUMPDEST"
    },
    "12438": {
      "op": "DUP3"
    },
    "12439": {
      "op": "DUP2"
    },
    "12440": {
      "op": "SUB"
    },
    "12441": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12443": {
      "op": "DUP5"
    },
    "12444": {
      "op": "ADD"
    },
    "12445": {
      "op": "MSTORE"
    },
    "12446": {
      "op": "PUSH2",
      "value": "0x30A7"
    },
    "12449": {
      "op": "DUP2"
    },
    "12450": {
      "op": "DUP6"
    },
    "12451": {
      "op": "PUSH2",
      "value": "0x2B9D"
    },
    "12454": {
      "jump": "i",
      "op": "JUMP"
    },
    "12455": {
      "op": "JUMPDEST"
    },
    "12456": {
      "op": "SWAP8"
    },
    "12457": {
      "op": "SWAP7"
    },
    "12458": {
      "op": "POP"
    },
    "12459": {
      "op": "POP"
    },
    "12460": {
      "op": "POP"
    },
    "12461": {
      "op": "POP"
    },
    "12462": {
      "op": "POP"
    },
    "12463": {
      "op": "POP"
    },
    "12464": {
      "op": "POP"
    },
    "12465": {
      "jump": "o",
      "op": "JUMP"
    },
    "12466": {
      "op": "JUMPDEST"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12469": {
      "op": "DUP1"
    },
    "12470": {
      "op": "DUP4"
    },
    "12471": {
      "op": "SLOAD"
    },
    "12472": {
      "op": "DUP2"
    },
    "12473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12475": {
      "op": "DUP3"
    },
    "12476": {
      "op": "DUP2"
    },
    "12477": {
      "op": "SHR"
    },
    "12478": {
      "op": "SWAP2"
    },
    "12479": {
      "op": "POP"
    },
    "12480": {
      "op": "DUP1"
    },
    "12481": {
      "op": "DUP4"
    },
    "12482": {
      "op": "AND"
    },
    "12483": {
      "op": "DUP1"
    },
    "12484": {
      "op": "PUSH2",
      "value": "0x30CE"
    },
    "12487": {
      "op": "JUMPI"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12490": {
      "op": "DUP4"
    },
    "12491": {
      "op": "AND"
    },
    "12492": {
      "op": "SWAP3"
    },
    "12493": {
      "op": "POP"
    },
    "12494": {
      "op": "JUMPDEST"
    },
    "12495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12497": {
      "op": "DUP1"
    },
    "12498": {
      "op": "DUP5"
    },
    "12499": {
      "op": "LT"
    },
    "12500": {
      "op": "DUP3"
    },
    "12501": {
      "op": "EQ"
    },
    "12502": {
      "op": "ISZERO"
    },
    "12503": {
      "op": "PUSH2",
      "value": "0x30EE"
    },
    "12506": {
      "op": "JUMPI"
    },
    "12507": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12514": {
      "op": "SHL"
    },
    "12515": {
      "op": "DUP7"
    },
    "12516": {
      "op": "MSTORE"
    },
    "12517": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12519": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12521": {
      "op": "MSTORE"
    },
    "12522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12524": {
      "op": "DUP7"
    },
    "12525": {
      "op": "REVERT"
    },
    "12526": {
      "op": "JUMPDEST"
    },
    "12527": {
      "op": "DUP2"
    },
    "12528": {
      "op": "DUP1"
    },
    "12529": {
      "op": "ISZERO"
    },
    "12530": {
      "op": "PUSH2",
      "value": "0x3102"
    },
    "12533": {
      "op": "JUMPI"
    },
    "12534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12536": {
      "op": "DUP2"
    },
    "12537": {
      "op": "EQ"
    },
    "12538": {
      "op": "PUSH2",
      "value": "0x3113"
    },
    "12541": {
      "op": "JUMPI"
    },
    "12542": {
      "op": "PUSH2",
      "value": "0x3140"
    },
    "12545": {
      "op": "JUMP"
    },
    "12546": {
      "op": "JUMPDEST"
    },
    "12547": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12549": {
      "op": "NOT"
    },
    "12550": {
      "op": "DUP7"
    },
    "12551": {
      "op": "AND"
    },
    "12552": {
      "op": "DUP10"
    },
    "12553": {
      "op": "MSTORE"
    },
    "12554": {
      "op": "DUP5"
    },
    "12555": {
      "op": "DUP10"
    },
    "12556": {
      "op": "ADD"
    },
    "12557": {
      "op": "SWAP7"
    },
    "12558": {
      "op": "POP"
    },
    "12559": {
      "op": "PUSH2",
      "value": "0x3140"
    },
    "12562": {
      "op": "JUMP"
    },
    "12563": {
      "op": "JUMPDEST"
    },
    "12564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12566": {
      "op": "DUP11"
    },
    "12567": {
      "op": "DUP2"
    },
    "12568": {
      "op": "MSTORE"
    },
    "12569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12571": {
      "op": "SWAP1"
    },
    "12572": {
      "op": "KECCAK256"
    },
    "12573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12575": {
      "op": "JUMPDEST"
    },
    "12576": {
      "op": "DUP7"
    },
    "12577": {
      "op": "DUP2"
    },
    "12578": {
      "op": "LT"
    },
    "12579": {
      "op": "ISZERO"
    },
    "12580": {
      "op": "PUSH2",
      "value": "0x3138"
    },
    "12583": {
      "op": "JUMPI"
    },
    "12584": {
      "op": "DUP2"
    },
    "12585": {
      "op": "SLOAD"
    },
    "12586": {
      "op": "DUP12"
    },
    "12587": {
      "op": "DUP3"
    },
    "12588": {
      "op": "ADD"
    },
    "12589": {
      "op": "MSTORE"
    },
    "12590": {
      "op": "SWAP1"
    },
    "12591": {
      "op": "DUP6"
    },
    "12592": {
      "op": "ADD"
    },
    "12593": {
      "op": "SWAP1"
    },
    "12594": {
      "op": "DUP4"
    },
    "12595": {
      "op": "ADD"
    },
    "12596": {
      "op": "PUSH2",
      "value": "0x311F"
    },
    "12599": {
      "op": "JUMP"
    },
    "12600": {
      "op": "JUMPDEST"
    },
    "12601": {
      "op": "POP"
    },
    "12602": {
      "op": "POP"
    },
    "12603": {
      "op": "DUP5"
    },
    "12604": {
      "op": "DUP10"
    },
    "12605": {
      "op": "ADD"
    },
    "12606": {
      "op": "SWAP7"
    },
    "12607": {
      "op": "POP"
    },
    "12608": {
      "op": "JUMPDEST"
    },
    "12609": {
      "op": "POP"
    },
    "12610": {
      "op": "SWAP5"
    },
    "12611": {
      "op": "SWAP9"
    },
    "12612": {
      "op": "SWAP8"
    },
    "12613": {
      "op": "POP"
    },
    "12614": {
      "op": "POP"
    },
    "12615": {
      "op": "POP"
    },
    "12616": {
      "op": "POP"
    },
    "12617": {
      "op": "POP"
    },
    "12618": {
      "op": "POP"
    },
    "12619": {
      "op": "POP"
    },
    "12620": {
      "op": "POP"
    },
    "12621": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6b03b0cb756008c7737a0d12970c72a6361dafb1",
  "source": "pragma solidity ^0.8.0;\n\nimport \"../interfaces/IBuidlCollective.sol\";\nimport {ERC20} from \"./solmate/src/tokens/ERC20.sol\";\n//  ________  ________  ________\n//  |\\   ____\\|\\   __  \\|\\   __  \\\n//  \\ \\  \\___|\\ \\  \\|\\  \\ \\  \\|\\  \\\n//   \\ \\  \\  __\\ \\   _  _\\ \\  \\\\\\  \\\n//    \\ \\  \\|\\  \\ \\  \\\\  \\\\ \\  \\\\\\  \\\n//     \\ \\_______\\ \\__\\\\ _\\\\ \\_______\\\n//      \\|_______|\\|__|\\|__|\\|_______|\n\n// gro protocol: @TODO add the url of the monorepo\n\n/// @title BuidlCollective\n/// @notice Create a uniform vesting schedule for multiple underlying tokens, which can be redeemed gradually through staking the ERC20 representation LP token.\n///     ###############################################\n///     BuidlCollective Specification\n///     The BuidlCollective provides a way for co-vesting to be implemented on the block chain,\n///         allowing multiple parties who seek to co-vest their tokens to initialize a collective,\n///         providing approval for their corresponding liquid tokens, and start the vesting sychronously. \n///         After the covesting is started, underlying tokens would be released according to the schedule and \n///         be allocated to the staked ERC20 representation LP proportionally. Each LP tokens are guarantteed the \n///         same amount of underlying tokens. \n///     LP tokens can be freely transferred but would need to undergo staking in order to convert to the underlying tokens.\n///     If 100% of representation LP tokens are staked, then the staked LP tokens are converted to underlying tokens\n///     just like the vesting schedule\n///     If 50% of representation LP tokens are staked, then the staked LP tokens are converted to underlying tokens\n///     with half of the vesting time needed. \n///\n///     There is a 3-day releaseFactor that adjusts the rate staking position can claim their underlying tokens.\n///     If a staked position can convert LP to 1% of the underlying tokens by staking 5 days. Since 5 days is more \n///     than the releaseFactor (3-day), 1% full amount is converted. \n///     If a staked position can convert LP to 1% of the underlying tokens by staking 1.5 days. Since 1.5 days is less\n///     than the releaseFactor (3-day), pro-rated amount is converted, in this case, 1.5/3 * 1% = 0.5% is converted.\n///     ###############################################\n///\ncontract BuidlCollective is ERC20, IBuidlCollective {\n    /*//////////////////////////////////////////////////////////////\n                        CONSTANTS & IMMUTABLES\n    //////////////////////////////////////////////////////////////*/\n    uint32 public constant BP = 10000;\n    uint256 public constant VEST_MULTIPLIER = 10 ** 18;\n\n    /*//////////////////////////////////////////////////////////////\n                            STRUCT\n    //////////////////////////////////////////////////////////////*/\n    struct Collective {\n        // the period of vesting (in second)\n        uint32 vestingTime;\n        // the added time (in second) upon startCollective() before vesting begins\n        uint32 cliff;\n        // variable to log the startTime, would log the block.timestamp during startCollective()\n        uint32 collectiveStart;\n    }\n\n    struct TokenInfo {\n        // target quantity of the token\n        uint256 target;\n        // target price of the token\n        uint128 price;\n        // user who would provide approval of pulling fund from, would also receive the representation tokens for redeem\n        address user;\n    }\n\n    struct UserInfo {\n        // percentage(bp) multiplied by VEST_MULTIPLIER\n        uint256 depositedShare;\n        // last TWAP during stake/unstake/claim\n        uint256 lastCheckpointTWAP;\n        // last timestamp during stake/unstake/claim\n        uint256 lastCheckpointTime;\n        // last percentageVested for the entire vestingSchedule during stake/unstake/claim\n        uint256 lastCheckpointPercentageVested;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n            COLLECTIVE INITIALIZATION RELATED VARIABLES\n    //////////////////////////////////////////////////////////////*/\n\n    bool collectiveStarted;\n    bool collectiveInitialized;\n\n    address public admin;\n\n    string[] public namesOfParticipants;\n    uint256 public noOfTokens;\n\n    address[] public tokens;\n\n    mapping(address => TokenInfo) public tokenInfo;\n\n    uint256 public totalAssets;\n\n    Collective public collectiveInfo;\n\n    /*//////////////////////////////////////////////////////////////\n                    STAKING RELATED VARIABLES\n    //////////////////////////////////////////////////////////////*/\n    \n    // to adjust rate of claimable get released to staker\n    uint256 public releaseFactor = 86400 * 3;\n    \n    mapping(address => UserInfo) public userInfo;\n    // timestamp for checkpointing\n    uint256 public lastCheckpoint;\n    // a checkpoint number based on percentageStaked(bp) * number of second passed\n    uint256 public lastTWAP;\n    // totalStaked of asset in absolute values\n    uint256 public totalStaked;\n    \n\n    modifier onlyAdmin() {\n        require(msg.sender == admin);\n        _;\n    }\n\n    /// @notice update lastTWAP and lastCheckpoint.\n    ///     this function is called during stake/claim/unstake\n    modifier updateCheckpoint() {\n        if (block.timestamp > lastCheckpoint) {\n            lastTWAP +=\n                (totalStaked * BP * (block.timestamp - lastCheckpoint)) /\n                totalAssets;\n            lastCheckpoint = block.timestamp;\n            _;\n        } else {\n            _;\n        }\n    }\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) ERC20(_name, _symbol, _decimals) {\n        admin = msg.sender;\n        emit LogNewAdmin(admin);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            SETTERS\n    //////////////////////////////////////////////////////////////*/\n    ///  @notice admin function to initialize a collective\n    ///  this version assumes 1 tokens are sent in by 1 address\n    ///  @param _namesOfParticipants name of participants\n    ///  @param _collectiveInfo defines vestingPeriod and cliff, startTime would be override in startCollective()\n    ///  @param _tokens name of participants\n    ///  @param _prices price of each tokens, would be used for calculating shares with _targets\n    ///  @param _users address of users to pull funds during startCollective()\n    ///  @param _targets tokens amounts\n    ///  TODO: change name and symbol of token => name of collective\n    function initialize(\n        string[] memory _namesOfParticipants,\n        Collective memory _collectiveInfo,\n        address[] memory _tokens,\n        uint128[] memory _prices,\n        address[] memory _users,\n        uint256[] memory _targets\n    ) external {\n        require(collectiveInitialized == false);\n        collectiveInitialized = true;\n        admin = msg.sender;\n        collectiveInfo = _collectiveInfo;\n        collectiveInfo.collectiveStart = 0;\n        uint256 tokenLength = _tokens.length;\n        for (uint256 i = 0; i < tokenLength; i++) {\n            require(tokenInfo[_tokens[i]].price == 0, \"TOKEN ADDRESS ALREADY INITIALIZED\");\n            namesOfParticipants.push(_namesOfParticipants[i]);\n            TokenInfo memory t = TokenInfo(_targets[i], _prices[i], _users[i]);\n            tokenInfo[_tokens[i]] = t;\n            tokens.push(_tokens[i]);\n        }\n        noOfTokens = tokens.length;\n        emit LogNewCollectiveInitialized(\n            _namesOfParticipants,\n            _tokens,\n            _prices,\n            _users,\n            _targets,\n            collectiveInfo.cliff,\n            collectiveInfo.vestingTime\n        );\n    }\n    ///  @notice admin function to cancel a collective, only before startCollective()\n    ///  @param _to address to send back the eth during contract deployment\n    function cancel(address payable _to) external onlyAdmin {\n        require(collectiveStarted == false);\n        selfdestruct(_to);\n    }\n\n    ///  @notice admin function to transfer admin ownership\n    ///  @param _newAdmin address of new admin\n    function updateAdmin(address _newAdmin) external onlyAdmin {\n        admin = _newAdmin;\n        emit LogNewAdmin(_newAdmin);\n    }\n\n    ///  @notice admin function to start the collective\n    ///     during starting the contract would pull the predefined quantities of tokens \n    ///     from the users defined in initialize()\n    ///     any user defined in the initialize() that has not done approve in advance for their tokens\n    ///     would lead to failure of this function\n    function startCollective() external onlyAdmin {\n        require(collectiveStarted == false);\n        collectiveStarted = true;\n        address[] memory _tokens = tokens;\n        TokenInfo memory _tokenInfo;\n        uint256 _totalAssets;\n        for (uint256 i; i < _tokens.length; i++) {\n            _tokenInfo = tokenInfo[_tokens[i]];\n            uint256 target = _tokenInfo.target;\n            address contributor = _tokenInfo.user;\n            uint128 price = _tokenInfo.price;\n            ERC20(_tokens[i]).transferFrom(contributor, address(this), target);\n            uint256 assetValue = (target * price * 10 ** 18) /\n                10 ** ERC20(_tokens[i]).decimals();\n            _totalAssets += assetValue;\n            _mint(contributor, assetValue);\n        }\n        collectiveInfo.collectiveStart = uint32(block.timestamp);\n        lastCheckpoint = collectiveInfo.collectiveStart + collectiveInfo.cliff;\n        totalAssets = _totalAssets;\n        emit LogNewPoolInitialized(block.timestamp);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            VIEW LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice function to read a defined tokens' address and specification in the collective\n    /// @param  _tokenId position of the token during initialize()\n    function readToken(\n        uint256 _tokenId\n    ) public view returns (address, TokenInfo memory) {\n        address tokenAddr = tokens[_tokenId];\n        return (tokenAddr, tokenInfo[tokenAddr]);\n    }\n\n    /// @notice only when all tokens involved return true can the admin start the collective \n    /// @return return if tokens approval is completed for each tokens involved\n    function pokeApproval() public view returns (bool[] memory) {\n        bool[] memory approvals = new bool[](tokens.length);\n        address contributor;\n        uint256 allowance;\n        for (uint256 i; i < tokens.length; i++) {\n            contributor = tokenInfo[tokens[i]].user;\n            allowance = ERC20(tokens[i]).allowance(contributor, address(this));\n            if (allowance >= tokenInfo[tokens[i]].target) {\n                approvals[i] = true;\n            } else {\n                approvals[i] = false;\n            }\n        }\n        return approvals;\n    }\n\n    /// @notice function to read a staker's claimable\n    /// @param  _staker address of staker\n    /// @return the amounts of underlying tokens\n    function getClaimable(address _staker) public view returns (uint256[] memory) {\n        uint256 share = calculateShareToClaim(_staker);\n        uint256[] memory _claimables = new uint256[](tokens.length);\n        for (uint256 i = 0; i < tokens.length; i++) {\n            _claimables[i] = convertShareToToken(share, i);\n        }\n\n        return _claimables;\n    }\n\n    /// @notice calculate the shares (in BPs) to claim for a particular user\n    ///     updated = true means updateCheckpoint is run aldy, used in state transition function\n    ///     updated = false means updateCheckpoint is not run, used in view function\n    /// @param _staker address of the staker\n    /// @return percentage of shares (in BPs)\n    /// @dev releaseFactor plays a role in slowly releasing the vested amounts\n    function calculateShareToClaim(\n        address _staker\n    ) public view returns (uint256) {\n        if (block.timestamp <= userInfo[_staker].lastCheckpointTime) return 0;\n        if (block.timestamp <= (collectiveInfo.collectiveStart + collectiveInfo.cliff)) return 0;\n        uint256 elapsedVestingPercentage = getVestingPercent() -\n            userInfo[_staker].lastCheckpointPercentageVested;\n        \n        uint256 elapsedTime = userInfo[_staker].lastCheckpointTime < (collectiveInfo.collectiveStart + collectiveInfo.cliff) \n        ?   \n        block.timestamp -\n        collectiveInfo.cliff -\n        collectiveInfo.collectiveStart\n        :\n        block.timestamp -\n        userInfo[_staker].lastCheckpointTime;    \n\n        uint256 elapsedTWAP = lastCheckpoint < (collectiveInfo.collectiveStart + collectiveInfo.cliff)\n        ?\n        lastTWAP -\n        userInfo[_staker].lastCheckpointTWAP +\n        (totalStaked * BP * (block.timestamp - (collectiveInfo.collectiveStart + collectiveInfo.cliff))) /\n        totalAssets\n        :\n        lastTWAP -\n        userInfo[_staker].lastCheckpointTWAP +\n        (totalStaked * BP * (block.timestamp - lastCheckpoint)) /\n        totalAssets;\n\n        uint256 avgPercentageStaked = elapsedTWAP / elapsedTime;\n\n        if (avgPercentageStaked == 0) return 0;\n        // user's percentage out of allStaked during the period\n        uint256 userShareOfStaked = (userInfo[_staker].depositedShare * BP) /\n            avgPercentageStaked;\n        // user can get elapsedAmount\n        uint256 userEntitlement = (elapsedVestingPercentage *\n            userShareOfStaked) / BP / VEST_MULTIPLIER;\n\n        if (elapsedTime >= releaseFactor) {\n            return userEntitlement;\n        } else {\n            return (userEntitlement * elapsedTime) / releaseFactor;\n        }\n    }\n\n    /// @notice helper function to calculate the percentage (in BPs) of share vested in the vesting schedule\n    /// @return percentage of shares (in BPs) * VEST_MULTIPLIER\n    function getVestingPercent() public view returns (uint256) {\n        uint32 startTime = collectiveInfo.collectiveStart;\n        if (startTime == 0) return 0;\n        uint32 vestingTime = collectiveInfo.vestingTime;\n        uint32 timePassed = uint32(block.timestamp) - startTime;\n        if ((vestingTime + collectiveInfo.cliff) <= timePassed) return BP * VEST_MULTIPLIER;\n        if (timePassed <= collectiveInfo.cliff) return 0;\n        return VEST_MULTIPLIER * uint256(timePassed - collectiveInfo.cliff) * BP / uint256(vestingTime);\n    }\n\n    /// @notice helper function to calculate the amount of underlying tokens based on the percentage (in BPs) of share \n    /// @param  _share   percentage of shares (in BPs)\n    /// @param  _tokenId position of the tokenId\n    /// @return amount of a particular token\n    function convertShareToToken(\n        uint256 _share,\n        uint256 _tokenId\n    ) internal view returns (uint256) {\n        require(_tokenId < tokens.length, \"tokenId OUT OF BOUND\");\n        return\n            (tokenInfo[tokens[_tokenId]].target * _share) / VEST_MULTIPLIER / BP;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        STAKE/CLAIM/UNSTAKE LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice staking ERC20 representation tokens would slowly convert your representation tokens to the underlying tokens\n    ///     if the vesting schedule has already started. \n    /// @param _assetValue the amount of ERC20 representation tokens to stake\n    function stake(uint256 _assetValue) external updateCheckpoint {\n        address from = msg.sender;\n        address to = address(this);\n\n        require(balanceOf[from] >= _assetValue, \"USER BALANCE NOT ENOUGH\");\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[from] -= _assetValue;\n            balanceOf[to] += _assetValue;\n        }\n\n        uint256 _depositedShare = (_assetValue * BP * VEST_MULTIPLIER) /\n            totalAssets;\n        uint256 _lastCheckpointTWAP = lastTWAP;\n        uint256 _lastCheckpointTime = block.timestamp;\n        uint256 _lastCheckpointPercentageVested = getVestingPercent();\n        UserInfo memory _stakePosition = UserInfo(\n            _depositedShare,\n            _lastCheckpointTWAP,\n            _lastCheckpointTime,\n            _lastCheckpointPercentageVested\n        );\n        userInfo[msg.sender] = _stakePosition;\n        totalStaked += _assetValue;\n        emit Transfer(from, to, _assetValue);\n        emit LogTokensStaked(\n            msg.sender,\n            _assetValue,\n            _depositedShare,\n            _lastCheckpointTWAP,\n            _lastCheckpointTime,\n            _lastCheckpointPercentageVested\n        );\n    }\n\n    /// @notice unstake and withdraw the ERC20 representation tokens that are previously staked\n    ///     without claiming, essentially forsaking the claimable\n    /// @param _assetValueLeft the amount of ERC20 representation tokens to unstake\n    /// @dev the unstake amount can be as big as the previously staked amount\n    function unstakeWithoutClaim(uint256 _assetValueLeft) external {\n        uint256 unstakedShare = (_assetValueLeft * BP * VEST_MULTIPLIER) / totalAssets;\n        require(\n            unstakedShare <= userInfo[msg.sender].depositedShare,\n            \"UNSTAKE AMOUNT TOO BIG\"\n        );\n        userInfo[msg.sender].depositedShare -= unstakedShare;\n        ERC20(address(this)).transfer(msg.sender, _assetValueLeft);\n        emit LogTokensUnstaked(msg.sender, _assetValueLeft, unstakedShare, lastTWAP, block.timestamp, getVestingPercent());\n    }\n    \n    /// @notice unstake and withdraw the ERC20 representation tokens that are previously staked\n    ///     if any of them is not converted to underlying tokens.\n    /// @param _assetValueLeft the amount of ERC20 representation tokens to unstake\n    /// @dev the unstake amount should be the remainder of claimable since the function would call claim first.\n    function unstake(uint256 _assetValueLeft) external updateCheckpoint {\n        _claim(msg.sender);\n        uint256 unstakedShare = (_assetValueLeft * BP * VEST_MULTIPLIER) / totalAssets;\n        require(\n            unstakedShare <= userInfo[msg.sender].depositedShare,\n            \"UNSTAKE AMOUNT TOO BIG\"\n        );\n        userInfo[msg.sender].depositedShare -= unstakedShare;\n        ERC20(address(this)).transfer(msg.sender, _assetValueLeft);\n        emit LogTokensUnstaked(msg.sender, _assetValueLeft, unstakedShare, lastTWAP, block.timestamp, getVestingPercent());\n    }\n\n    /// @notice unstake and withdraw ALL the ERC20 representation tokens that are previously staked\n    ///     if any of them is not converted to underlying tokens.\n    function unstakeAll() external updateCheckpoint {\n        if (userInfo[msg.sender].depositedShare == 0) return;\n        _claim(msg.sender);\n        uint256 prevDepositedShare = userInfo[msg.sender].depositedShare;\n        uint256 assetValue = (prevDepositedShare *\n            totalAssets) /\n            VEST_MULTIPLIER /\n            BP;\n        ERC20(address(this)).transfer(msg.sender, assetValue);\n        userInfo[msg.sender].depositedShare = 0;\n        emit LogTokensUnstaked(msg.sender, assetValue, prevDepositedShare, lastTWAP, block.timestamp, getVestingPercent());\n    }\n\n    /// @notice claim would convert the ERC20 representation tokens into the underlying tokens based on the claimable quota.\n    function claim() external updateCheckpoint returns (uint256 share) {\n        uint256 share = _claim(msg.sender);\n        return share;\n    }\n\n    /// @notice internal helper function to claim for a user\n    function _claim(address _staker) internal returns (uint256 share) {\n        // @TODO BP and VEST_MULTIPLIER\n        uint256 share = calculateShareToClaim(_staker);\n        address[] memory _tokens = tokens;\n        uint256[] memory amounts = new uint256[](_tokens.length);\n        if (share > 0) {\n            userInfo[_staker].lastCheckpointTWAP = lastTWAP;\n            userInfo[_staker].lastCheckpointPercentageVested = getVestingPercent();\n            userInfo[_staker].lastCheckpointTime = block.timestamp;\n            userInfo[_staker].depositedShare -= share;\n            uint256 shareToBurn = (share * totalAssets) / VEST_MULTIPLIER;\n            uint256 assetValue = shareToBurn / BP;\n            _burn(address(this), assetValue);\n            for (uint256 i = 0; i < _tokens.length; i++) {\n                uint256 amount = convertShareToToken(share, i);\n                amounts[i] = amount;\n                ERC20(_tokens[i]).transfer(_staker, amount);\n            }\n            emit LogTokensClaimed(_staker, share, _tokens, amounts);\n            return share;\n        }\n    }\n\n}\n",
  "sourceMap": "2333:18387:0:-:0;;;4698:9;4667:40;;5552:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5661:5;5668:7;5677:9;2310:5:1;2303:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2325:16:1;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2351:20:1;;;;;2401:13;2382:32;;2451:24;:22;:24::i;:::-;2424:51;;-1:-1:-1;;5698:5:0::1;:18:::0;;;5706:10:::1;5698:18:::0;::::1;-1:-1:-1::0;;;;;;5698:18:0;;::::1;::::0;;;::::1;::::0;;;;5731::::1;::::0;5743:5;::::1;-1:-1:-1::0;;;;;5743:5:0::1;1899:51:3::0;;5731:18:0::1;::::0;-1:-1:-1;1887:2:3;1872:18;5731::0::1;;;;;;;5552:204:::0;;;2333:18387;;5629:492:1;5694:7;5791:141;5970:4;5954:22;;;;;;:::i;:::-;;;;;;;;;;5759:341;;;3843:25:3;;;;3884:18;;3877:34;;;;5998:14:1;3927:18:3;;;3920:34;6034:13:1;3970:18:3;;;3963:34;6077:4:1;4013:19:3;;;4006:61;3815:19;;5759:341:1;;;;;;;;;;;;5732:382;;;;;;5713:401;;5629:492;:::o;2333:18387:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2333:18387:0;;;-1:-1:-1;2333:18387:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:3;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:3;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:3:o;1036:712::-;1142:6;1150;1158;1211:2;1199:9;1190:7;1186:23;1182:32;1179:52;;;1227:1;1224;1217:12;1179:52;1254:16;;-1:-1:-1;;;;;1319:14:3;;;1316:34;;;1346:1;1343;1336:12;1316:34;1369:61;1422:7;1413:6;1402:9;1398:22;1369:61;:::i;:::-;1359:71;;1476:2;1465:9;1461:18;1455:25;1439:41;;1505:2;1495:8;1492:16;1489:36;;;1521:1;1518;1511:12;1489:36;;1544:63;1599:7;1588:8;1577:9;1573:24;1544:63;:::i;:::-;1534:73;;;1650:2;1639:9;1635:18;1629:25;1694:4;1687:5;1683:16;1676:5;1673:27;1663:55;;1714:1;1711;1704:12;1663:55;1737:5;1727:15;;;1036:712;;;;;:::o;1961:380::-;2040:1;2036:12;;;;2083;;;2104:61;;2158:4;2150:6;2146:17;2136:27;;2104:61;2211:2;2203:6;2200:14;2180:18;2177:38;2174:161;;;2257:10;2252:3;2248:20;2245:1;2238:31;2292:4;2289:1;2282:15;2320:4;2317:1;2310:15;2174:161;;1961:380;;;:::o;2475:1104::-;2605:3;2634:1;2667:6;2661:13;2697:3;2719:1;2747:9;2743:2;2739:18;2729:28;;2807:2;2796:9;2792:18;2829;2819:61;;2873:4;2865:6;2861:17;2851:27;;2819:61;2899:2;2947;2939:6;2936:14;2916:18;2913:38;2910:165;;;-1:-1:-1;;;2974:33:3;;3030:4;3027:1;3020:15;3060:4;2981:3;3048:17;2910:165;3091:18;3118:104;;;;3236:1;3231:323;;;;3084:470;;3118:104;-1:-1:-1;;3151:24:3;;3139:37;;3196:16;;;;-1:-1:-1;3118:104:3;;3231:323;2422:1;2415:14;;;2459:4;2446:18;;3329:1;3343:165;3357:6;3354:1;3351:13;3343:165;;;3435:14;;3422:11;;;3415:35;3478:16;;;;3372:10;;3343:165;;;3347:3;;3537:6;3532:3;3528:16;3521:23;;3084:470;-1:-1:-1;3570:3:3;;2475:1104;-1:-1:-1;;;;;;;;2475:1104:3:o;3584:489::-;2333:18387:0;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BuidlCollective.sol",
  "type": "contract"
}